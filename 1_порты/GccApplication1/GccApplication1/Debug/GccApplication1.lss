
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000d2  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000126  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000126  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000158  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  00000194  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000681  00000000  00000000  000001c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000057d  00000000  00000000  00000845  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002a9  00000000  00000000  00000dc2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000044  00000000  00000000  0000106c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000338  00000000  00000000  000010b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000fc  00000000  00000000  000013e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  000014e4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	24 c0       	rjmp	.+72     	; 0x4c <__bad_interrupt>
   4:	23 c0       	rjmp	.+70     	; 0x4c <__bad_interrupt>
   6:	22 c0       	rjmp	.+68     	; 0x4c <__bad_interrupt>
   8:	21 c0       	rjmp	.+66     	; 0x4c <__bad_interrupt>
   a:	20 c0       	rjmp	.+64     	; 0x4c <__bad_interrupt>
   c:	1f c0       	rjmp	.+62     	; 0x4c <__bad_interrupt>
   e:	1e c0       	rjmp	.+60     	; 0x4c <__bad_interrupt>
  10:	1d c0       	rjmp	.+58     	; 0x4c <__bad_interrupt>
  12:	1c c0       	rjmp	.+56     	; 0x4c <__bad_interrupt>
  14:	1b c0       	rjmp	.+54     	; 0x4c <__bad_interrupt>
  16:	1a c0       	rjmp	.+52     	; 0x4c <__bad_interrupt>
  18:	19 c0       	rjmp	.+50     	; 0x4c <__bad_interrupt>
  1a:	18 c0       	rjmp	.+48     	; 0x4c <__bad_interrupt>
  1c:	17 c0       	rjmp	.+46     	; 0x4c <__bad_interrupt>
  1e:	16 c0       	rjmp	.+44     	; 0x4c <__bad_interrupt>
  20:	15 c0       	rjmp	.+42     	; 0x4c <__bad_interrupt>
  22:	14 c0       	rjmp	.+40     	; 0x4c <__bad_interrupt>
  24:	13 c0       	rjmp	.+38     	; 0x4c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	e2 ed       	ldi	r30, 0xD2	; 210
  3a:	f0 e0       	ldi	r31, 0x00	; 0
  3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0
  42:	a0 36       	cpi	r26, 0x60	; 96
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>
  48:	24 d0       	rcall	.+72     	; 0x92 <main>
  4a:	41 c0       	rjmp	.+130    	; 0xce <_exit>

0000004c <__bad_interrupt>:
  4c:	d9 cf       	rjmp	.-78     	; 0x0 <__vectors>

0000004e <setup>:

const short LED_COUNT = 8;

void setup()
{
	DDRC = 0b0100011;
  4e:	83 e2       	ldi	r24, 0x23	; 35
  50:	84 bb       	out	0x14, r24	; 20
	PORTC = (1 << 0);	
  52:	81 e0       	ldi	r24, 0x01	; 1
  54:	85 bb       	out	0x15, r24	; 21
	DDRD = 0b00001000;
  56:	88 e0       	ldi	r24, 0x08	; 8
  58:	81 bb       	out	0x11, r24	; 17
	DDRB = 0b11111111;
  5a:	8f ef       	ldi	r24, 0xFF	; 255
  5c:	87 bb       	out	0x17, r24	; 23
  5e:	08 95       	ret

00000060 <running_fire>:
}

void running_fire()
{
	for(short i = 0; i < LED_COUNT; i++)
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	30 e0       	ldi	r19, 0x00	; 0
  64:	12 c0       	rjmp	.+36     	; 0x8a <running_fire+0x2a>
	{
		PORTB |= PORTB << 1;
  66:	88 b3       	in	r24, 0x18	; 24
  68:	90 e0       	ldi	r25, 0x00	; 0
  6a:	88 0f       	add	r24, r24
  6c:	99 1f       	adc	r25, r25
  6e:	98 b3       	in	r25, 0x18	; 24
  70:	89 2b       	or	r24, r25
  72:	88 bb       	out	0x18, r24	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  74:	4f e5       	ldi	r20, 0x5F	; 95
  76:	8a ee       	ldi	r24, 0xEA	; 234
  78:	90 e0       	ldi	r25, 0x00	; 0
  7a:	41 50       	subi	r20, 0x01	; 1
  7c:	80 40       	sbci	r24, 0x00	; 0
  7e:	90 40       	sbci	r25, 0x00	; 0
  80:	e1 f7       	brne	.-8      	; 0x7a <running_fire+0x1a>
  82:	00 c0       	rjmp	.+0      	; 0x84 <running_fire+0x24>
  84:	00 00       	nop
	DDRB = 0b11111111;
}

void running_fire()
{
	for(short i = 0; i < LED_COUNT; i++)
  86:	2f 5f       	subi	r18, 0xFF	; 255
  88:	3f 4f       	sbci	r19, 0xFF	; 255
  8a:	28 30       	cpi	r18, 0x08	; 8
  8c:	31 05       	cpc	r19, r1
  8e:	5c f3       	brlt	.-42     	; 0x66 <running_fire+0x6>
	{
		PORTB |= PORTB << 1;
		_delay_ms(300);
	}
}
  90:	08 95       	ret

00000092 <main>:

int main(void)
{
	setup();
  92:	dd df       	rcall	.-70     	; 0x4e <setup>
	running_fire();	
  94:	e5 df       	rcall	.-54     	; 0x60 <running_fire>
  96:	2f e5       	ldi	r18, 0x5F	; 95
  98:	8a ee       	ldi	r24, 0xEA	; 234
  9a:	90 e0       	ldi	r25, 0x00	; 0
  9c:	21 50       	subi	r18, 0x01	; 1
  9e:	80 40       	sbci	r24, 0x00	; 0
  a0:	90 40       	sbci	r25, 0x00	; 0
  a2:	e1 f7       	brne	.-8      	; 0x9c <main+0xa>
  a4:	00 c0       	rjmp	.+0      	; 0xa6 <main+0x14>
  a6:	00 00       	nop
    while (1) 
    {
		_delay_ms(300);
		PORTD = (1 << 3);
  a8:	88 e0       	ldi	r24, 0x08	; 8
  aa:	82 bb       	out	0x12, r24	; 18
  ac:	2f e5       	ldi	r18, 0x5F	; 95
  ae:	8a ee       	ldi	r24, 0xEA	; 234
  b0:	90 e0       	ldi	r25, 0x00	; 0
  b2:	21 50       	subi	r18, 0x01	; 1
  b4:	80 40       	sbci	r24, 0x00	; 0
  b6:	90 40       	sbci	r25, 0x00	; 0
  b8:	e1 f7       	brne	.-8      	; 0xb2 <main+0x20>
  ba:	00 c0       	rjmp	.+0      	; 0xbc <main+0x2a>
  bc:	00 00       	nop
		_delay_ms(300);
		PORTD = (0 << 3);
  be:	12 ba       	out	0x12, r1	; 18
		
		PORTC |= (1 << 5);
  c0:	85 b3       	in	r24, 0x15	; 21
  c2:	80 62       	ori	r24, 0x20	; 32
  c4:	85 bb       	out	0x15, r24	; 21
		PORTC |= (1 << 1);
  c6:	85 b3       	in	r24, 0x15	; 21
  c8:	82 60       	ori	r24, 0x02	; 2
  ca:	85 bb       	out	0x15, r24	; 21
  cc:	e4 cf       	rjmp	.-56     	; 0x96 <main+0x4>

000000ce <_exit>:
  ce:	f8 94       	cli

000000d0 <__stop_program>:
  d0:	ff cf       	rjmp	.-2      	; 0xd0 <__stop_program>
