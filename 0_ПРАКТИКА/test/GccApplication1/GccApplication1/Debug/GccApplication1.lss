
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000018  00800100  00000c16  00000caa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c16  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800118  00800118  00000cc2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000cc2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000d20  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000178  00000000  00000000  00000d60  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001855  00000000  00000000  00000ed8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c71  00000000  00000000  0000272d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e01  00000000  00000000  0000339e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000318  00000000  00000000  000041a0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000686  00000000  00000000  000044b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ec5  00000000  00000000  00004b3e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000138  00000000  00000000  00005a03  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e6 e1       	ldi	r30, 0x16	; 22
  7c:	fc e0       	ldi	r31, 0x0C	; 12
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a8 31       	cpi	r26, 0x18	; 24
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a8 e1       	ldi	r26, 0x18	; 24
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	aa 31       	cpi	r26, 0x1A	; 26
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 6e 02 	call	0x4dc	; 0x4dc <main>
  9e:	0c 94 09 06 	jmp	0xc12	; 0xc12 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <i2c_init>:

// тупа повторяем условие СТАРТ
unsigned char i2c_rep_start(unsigned char address)
{
    return i2c_start(address);
}
  a6:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
  aa:	88 e4       	ldi	r24, 0x48	; 72
  ac:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
  b0:	08 95       	ret

000000b2 <i2c_start>:
  b2:	94 ea       	ldi	r25, 0xA4	; 164
  b4:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  b8:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  bc:	99 23       	and	r25, r25
  be:	e4 f7       	brge	.-8      	; 0xb8 <i2c_start+0x6>
  c0:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
  c4:	98 7f       	andi	r25, 0xF8	; 248
  c6:	98 30       	cpi	r25, 0x08	; 8
  c8:	11 f0       	breq	.+4      	; 0xce <i2c_start+0x1c>
  ca:	90 31       	cpi	r25, 0x10	; 16
  cc:	91 f4       	brne	.+36     	; 0xf2 <i2c_start+0x40>
  ce:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
  d2:	84 e8       	ldi	r24, 0x84	; 132
  d4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  d8:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  dc:	88 23       	and	r24, r24
  de:	e4 f7       	brge	.-8      	; 0xd8 <i2c_start+0x26>
  e0:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
  e4:	88 7f       	andi	r24, 0xF8	; 248
  e6:	88 31       	cpi	r24, 0x18	; 24
  e8:	31 f0       	breq	.+12     	; 0xf6 <i2c_start+0x44>
  ea:	80 34       	cpi	r24, 0x40	; 64
  ec:	31 f4       	brne	.+12     	; 0xfa <i2c_start+0x48>
  ee:	80 e0       	ldi	r24, 0x00	; 0
  f0:	08 95       	ret
  f2:	81 e0       	ldi	r24, 0x01	; 1
  f4:	08 95       	ret
  f6:	80 e0       	ldi	r24, 0x00	; 0
  f8:	08 95       	ret
  fa:	81 e0       	ldi	r24, 0x01	; 1
  fc:	08 95       	ret

000000fe <i2c_stop>:

// передача условия СТОП на шину
void i2c_stop(void)
{
    // отправка условия СТОП
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
  fe:	84 e9       	ldi	r24, 0x94	; 148
 100:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	// ждем выполнения условия остановки
	while(TWCR & (1<<TWSTO));
 104:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 108:	84 fd       	sbrc	r24, 4
 10a:	fc cf       	rjmp	.-8      	; 0x104 <i2c_stop+0x6>
}
 10c:	08 95       	ret

0000010e <i2c_write>:
unsigned char i2c_write( unsigned char data )
{	
    uint8_t   twst;
    
	// отправляем данные на уст-во
	TWDR = data;
 10e:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
	TWCR = (1<<TWINT) | (1<<TWEN);
 112:	84 e8       	ldi	r24, 0x84	; 132
 114:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	// ждем завершения передачи
	while(!(TWCR & (1<<TWINT)));
 118:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 11c:	88 23       	and	r24, r24
 11e:	e4 f7       	brge	.-8      	; 0x118 <i2c_write+0xa>
	// записываем ответ от ведомого уст-ва
	twst = TW_STATUS & 0xF8;
 120:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 124:	88 7f       	andi	r24, 0xF8	; 248
	if( twst != TW_MT_DATA_ACK) return 1;
 126:	88 32       	cpi	r24, 0x28	; 40
 128:	11 f0       	breq	.+4      	; 0x12e <i2c_write+0x20>
 12a:	81 e0       	ldi	r24, 0x01	; 1
 12c:	08 95       	ret
	return 0;
 12e:	80 e0       	ldi	r24, 0x00	; 0
}
 130:	08 95       	ret

00000132 <lcd_read>:
    register char c;

    while ( (c = pgm_read_byte(progmem_s++)) ) {
        lcd_putc(c);
    }
}
 132:	cf 93       	push	r28
 134:	88 23       	and	r24, r24
 136:	31 f0       	breq	.+12     	; 0x144 <lcd_read+0x12>
 138:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 13c:	81 60       	ori	r24, 0x01	; 1
 13e:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 142:	05 c0       	rjmp	.+10     	; 0x14e <lcd_read+0x1c>
 144:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 148:	8e 7f       	andi	r24, 0xFE	; 254
 14a:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 14e:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 152:	82 60       	ori	r24, 0x02	; 2
 154:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 158:	60 91 18 01 	lds	r22, 0x0118	; 0x800118 <__data_end>
 15c:	80 e0       	ldi	r24, 0x00	; 0
 15e:	0e 94 cb 02 	call	0x596	; 0x596 <pcf8574_setoutput>
 162:	62 e0       	ldi	r22, 0x02	; 2
 164:	80 e0       	ldi	r24, 0x00	; 0
 166:	0e 94 17 03 	call	0x62e	; 0x62e <pcf8574_setoutputpinhigh>
 16a:	00 c0       	rjmp	.+0      	; 0x16c <lcd_read+0x3a>
 16c:	64 e0       	ldi	r22, 0x04	; 4
 16e:	80 e0       	ldi	r24, 0x00	; 0
 170:	0e 94 b4 02 	call	0x568	; 0x568 <pcf8574_getoutputpin>
 174:	c8 2f       	mov	r28, r24
 176:	c2 95       	swap	r28
 178:	c0 7f       	andi	r28, 0xF0	; 240
 17a:	62 e0       	ldi	r22, 0x02	; 2
 17c:	80 e0       	ldi	r24, 0x00	; 0
 17e:	0e 94 1b 03 	call	0x636	; 0x636 <pcf8574_setoutputpinlow>
 182:	00 c0       	rjmp	.+0      	; 0x184 <lcd_read+0x52>
 184:	62 e0       	ldi	r22, 0x02	; 2
 186:	80 e0       	ldi	r24, 0x00	; 0
 188:	0e 94 17 03 	call	0x62e	; 0x62e <pcf8574_setoutputpinhigh>
 18c:	00 c0       	rjmp	.+0      	; 0x18e <lcd_read+0x5c>
 18e:	64 e0       	ldi	r22, 0x04	; 4
 190:	80 e0       	ldi	r24, 0x00	; 0
 192:	0e 94 b4 02 	call	0x568	; 0x568 <pcf8574_getoutputpin>
 196:	8f 70       	andi	r24, 0x0F	; 15
 198:	c8 2b       	or	r28, r24
 19a:	62 e0       	ldi	r22, 0x02	; 2
 19c:	80 e0       	ldi	r24, 0x00	; 0
 19e:	0e 94 1b 03 	call	0x636	; 0x636 <pcf8574_setoutputpinlow>
 1a2:	8c 2f       	mov	r24, r28
 1a4:	cf 91       	pop	r28
 1a6:	08 95       	ret

000001a8 <lcd_waitbusy>:
 1a8:	80 e0       	ldi	r24, 0x00	; 0
 1aa:	0e 94 99 00 	call	0x132	; 0x132 <lcd_read>
 1ae:	88 23       	and	r24, r24
 1b0:	dc f3       	brlt	.-10     	; 0x1a8 <lcd_waitbusy>
 1b2:	88 e0       	ldi	r24, 0x08	; 8
 1b4:	90 e0       	ldi	r25, 0x00	; 0
 1b6:	01 97       	sbiw	r24, 0x01	; 1
 1b8:	f1 f7       	brne	.-4      	; 0x1b6 <lcd_waitbusy+0xe>
 1ba:	80 e0       	ldi	r24, 0x00	; 0
 1bc:	0e 94 99 00 	call	0x132	; 0x132 <lcd_read>
 1c0:	08 95       	ret

000001c2 <toggle_e>:
 1c2:	62 e0       	ldi	r22, 0x02	; 2
 1c4:	80 e0       	ldi	r24, 0x00	; 0
 1c6:	0e 94 17 03 	call	0x62e	; 0x62e <pcf8574_setoutputpinhigh>
 1ca:	00 c0       	rjmp	.+0      	; 0x1cc <toggle_e+0xa>
 1cc:	62 e0       	ldi	r22, 0x02	; 2
 1ce:	80 e0       	ldi	r24, 0x00	; 0
 1d0:	0e 94 1b 03 	call	0x636	; 0x636 <pcf8574_setoutputpinlow>
 1d4:	08 95       	ret

000001d6 <lcd_write>:
 1d6:	cf 93       	push	r28
 1d8:	c8 2f       	mov	r28, r24
 1da:	66 23       	and	r22, r22
 1dc:	31 f0       	breq	.+12     	; 0x1ea <lcd_write+0x14>
 1de:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 1e2:	81 60       	ori	r24, 0x01	; 1
 1e4:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 1e8:	05 c0       	rjmp	.+10     	; 0x1f4 <lcd_write+0x1e>
 1ea:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 1ee:	8e 7f       	andi	r24, 0xFE	; 254
 1f0:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 1f4:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 1f8:	8d 7f       	andi	r24, 0xFD	; 253
 1fa:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 1fe:	60 91 18 01 	lds	r22, 0x0118	; 0x800118 <__data_end>
 202:	80 e0       	ldi	r24, 0x00	; 0
 204:	0e 94 cb 02 	call	0x596	; 0x596 <pcf8574_setoutput>
 208:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 20c:	8f 77       	andi	r24, 0x7F	; 127
 20e:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 212:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 216:	8f 7b       	andi	r24, 0xBF	; 191
 218:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 21c:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 220:	8f 7d       	andi	r24, 0xDF	; 223
 222:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 226:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 22a:	8f 7e       	andi	r24, 0xEF	; 239
 22c:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 230:	cc 23       	and	r28, r28
 232:	2c f4       	brge	.+10     	; 0x23e <lcd_write+0x68>
 234:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 238:	80 68       	ori	r24, 0x80	; 128
 23a:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 23e:	c6 ff       	sbrs	r28, 6
 240:	05 c0       	rjmp	.+10     	; 0x24c <lcd_write+0x76>
 242:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 246:	80 64       	ori	r24, 0x40	; 64
 248:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 24c:	c5 ff       	sbrs	r28, 5
 24e:	05 c0       	rjmp	.+10     	; 0x25a <lcd_write+0x84>
 250:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 254:	80 62       	ori	r24, 0x20	; 32
 256:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 25a:	c4 ff       	sbrs	r28, 4
 25c:	05 c0       	rjmp	.+10     	; 0x268 <lcd_write+0x92>
 25e:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 262:	80 61       	ori	r24, 0x10	; 16
 264:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 268:	60 91 18 01 	lds	r22, 0x0118	; 0x800118 <__data_end>
 26c:	80 e0       	ldi	r24, 0x00	; 0
 26e:	0e 94 cb 02 	call	0x596	; 0x596 <pcf8574_setoutput>
 272:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <toggle_e>
 276:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 27a:	8f 77       	andi	r24, 0x7F	; 127
 27c:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 280:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 284:	8f 7b       	andi	r24, 0xBF	; 191
 286:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 28a:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 28e:	8f 7d       	andi	r24, 0xDF	; 223
 290:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 294:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 298:	8f 7e       	andi	r24, 0xEF	; 239
 29a:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 29e:	c3 ff       	sbrs	r28, 3
 2a0:	05 c0       	rjmp	.+10     	; 0x2ac <lcd_write+0xd6>
 2a2:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 2a6:	80 68       	ori	r24, 0x80	; 128
 2a8:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 2ac:	c2 ff       	sbrs	r28, 2
 2ae:	05 c0       	rjmp	.+10     	; 0x2ba <lcd_write+0xe4>
 2b0:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 2b4:	80 64       	ori	r24, 0x40	; 64
 2b6:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 2ba:	c1 ff       	sbrs	r28, 1
 2bc:	05 c0       	rjmp	.+10     	; 0x2c8 <lcd_write+0xf2>
 2be:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 2c2:	80 62       	ori	r24, 0x20	; 32
 2c4:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 2c8:	c0 ff       	sbrs	r28, 0
 2ca:	05 c0       	rjmp	.+10     	; 0x2d6 <lcd_write+0x100>
 2cc:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 2d0:	80 61       	ori	r24, 0x10	; 16
 2d2:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 2d6:	60 91 18 01 	lds	r22, 0x0118	; 0x800118 <__data_end>
 2da:	80 e0       	ldi	r24, 0x00	; 0
 2dc:	0e 94 cb 02 	call	0x596	; 0x596 <pcf8574_setoutput>
 2e0:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <toggle_e>
 2e4:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 2e8:	80 61       	ori	r24, 0x10	; 16
 2ea:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 2ee:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 2f2:	80 62       	ori	r24, 0x20	; 32
 2f4:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 2f8:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 2fc:	80 64       	ori	r24, 0x40	; 64
 2fe:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 302:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 306:	80 68       	ori	r24, 0x80	; 128
 308:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 30c:	60 91 18 01 	lds	r22, 0x0118	; 0x800118 <__data_end>
 310:	80 e0       	ldi	r24, 0x00	; 0
 312:	0e 94 cb 02 	call	0x596	; 0x596 <pcf8574_setoutput>
 316:	cf 91       	pop	r28
 318:	08 95       	ret

0000031a <lcd_command>:
 31a:	cf 93       	push	r28
 31c:	c8 2f       	mov	r28, r24
 31e:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <lcd_waitbusy>
 322:	60 e0       	ldi	r22, 0x00	; 0
 324:	8c 2f       	mov	r24, r28
 326:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <lcd_write>
 32a:	cf 91       	pop	r28
 32c:	08 95       	ret

0000032e <lcd_gotoxy>:
 32e:	61 11       	cpse	r22, r1
 330:	04 c0       	rjmp	.+8      	; 0x33a <lcd_gotoxy+0xc>
 332:	80 58       	subi	r24, 0x80	; 128
 334:	0e 94 8d 01 	call	0x31a	; 0x31a <lcd_command>
 338:	08 95       	ret
 33a:	80 54       	subi	r24, 0x40	; 64
 33c:	0e 94 8d 01 	call	0x31a	; 0x31a <lcd_command>
 340:	08 95       	ret

00000342 <lcd_clrscr>:
 342:	81 e0       	ldi	r24, 0x01	; 1
 344:	0e 94 8d 01 	call	0x31a	; 0x31a <lcd_command>
 348:	08 95       	ret

0000034a <lcd_led>:
 34a:	88 23       	and	r24, r24
 34c:	31 f0       	breq	.+12     	; 0x35a <lcd_led+0x10>
 34e:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 352:	87 7f       	andi	r24, 0xF7	; 247
 354:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 358:	05 c0       	rjmp	.+10     	; 0x364 <lcd_led+0x1a>
 35a:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 35e:	88 60       	ori	r24, 0x08	; 8
 360:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 364:	60 91 18 01 	lds	r22, 0x0118	; 0x800118 <__data_end>
 368:	80 e0       	ldi	r24, 0x00	; 0
 36a:	0e 94 cb 02 	call	0x596	; 0x596 <pcf8574_setoutput>
 36e:	08 95       	ret

00000370 <lcd_home>:
 370:	82 e0       	ldi	r24, 0x02	; 2
 372:	0e 94 8d 01 	call	0x31a	; 0x31a <lcd_command>
 376:	08 95       	ret

00000378 <lcd_putc>:
 378:	cf 93       	push	r28
 37a:	c8 2f       	mov	r28, r24
 37c:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <lcd_waitbusy>
 380:	ca 30       	cpi	r28, 0x0A	; 10
 382:	49 f4       	brne	.+18     	; 0x396 <lcd_putc+0x1e>
 384:	80 34       	cpi	r24, 0x40	; 64
 386:	10 f4       	brcc	.+4      	; 0x38c <lcd_putc+0x14>
 388:	80 e4       	ldi	r24, 0x40	; 64
 38a:	01 c0       	rjmp	.+2      	; 0x38e <lcd_putc+0x16>
 38c:	80 e0       	ldi	r24, 0x00	; 0
 38e:	80 58       	subi	r24, 0x80	; 128
 390:	0e 94 8d 01 	call	0x31a	; 0x31a <lcd_command>
 394:	13 c0       	rjmp	.+38     	; 0x3bc <lcd_putc+0x44>
 396:	80 31       	cpi	r24, 0x10	; 16
 398:	29 f4       	brne	.+10     	; 0x3a4 <lcd_putc+0x2c>
 39a:	60 e0       	ldi	r22, 0x00	; 0
 39c:	80 ec       	ldi	r24, 0xC0	; 192
 39e:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <lcd_write>
 3a2:	06 c0       	rjmp	.+12     	; 0x3b0 <lcd_putc+0x38>
 3a4:	80 35       	cpi	r24, 0x50	; 80
 3a6:	21 f4       	brne	.+8      	; 0x3b0 <lcd_putc+0x38>
 3a8:	60 e0       	ldi	r22, 0x00	; 0
 3aa:	80 e8       	ldi	r24, 0x80	; 128
 3ac:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <lcd_write>
 3b0:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <lcd_waitbusy>
 3b4:	61 e0       	ldi	r22, 0x01	; 1
 3b6:	8c 2f       	mov	r24, r28
 3b8:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <lcd_write>
 3bc:	cf 91       	pop	r28
 3be:	08 95       	ret

000003c0 <lcd_puts>:
 3c0:	cf 93       	push	r28
 3c2:	df 93       	push	r29
 3c4:	fc 01       	movw	r30, r24
 3c6:	03 c0       	rjmp	.+6      	; 0x3ce <lcd_puts+0xe>
 3c8:	0e 94 bc 01 	call	0x378	; 0x378 <lcd_putc>
 3cc:	fe 01       	movw	r30, r28
 3ce:	ef 01       	movw	r28, r30
 3d0:	21 96       	adiw	r28, 0x01	; 1
 3d2:	80 81       	ld	r24, Z
 3d4:	81 11       	cpse	r24, r1
 3d6:	f8 cf       	rjmp	.-16     	; 0x3c8 <lcd_puts+0x8>
 3d8:	df 91       	pop	r29
 3da:	cf 91       	pop	r28
 3dc:	08 95       	ret

000003de <lcd_init>:

// инициализация дисплея
void lcd_init(uint8_t dispAttr)
{
 3de:	1f 93       	push	r17
 3e0:	cf 93       	push	r28
 3e2:	df 93       	push	r29
 3e4:	18 2f       	mov	r17, r24
	#if LCD_PCF8574_INIT == 1
	//инициализация pcf
	pcf8574_init();
 3e6:	0e 94 a3 02 	call	0x546	; 0x546 <pcf8574_init>
	#endif

	dataport = 0;
 3ea:	10 92 18 01 	sts	0x0118, r1	; 0x800118 <__data_end>
	pcf8574_setoutput(LCD_PCF8574_DEVICEID, dataport);
 3ee:	60 91 18 01 	lds	r22, 0x0118	; 0x800118 <__data_end>
 3f2:	80 e0       	ldi	r24, 0x00	; 0
 3f4:	0e 94 cb 02 	call	0x596	; 0x596 <pcf8574_setoutput>
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    
    else
        __asm__ __volatile__ (
 3f8:	80 e0       	ldi	r24, 0x00	; 0
 3fa:	9a ef       	ldi	r25, 0xFA	; 250
 3fc:	01 97       	sbiw	r24, 0x01	; 1
 3fe:	f1 f7       	brne	.-4      	; 0x3fc <lcd_init+0x1e>
	pcf8574_setoutput(LCD_PCF8574_DEVICEID, dataport);

    delay(16000);

    // первоначальная запись на ЖК-дисплей — 8 бит
    dataport |= _BV(LCD_DATA1_PIN);  // _BV(LCD_FUNCTION)>>4;
 400:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 404:	80 62       	ori	r24, 0x20	; 32
 406:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
    dataport |= _BV(LCD_DATA0_PIN);  // _BV(LCD_FUNCTION_8BIT)>>4;
 40a:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 40e:	80 61       	ori	r24, 0x10	; 16
 410:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
    pcf8574_setoutput(LCD_PCF8574_DEVICEID, dataport);
 414:	60 91 18 01 	lds	r22, 0x0118	; 0x800118 <__data_end>
 418:	80 e0       	ldi	r24, 0x00	; 0
 41a:	0e 94 cb 02 	call	0x596	; 0x596 <pcf8574_setoutput>

	// дрючим дисплей чтобы он начал работать
    lcd_e_toggle();
 41e:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <toggle_e>
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    
    else
        __asm__ __volatile__ (
 422:	80 e0       	ldi	r24, 0x00	; 0
 424:	9e e4       	ldi	r25, 0x4E	; 78
 426:	01 97       	sbiw	r24, 0x01	; 1
 428:	f1 f7       	brne	.-4      	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
    pcf8574_setoutput(LCD_PCF8574_DEVICEID, dataport);

	// дрючим дисплей чтобы он начал работать
    lcd_e_toggle();
    delay(4992);
    lcd_e_toggle();      
 42a:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <toggle_e>
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    
    else
        __asm__ __volatile__ (
 42e:	c0 e0       	ldi	r28, 0x00	; 0
 430:	d1 e0       	ldi	r29, 0x01	; 1
 432:	ce 01       	movw	r24, r28
 434:	01 97       	sbiw	r24, 0x01	; 1
 436:	f1 f7       	brne	.-4      	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
	// дрючим дисплей чтобы он начал работать
    lcd_e_toggle();
    delay(4992);
    lcd_e_toggle();      
    delay(64);        
    lcd_e_toggle();      
 438:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <toggle_e>
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    
    else
        __asm__ __volatile__ (
 43c:	ce 01       	movw	r24, r28
 43e:	01 97       	sbiw	r24, 0x01	; 1
 440:	f1 f7       	brne	.-4      	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
    delay(64);        
    lcd_e_toggle();      
    delay(64);          

    // переходим в 4 битный режим
    dataport &= ~_BV(LCD_DATA0_PIN);
 442:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 446:	8f 7e       	andi	r24, 0xEF	; 239
 448:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
    pcf8574_setoutput(LCD_PCF8574_DEVICEID, dataport);
 44c:	60 91 18 01 	lds	r22, 0x0118	; 0x800118 <__data_end>
 450:	80 e0       	ldi	r24, 0x00	; 0
 452:	0e 94 cb 02 	call	0x596	; 0x596 <pcf8574_setoutput>
    lcd_e_toggle();
 456:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <toggle_e>
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    
    else
        __asm__ __volatile__ (
 45a:	21 97       	sbiw	r28, 0x01	; 1
 45c:	f1 f7       	brne	.-4      	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
    pcf8574_setoutput(LCD_PCF8574_DEVICEID, dataport);
    lcd_e_toggle();
    delay(64); 
    

    lcd_command(LCD_FUNCTION_DEFAULT);      // настраиваем кол-во строк
 45e:	88 e2       	ldi	r24, 0x28	; 40
 460:	0e 94 8d 01 	call	0x31a	; 0x31a <lcd_command>
    lcd_command(LCD_DISP_OFF);              // вырубаем дисплей
 464:	88 e0       	ldi	r24, 0x08	; 8
 466:	0e 94 8d 01 	call	0x31a	; 0x31a <lcd_command>
    lcd_clrscr();                           // чистим экран
 46a:	0e 94 a1 01 	call	0x342	; 0x342 <lcd_clrscr>
    lcd_command(LCD_MODE_DEFAULT);          // запускаемся в стандартном режиме
 46e:	86 e0       	ldi	r24, 0x06	; 6
 470:	0e 94 8d 01 	call	0x31a	; 0x31a <lcd_command>
    lcd_command(dispAttr);                  // отправляем настройки
 474:	81 2f       	mov	r24, r17
 476:	0e 94 8d 01 	call	0x31a	; 0x31a <lcd_command>
}
 47a:	df 91       	pop	r29
 47c:	cf 91       	pop	r28
 47e:	1f 91       	pop	r17
 480:	08 95       	ret

00000482 <lcd_puts_num>:
#include "main.h"

void lcd_puts_num(int number)
{
 482:	0f 93       	push	r16
 484:	1f 93       	push	r17
 486:	cf 93       	push	r28
 488:	df 93       	push	r29
 48a:	cd b7       	in	r28, 0x3d	; 61
 48c:	de b7       	in	r29, 0x3e	; 62
 48e:	da 95       	dec	r29
 490:	0f b6       	in	r0, 0x3f	; 63
 492:	f8 94       	cli
 494:	de bf       	out	0x3e, r29	; 62
 496:	0f be       	out	0x3f, r0	; 63
 498:	cd bf       	out	0x3d, r28	; 61
	char data[256];
	sprintf(data, "%d", number);
 49a:	9f 93       	push	r25
 49c:	8f 93       	push	r24
 49e:	80 e0       	ldi	r24, 0x00	; 0
 4a0:	91 e0       	ldi	r25, 0x01	; 1
 4a2:	9f 93       	push	r25
 4a4:	8f 93       	push	r24
 4a6:	8e 01       	movw	r16, r28
 4a8:	0f 5f       	subi	r16, 0xFF	; 255
 4aa:	1f 4f       	sbci	r17, 0xFF	; 255
 4ac:	1f 93       	push	r17
 4ae:	0f 93       	push	r16
 4b0:	0e 94 1f 03 	call	0x63e	; 0x63e <sprintf>
	lcd_puts(data);
 4b4:	c8 01       	movw	r24, r16
 4b6:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <lcd_puts>
}
 4ba:	0f 90       	pop	r0
 4bc:	0f 90       	pop	r0
 4be:	0f 90       	pop	r0
 4c0:	0f 90       	pop	r0
 4c2:	0f 90       	pop	r0
 4c4:	0f 90       	pop	r0
 4c6:	d3 95       	inc	r29
 4c8:	0f b6       	in	r0, 0x3f	; 63
 4ca:	f8 94       	cli
 4cc:	de bf       	out	0x3e, r29	; 62
 4ce:	0f be       	out	0x3f, r0	; 63
 4d0:	cd bf       	out	0x3d, r28	; 61
 4d2:	df 91       	pop	r29
 4d4:	cf 91       	pop	r28
 4d6:	1f 91       	pop	r17
 4d8:	0f 91       	pop	r16
 4da:	08 95       	ret

000004dc <main>:

int main(void)
{
	uint8_t count = 0;
	
	lcd_init(LCD_DISP_ON_BLINK);
 4dc:	8d e0       	ldi	r24, 0x0D	; 13
 4de:	0e 94 ef 01 	call	0x3de	; 0x3de <lcd_init>
	lcd_home();
 4e2:	0e 94 b8 01 	call	0x370	; 0x370 <lcd_home>
	lcd_led(0);
 4e6:	80 e0       	ldi	r24, 0x00	; 0
 4e8:	0e 94 a5 01 	call	0x34a	; 0x34a <lcd_led>
	lcd_gotoxy(0, 0);
 4ec:	60 e0       	ldi	r22, 0x00	; 0
 4ee:	80 e0       	ldi	r24, 0x00	; 0
 4f0:	0e 94 97 01 	call	0x32e	; 0x32e <lcd_gotoxy>
	lcd_puts("Hello epta!");
 4f4:	83 e0       	ldi	r24, 0x03	; 3
 4f6:	91 e0       	ldi	r25, 0x01	; 1
 4f8:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <lcd_puts>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 4fc:	2f ef       	ldi	r18, 0xFF	; 255
 4fe:	83 ed       	ldi	r24, 0xD3	; 211
 500:	90 e3       	ldi	r25, 0x30	; 48
 502:	21 50       	subi	r18, 0x01	; 1
 504:	80 40       	sbci	r24, 0x00	; 0
 506:	90 40       	sbci	r25, 0x00	; 0
 508:	e1 f7       	brne	.-8      	; 0x502 <main+0x26>
 50a:	00 c0       	rjmp	.+0      	; 0x50c <main+0x30>
 50c:	00 00       	nop
	_delay_ms(1000);
	lcd_clrscr();
 50e:	0e 94 a1 01 	call	0x342	; 0x342 <lcd_clrscr>
	lcd_puts(data);
}

int main(void)
{
	uint8_t count = 0;
 512:	c0 e0       	ldi	r28, 0x00	; 0
	lcd_puts("Hello epta!");
	_delay_ms(1000);
	lcd_clrscr();
	while (1)
	{
		lcd_home();
 514:	0e 94 b8 01 	call	0x370	; 0x370 <lcd_home>
		lcd_puts("Count = ");
 518:	8f e0       	ldi	r24, 0x0F	; 15
 51a:	91 e0       	ldi	r25, 0x01	; 1
 51c:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <lcd_puts>
		lcd_gotoxy(8, 0);
 520:	60 e0       	ldi	r22, 0x00	; 0
 522:	88 e0       	ldi	r24, 0x08	; 8
 524:	0e 94 97 01 	call	0x32e	; 0x32e <lcd_gotoxy>
		lcd_puts_num(count);
 528:	8c 2f       	mov	r24, r28
 52a:	90 e0       	ldi	r25, 0x00	; 0
 52c:	0e 94 41 02 	call	0x482	; 0x482 <lcd_puts_num>
		count++;
 530:	cf 5f       	subi	r28, 0xFF	; 255
 532:	2f ef       	ldi	r18, 0xFF	; 255
 534:	83 ed       	ldi	r24, 0xD3	; 211
 536:	90 e3       	ldi	r25, 0x30	; 48
 538:	21 50       	subi	r18, 0x01	; 1
 53a:	80 40       	sbci	r24, 0x00	; 0
 53c:	90 40       	sbci	r25, 0x00	; 0
 53e:	e1 f7       	brne	.-8      	; 0x538 <main+0x5c>
 540:	00 c0       	rjmp	.+0      	; 0x542 <main+0x66>
 542:	00 00       	nop
 544:	e7 cf       	rjmp	.-50     	; 0x514 <main+0x38>

00000546 <pcf8574_init>:
		i2c_write(b);
		i2c_stop();
		return 0;
	}
	return -1;
}
 546:	0e 94 53 00 	call	0xa6	; 0xa6 <i2c_init>
 54a:	85 e3       	ldi	r24, 0x35	; 53
 54c:	8a 95       	dec	r24
 54e:	f1 f7       	brne	.-4      	; 0x54c <pcf8574_init+0x6>
 550:	00 00       	nop
 552:	80 e0       	ldi	r24, 0x00	; 0
 554:	06 c0       	rjmp	.+12     	; 0x562 <pcf8574_init+0x1c>
 556:	e8 2f       	mov	r30, r24
 558:	f0 e0       	ldi	r31, 0x00	; 0
 55a:	e7 5e       	subi	r30, 0xE7	; 231
 55c:	fe 4f       	sbci	r31, 0xFE	; 254
 55e:	10 82       	st	Z, r1
 560:	8f 5f       	subi	r24, 0xFF	; 255
 562:	88 23       	and	r24, r24
 564:	c1 f3       	breq	.-16     	; 0x556 <pcf8574_init+0x10>
 566:	08 95       	ret

00000568 <pcf8574_getoutputpin>:
 568:	81 11       	cpse	r24, r1
 56a:	11 c0       	rjmp	.+34     	; 0x58e <pcf8574_getoutputpin+0x26>
 56c:	68 30       	cpi	r22, 0x08	; 8
 56e:	88 f4       	brcc	.+34     	; 0x592 <pcf8574_getoutputpin+0x2a>
 570:	e8 2f       	mov	r30, r24
 572:	f0 e0       	ldi	r31, 0x00	; 0
 574:	e7 5e       	subi	r30, 0xE7	; 231
 576:	fe 4f       	sbci	r31, 0xFE	; 254
 578:	80 81       	ld	r24, Z
 57a:	08 2e       	mov	r0, r24
 57c:	00 0c       	add	r0, r0
 57e:	99 0b       	sbc	r25, r25
 580:	02 c0       	rjmp	.+4      	; 0x586 <pcf8574_getoutputpin+0x1e>
 582:	95 95       	asr	r25
 584:	87 95       	ror	r24
 586:	6a 95       	dec	r22
 588:	e2 f7       	brpl	.-8      	; 0x582 <pcf8574_getoutputpin+0x1a>
 58a:	81 70       	andi	r24, 0x01	; 1
 58c:	08 95       	ret
 58e:	8f ef       	ldi	r24, 0xFF	; 255
 590:	08 95       	ret
 592:	8f ef       	ldi	r24, 0xFF	; 255
 594:	08 95       	ret

00000596 <pcf8574_setoutput>:
 596:	cf 93       	push	r28
 598:	81 11       	cpse	r24, r1
 59a:	11 c0       	rjmp	.+34     	; 0x5be <pcf8574_setoutput+0x28>
 59c:	c6 2f       	mov	r28, r22
 59e:	e8 2f       	mov	r30, r24
 5a0:	f0 e0       	ldi	r31, 0x00	; 0
 5a2:	e7 5e       	subi	r30, 0xE7	; 231
 5a4:	fe 4f       	sbci	r31, 0xFE	; 254
 5a6:	60 83       	st	Z, r22
 5a8:	89 5d       	subi	r24, 0xD9	; 217
 5aa:	88 0f       	add	r24, r24
 5ac:	0e 94 59 00 	call	0xb2	; 0xb2 <i2c_start>
 5b0:	8c 2f       	mov	r24, r28
 5b2:	0e 94 87 00 	call	0x10e	; 0x10e <i2c_write>
 5b6:	0e 94 7f 00 	call	0xfe	; 0xfe <i2c_stop>
 5ba:	80 e0       	ldi	r24, 0x00	; 0
 5bc:	01 c0       	rjmp	.+2      	; 0x5c0 <pcf8574_setoutput+0x2a>
 5be:	8f ef       	ldi	r24, 0xFF	; 255
 5c0:	cf 91       	pop	r28
 5c2:	08 95       	ret

000005c4 <pcf8574_setoutputpin>:

// настройка пинов вывода
int8_t pcf8574_setoutputpin(uint8_t deviceid, uint8_t pin, uint8_t data) {
 5c4:	cf 93       	push	r28
 5c6:	df 93       	push	r29
	if((deviceid >= 0 && deviceid < PCF8574_MAXDEVICES) && (pin >= 0 && pin < PCF8574_MAXPINS)) {
 5c8:	81 11       	cpse	r24, r1
 5ca:	2b c0       	rjmp	.+86     	; 0x622 <pcf8574_setoutputpin+0x5e>
 5cc:	68 30       	cpi	r22, 0x08	; 8
 5ce:	58 f5       	brcc	.+86     	; 0x626 <pcf8574_setoutputpin+0x62>
	    uint8_t b = 0;
	    b = pcf8574_pinstatus[deviceid];
 5d0:	28 2f       	mov	r18, r24
 5d2:	30 e0       	ldi	r19, 0x00	; 0
 5d4:	f9 01       	movw	r30, r18
 5d6:	e7 5e       	subi	r30, 0xE7	; 231
 5d8:	fe 4f       	sbci	r31, 0xFE	; 254
 5da:	90 81       	ld	r25, Z
	    b = (data != 0) ? (b | (1 << pin)) : (b & ~(1 << pin));
 5dc:	44 23       	and	r20, r20
 5de:	49 f0       	breq	.+18     	; 0x5f2 <pcf8574_setoutputpin+0x2e>
 5e0:	c1 e0       	ldi	r28, 0x01	; 1
 5e2:	d0 e0       	ldi	r29, 0x00	; 0
 5e4:	02 c0       	rjmp	.+4      	; 0x5ea <pcf8574_setoutputpin+0x26>
 5e6:	cc 0f       	add	r28, r28
 5e8:	dd 1f       	adc	r29, r29
 5ea:	6a 95       	dec	r22
 5ec:	e2 f7       	brpl	.-8      	; 0x5e6 <pcf8574_setoutputpin+0x22>
 5ee:	c9 2b       	or	r28, r25
 5f0:	09 c0       	rjmp	.+18     	; 0x604 <pcf8574_setoutputpin+0x40>
 5f2:	c1 e0       	ldi	r28, 0x01	; 1
 5f4:	d0 e0       	ldi	r29, 0x00	; 0
 5f6:	02 c0       	rjmp	.+4      	; 0x5fc <pcf8574_setoutputpin+0x38>
 5f8:	cc 0f       	add	r28, r28
 5fa:	dd 1f       	adc	r29, r29
 5fc:	6a 95       	dec	r22
 5fe:	e2 f7       	brpl	.-8      	; 0x5f8 <pcf8574_setoutputpin+0x34>
 600:	c0 95       	com	r28
 602:	c9 23       	and	r28, r25
	    pcf8574_pinstatus[deviceid] = b;
 604:	f9 01       	movw	r30, r18
 606:	e7 5e       	subi	r30, 0xE7	; 231
 608:	fe 4f       	sbci	r31, 0xFE	; 254
 60a:	c0 83       	st	Z, r28
	    //рестартим
		i2c_start(((PCF8574_ADDRBASE+deviceid)<<1) | I2C_WRITE);
 60c:	89 5d       	subi	r24, 0xD9	; 217
 60e:	88 0f       	add	r24, r24
 610:	0e 94 59 00 	call	0xb2	; 0xb2 <i2c_start>
		i2c_write(b);
 614:	8c 2f       	mov	r24, r28
 616:	0e 94 87 00 	call	0x10e	; 0x10e <i2c_write>
		i2c_stop();
 61a:	0e 94 7f 00 	call	0xfe	; 0xfe <i2c_stop>
		return 0;
 61e:	80 e0       	ldi	r24, 0x00	; 0
 620:	03 c0       	rjmp	.+6      	; 0x628 <pcf8574_setoutputpin+0x64>
	}
	return -1;
 622:	8f ef       	ldi	r24, 0xFF	; 255
 624:	01 c0       	rjmp	.+2      	; 0x628 <pcf8574_setoutputpin+0x64>
 626:	8f ef       	ldi	r24, 0xFF	; 255
}
 628:	df 91       	pop	r29
 62a:	cf 91       	pop	r28
 62c:	08 95       	ret

0000062e <pcf8574_setoutputpinhigh>:

// установка высокого уровня на выходных пинах
int8_t pcf8574_setoutputpinhigh(uint8_t deviceid, uint8_t pin) {
	return pcf8574_setoutputpin(deviceid, pin, 1);
 62e:	41 e0       	ldi	r20, 0x01	; 1
 630:	0e 94 e2 02 	call	0x5c4	; 0x5c4 <pcf8574_setoutputpin>
}
 634:	08 95       	ret

00000636 <pcf8574_setoutputpinlow>:

// установка низкого уровня на выходных пинах
int8_t pcf8574_setoutputpinlow(uint8_t deviceid, uint8_t pin) {
	return pcf8574_setoutputpin(deviceid, pin, 0);
 636:	40 e0       	ldi	r20, 0x00	; 0
 638:	0e 94 e2 02 	call	0x5c4	; 0x5c4 <pcf8574_setoutputpin>
}
 63c:	08 95       	ret

0000063e <sprintf>:
 63e:	ae e0       	ldi	r26, 0x0E	; 14
 640:	b0 e0       	ldi	r27, 0x00	; 0
 642:	e5 e2       	ldi	r30, 0x25	; 37
 644:	f3 e0       	ldi	r31, 0x03	; 3
 646:	0c 94 e0 05 	jmp	0xbc0	; 0xbc0 <__prologue_saves__+0x1c>
 64a:	0d 89       	ldd	r16, Y+21	; 0x15
 64c:	1e 89       	ldd	r17, Y+22	; 0x16
 64e:	86 e0       	ldi	r24, 0x06	; 6
 650:	8c 83       	std	Y+4, r24	; 0x04
 652:	1a 83       	std	Y+2, r17	; 0x02
 654:	09 83       	std	Y+1, r16	; 0x01
 656:	8f ef       	ldi	r24, 0xFF	; 255
 658:	9f e7       	ldi	r25, 0x7F	; 127
 65a:	9e 83       	std	Y+6, r25	; 0x06
 65c:	8d 83       	std	Y+5, r24	; 0x05
 65e:	ae 01       	movw	r20, r28
 660:	47 5e       	subi	r20, 0xE7	; 231
 662:	5f 4f       	sbci	r21, 0xFF	; 255
 664:	6f 89       	ldd	r22, Y+23	; 0x17
 666:	78 8d       	ldd	r23, Y+24	; 0x18
 668:	ce 01       	movw	r24, r28
 66a:	01 96       	adiw	r24, 0x01	; 1
 66c:	0e 94 41 03 	call	0x682	; 0x682 <vfprintf>
 670:	ef 81       	ldd	r30, Y+7	; 0x07
 672:	f8 85       	ldd	r31, Y+8	; 0x08
 674:	e0 0f       	add	r30, r16
 676:	f1 1f       	adc	r31, r17
 678:	10 82       	st	Z, r1
 67a:	2e 96       	adiw	r28, 0x0e	; 14
 67c:	e4 e0       	ldi	r30, 0x04	; 4
 67e:	0c 94 fc 05 	jmp	0xbf8	; 0xbf8 <__epilogue_restores__+0x1c>

00000682 <vfprintf>:
 682:	ab e0       	ldi	r26, 0x0B	; 11
 684:	b0 e0       	ldi	r27, 0x00	; 0
 686:	e7 e4       	ldi	r30, 0x47	; 71
 688:	f3 e0       	ldi	r31, 0x03	; 3
 68a:	0c 94 d2 05 	jmp	0xba4	; 0xba4 <__prologue_saves__>
 68e:	6c 01       	movw	r12, r24
 690:	7b 01       	movw	r14, r22
 692:	8a 01       	movw	r16, r20
 694:	fc 01       	movw	r30, r24
 696:	17 82       	std	Z+7, r1	; 0x07
 698:	16 82       	std	Z+6, r1	; 0x06
 69a:	83 81       	ldd	r24, Z+3	; 0x03
 69c:	81 ff       	sbrs	r24, 1
 69e:	cc c1       	rjmp	.+920    	; 0xa38 <__stack+0x139>
 6a0:	ce 01       	movw	r24, r28
 6a2:	01 96       	adiw	r24, 0x01	; 1
 6a4:	3c 01       	movw	r6, r24
 6a6:	f6 01       	movw	r30, r12
 6a8:	93 81       	ldd	r25, Z+3	; 0x03
 6aa:	f7 01       	movw	r30, r14
 6ac:	93 fd       	sbrc	r25, 3
 6ae:	85 91       	lpm	r24, Z+
 6b0:	93 ff       	sbrs	r25, 3
 6b2:	81 91       	ld	r24, Z+
 6b4:	7f 01       	movw	r14, r30
 6b6:	88 23       	and	r24, r24
 6b8:	09 f4       	brne	.+2      	; 0x6bc <vfprintf+0x3a>
 6ba:	ba c1       	rjmp	.+884    	; 0xa30 <__stack+0x131>
 6bc:	85 32       	cpi	r24, 0x25	; 37
 6be:	39 f4       	brne	.+14     	; 0x6ce <vfprintf+0x4c>
 6c0:	93 fd       	sbrc	r25, 3
 6c2:	85 91       	lpm	r24, Z+
 6c4:	93 ff       	sbrs	r25, 3
 6c6:	81 91       	ld	r24, Z+
 6c8:	7f 01       	movw	r14, r30
 6ca:	85 32       	cpi	r24, 0x25	; 37
 6cc:	29 f4       	brne	.+10     	; 0x6d8 <vfprintf+0x56>
 6ce:	b6 01       	movw	r22, r12
 6d0:	90 e0       	ldi	r25, 0x00	; 0
 6d2:	0e 94 38 05 	call	0xa70	; 0xa70 <fputc>
 6d6:	e7 cf       	rjmp	.-50     	; 0x6a6 <vfprintf+0x24>
 6d8:	91 2c       	mov	r9, r1
 6da:	21 2c       	mov	r2, r1
 6dc:	31 2c       	mov	r3, r1
 6de:	ff e1       	ldi	r31, 0x1F	; 31
 6e0:	f3 15       	cp	r31, r3
 6e2:	d8 f0       	brcs	.+54     	; 0x71a <vfprintf+0x98>
 6e4:	8b 32       	cpi	r24, 0x2B	; 43
 6e6:	79 f0       	breq	.+30     	; 0x706 <vfprintf+0x84>
 6e8:	38 f4       	brcc	.+14     	; 0x6f8 <vfprintf+0x76>
 6ea:	80 32       	cpi	r24, 0x20	; 32
 6ec:	79 f0       	breq	.+30     	; 0x70c <vfprintf+0x8a>
 6ee:	83 32       	cpi	r24, 0x23	; 35
 6f0:	a1 f4       	brne	.+40     	; 0x71a <vfprintf+0x98>
 6f2:	23 2d       	mov	r18, r3
 6f4:	20 61       	ori	r18, 0x10	; 16
 6f6:	1d c0       	rjmp	.+58     	; 0x732 <vfprintf+0xb0>
 6f8:	8d 32       	cpi	r24, 0x2D	; 45
 6fa:	61 f0       	breq	.+24     	; 0x714 <vfprintf+0x92>
 6fc:	80 33       	cpi	r24, 0x30	; 48
 6fe:	69 f4       	brne	.+26     	; 0x71a <vfprintf+0x98>
 700:	23 2d       	mov	r18, r3
 702:	21 60       	ori	r18, 0x01	; 1
 704:	16 c0       	rjmp	.+44     	; 0x732 <vfprintf+0xb0>
 706:	83 2d       	mov	r24, r3
 708:	82 60       	ori	r24, 0x02	; 2
 70a:	38 2e       	mov	r3, r24
 70c:	e3 2d       	mov	r30, r3
 70e:	e4 60       	ori	r30, 0x04	; 4
 710:	3e 2e       	mov	r3, r30
 712:	2a c0       	rjmp	.+84     	; 0x768 <vfprintf+0xe6>
 714:	f3 2d       	mov	r31, r3
 716:	f8 60       	ori	r31, 0x08	; 8
 718:	1d c0       	rjmp	.+58     	; 0x754 <vfprintf+0xd2>
 71a:	37 fc       	sbrc	r3, 7
 71c:	2d c0       	rjmp	.+90     	; 0x778 <vfprintf+0xf6>
 71e:	20 ed       	ldi	r18, 0xD0	; 208
 720:	28 0f       	add	r18, r24
 722:	2a 30       	cpi	r18, 0x0A	; 10
 724:	40 f0       	brcs	.+16     	; 0x736 <vfprintf+0xb4>
 726:	8e 32       	cpi	r24, 0x2E	; 46
 728:	b9 f4       	brne	.+46     	; 0x758 <vfprintf+0xd6>
 72a:	36 fc       	sbrc	r3, 6
 72c:	81 c1       	rjmp	.+770    	; 0xa30 <__stack+0x131>
 72e:	23 2d       	mov	r18, r3
 730:	20 64       	ori	r18, 0x40	; 64
 732:	32 2e       	mov	r3, r18
 734:	19 c0       	rjmp	.+50     	; 0x768 <vfprintf+0xe6>
 736:	36 fe       	sbrs	r3, 6
 738:	06 c0       	rjmp	.+12     	; 0x746 <vfprintf+0xc4>
 73a:	8a e0       	ldi	r24, 0x0A	; 10
 73c:	98 9e       	mul	r9, r24
 73e:	20 0d       	add	r18, r0
 740:	11 24       	eor	r1, r1
 742:	92 2e       	mov	r9, r18
 744:	11 c0       	rjmp	.+34     	; 0x768 <vfprintf+0xe6>
 746:	ea e0       	ldi	r30, 0x0A	; 10
 748:	2e 9e       	mul	r2, r30
 74a:	20 0d       	add	r18, r0
 74c:	11 24       	eor	r1, r1
 74e:	22 2e       	mov	r2, r18
 750:	f3 2d       	mov	r31, r3
 752:	f0 62       	ori	r31, 0x20	; 32
 754:	3f 2e       	mov	r3, r31
 756:	08 c0       	rjmp	.+16     	; 0x768 <vfprintf+0xe6>
 758:	8c 36       	cpi	r24, 0x6C	; 108
 75a:	21 f4       	brne	.+8      	; 0x764 <vfprintf+0xe2>
 75c:	83 2d       	mov	r24, r3
 75e:	80 68       	ori	r24, 0x80	; 128
 760:	38 2e       	mov	r3, r24
 762:	02 c0       	rjmp	.+4      	; 0x768 <vfprintf+0xe6>
 764:	88 36       	cpi	r24, 0x68	; 104
 766:	41 f4       	brne	.+16     	; 0x778 <vfprintf+0xf6>
 768:	f7 01       	movw	r30, r14
 76a:	93 fd       	sbrc	r25, 3
 76c:	85 91       	lpm	r24, Z+
 76e:	93 ff       	sbrs	r25, 3
 770:	81 91       	ld	r24, Z+
 772:	7f 01       	movw	r14, r30
 774:	81 11       	cpse	r24, r1
 776:	b3 cf       	rjmp	.-154    	; 0x6de <vfprintf+0x5c>
 778:	98 2f       	mov	r25, r24
 77a:	9f 7d       	andi	r25, 0xDF	; 223
 77c:	95 54       	subi	r25, 0x45	; 69
 77e:	93 30       	cpi	r25, 0x03	; 3
 780:	28 f4       	brcc	.+10     	; 0x78c <vfprintf+0x10a>
 782:	0c 5f       	subi	r16, 0xFC	; 252
 784:	1f 4f       	sbci	r17, 0xFF	; 255
 786:	9f e3       	ldi	r25, 0x3F	; 63
 788:	99 83       	std	Y+1, r25	; 0x01
 78a:	0d c0       	rjmp	.+26     	; 0x7a6 <vfprintf+0x124>
 78c:	83 36       	cpi	r24, 0x63	; 99
 78e:	31 f0       	breq	.+12     	; 0x79c <vfprintf+0x11a>
 790:	83 37       	cpi	r24, 0x73	; 115
 792:	71 f0       	breq	.+28     	; 0x7b0 <vfprintf+0x12e>
 794:	83 35       	cpi	r24, 0x53	; 83
 796:	09 f0       	breq	.+2      	; 0x79a <vfprintf+0x118>
 798:	59 c0       	rjmp	.+178    	; 0x84c <__DATA_REGION_LENGTH__+0x4c>
 79a:	21 c0       	rjmp	.+66     	; 0x7de <vfprintf+0x15c>
 79c:	f8 01       	movw	r30, r16
 79e:	80 81       	ld	r24, Z
 7a0:	89 83       	std	Y+1, r24	; 0x01
 7a2:	0e 5f       	subi	r16, 0xFE	; 254
 7a4:	1f 4f       	sbci	r17, 0xFF	; 255
 7a6:	88 24       	eor	r8, r8
 7a8:	83 94       	inc	r8
 7aa:	91 2c       	mov	r9, r1
 7ac:	53 01       	movw	r10, r6
 7ae:	13 c0       	rjmp	.+38     	; 0x7d6 <vfprintf+0x154>
 7b0:	28 01       	movw	r4, r16
 7b2:	f2 e0       	ldi	r31, 0x02	; 2
 7b4:	4f 0e       	add	r4, r31
 7b6:	51 1c       	adc	r5, r1
 7b8:	f8 01       	movw	r30, r16
 7ba:	a0 80       	ld	r10, Z
 7bc:	b1 80       	ldd	r11, Z+1	; 0x01
 7be:	36 fe       	sbrs	r3, 6
 7c0:	03 c0       	rjmp	.+6      	; 0x7c8 <vfprintf+0x146>
 7c2:	69 2d       	mov	r22, r9
 7c4:	70 e0       	ldi	r23, 0x00	; 0
 7c6:	02 c0       	rjmp	.+4      	; 0x7cc <vfprintf+0x14a>
 7c8:	6f ef       	ldi	r22, 0xFF	; 255
 7ca:	7f ef       	ldi	r23, 0xFF	; 255
 7cc:	c5 01       	movw	r24, r10
 7ce:	0e 94 2d 05 	call	0xa5a	; 0xa5a <strnlen>
 7d2:	4c 01       	movw	r8, r24
 7d4:	82 01       	movw	r16, r4
 7d6:	f3 2d       	mov	r31, r3
 7d8:	ff 77       	andi	r31, 0x7F	; 127
 7da:	3f 2e       	mov	r3, r31
 7dc:	16 c0       	rjmp	.+44     	; 0x80a <__DATA_REGION_LENGTH__+0xa>
 7de:	28 01       	movw	r4, r16
 7e0:	22 e0       	ldi	r18, 0x02	; 2
 7e2:	42 0e       	add	r4, r18
 7e4:	51 1c       	adc	r5, r1
 7e6:	f8 01       	movw	r30, r16
 7e8:	a0 80       	ld	r10, Z
 7ea:	b1 80       	ldd	r11, Z+1	; 0x01
 7ec:	36 fe       	sbrs	r3, 6
 7ee:	03 c0       	rjmp	.+6      	; 0x7f6 <vfprintf+0x174>
 7f0:	69 2d       	mov	r22, r9
 7f2:	70 e0       	ldi	r23, 0x00	; 0
 7f4:	02 c0       	rjmp	.+4      	; 0x7fa <vfprintf+0x178>
 7f6:	6f ef       	ldi	r22, 0xFF	; 255
 7f8:	7f ef       	ldi	r23, 0xFF	; 255
 7fa:	c5 01       	movw	r24, r10
 7fc:	0e 94 22 05 	call	0xa44	; 0xa44 <strnlen_P>
 800:	4c 01       	movw	r8, r24
 802:	f3 2d       	mov	r31, r3
 804:	f0 68       	ori	r31, 0x80	; 128
 806:	3f 2e       	mov	r3, r31
 808:	82 01       	movw	r16, r4
 80a:	33 fc       	sbrc	r3, 3
 80c:	1b c0       	rjmp	.+54     	; 0x844 <__DATA_REGION_LENGTH__+0x44>
 80e:	82 2d       	mov	r24, r2
 810:	90 e0       	ldi	r25, 0x00	; 0
 812:	88 16       	cp	r8, r24
 814:	99 06       	cpc	r9, r25
 816:	b0 f4       	brcc	.+44     	; 0x844 <__DATA_REGION_LENGTH__+0x44>
 818:	b6 01       	movw	r22, r12
 81a:	80 e2       	ldi	r24, 0x20	; 32
 81c:	90 e0       	ldi	r25, 0x00	; 0
 81e:	0e 94 38 05 	call	0xa70	; 0xa70 <fputc>
 822:	2a 94       	dec	r2
 824:	f4 cf       	rjmp	.-24     	; 0x80e <__DATA_REGION_LENGTH__+0xe>
 826:	f5 01       	movw	r30, r10
 828:	37 fc       	sbrc	r3, 7
 82a:	85 91       	lpm	r24, Z+
 82c:	37 fe       	sbrs	r3, 7
 82e:	81 91       	ld	r24, Z+
 830:	5f 01       	movw	r10, r30
 832:	b6 01       	movw	r22, r12
 834:	90 e0       	ldi	r25, 0x00	; 0
 836:	0e 94 38 05 	call	0xa70	; 0xa70 <fputc>
 83a:	21 10       	cpse	r2, r1
 83c:	2a 94       	dec	r2
 83e:	21 e0       	ldi	r18, 0x01	; 1
 840:	82 1a       	sub	r8, r18
 842:	91 08       	sbc	r9, r1
 844:	81 14       	cp	r8, r1
 846:	91 04       	cpc	r9, r1
 848:	71 f7       	brne	.-36     	; 0x826 <__DATA_REGION_LENGTH__+0x26>
 84a:	e8 c0       	rjmp	.+464    	; 0xa1c <__stack+0x11d>
 84c:	84 36       	cpi	r24, 0x64	; 100
 84e:	11 f0       	breq	.+4      	; 0x854 <__DATA_REGION_LENGTH__+0x54>
 850:	89 36       	cpi	r24, 0x69	; 105
 852:	41 f5       	brne	.+80     	; 0x8a4 <__DATA_REGION_LENGTH__+0xa4>
 854:	f8 01       	movw	r30, r16
 856:	37 fe       	sbrs	r3, 7
 858:	07 c0       	rjmp	.+14     	; 0x868 <__DATA_REGION_LENGTH__+0x68>
 85a:	60 81       	ld	r22, Z
 85c:	71 81       	ldd	r23, Z+1	; 0x01
 85e:	82 81       	ldd	r24, Z+2	; 0x02
 860:	93 81       	ldd	r25, Z+3	; 0x03
 862:	0c 5f       	subi	r16, 0xFC	; 252
 864:	1f 4f       	sbci	r17, 0xFF	; 255
 866:	08 c0       	rjmp	.+16     	; 0x878 <__DATA_REGION_LENGTH__+0x78>
 868:	60 81       	ld	r22, Z
 86a:	71 81       	ldd	r23, Z+1	; 0x01
 86c:	07 2e       	mov	r0, r23
 86e:	00 0c       	add	r0, r0
 870:	88 0b       	sbc	r24, r24
 872:	99 0b       	sbc	r25, r25
 874:	0e 5f       	subi	r16, 0xFE	; 254
 876:	1f 4f       	sbci	r17, 0xFF	; 255
 878:	f3 2d       	mov	r31, r3
 87a:	ff 76       	andi	r31, 0x6F	; 111
 87c:	3f 2e       	mov	r3, r31
 87e:	97 ff       	sbrs	r25, 7
 880:	09 c0       	rjmp	.+18     	; 0x894 <__DATA_REGION_LENGTH__+0x94>
 882:	90 95       	com	r25
 884:	80 95       	com	r24
 886:	70 95       	com	r23
 888:	61 95       	neg	r22
 88a:	7f 4f       	sbci	r23, 0xFF	; 255
 88c:	8f 4f       	sbci	r24, 0xFF	; 255
 88e:	9f 4f       	sbci	r25, 0xFF	; 255
 890:	f0 68       	ori	r31, 0x80	; 128
 892:	3f 2e       	mov	r3, r31
 894:	2a e0       	ldi	r18, 0x0A	; 10
 896:	30 e0       	ldi	r19, 0x00	; 0
 898:	a3 01       	movw	r20, r6
 89a:	0e 94 74 05 	call	0xae8	; 0xae8 <__ultoa_invert>
 89e:	88 2e       	mov	r8, r24
 8a0:	86 18       	sub	r8, r6
 8a2:	45 c0       	rjmp	.+138    	; 0x92e <__stack+0x2f>
 8a4:	85 37       	cpi	r24, 0x75	; 117
 8a6:	31 f4       	brne	.+12     	; 0x8b4 <__DATA_REGION_LENGTH__+0xb4>
 8a8:	23 2d       	mov	r18, r3
 8aa:	2f 7e       	andi	r18, 0xEF	; 239
 8ac:	b2 2e       	mov	r11, r18
 8ae:	2a e0       	ldi	r18, 0x0A	; 10
 8b0:	30 e0       	ldi	r19, 0x00	; 0
 8b2:	25 c0       	rjmp	.+74     	; 0x8fe <__DATA_REGION_LENGTH__+0xfe>
 8b4:	93 2d       	mov	r25, r3
 8b6:	99 7f       	andi	r25, 0xF9	; 249
 8b8:	b9 2e       	mov	r11, r25
 8ba:	8f 36       	cpi	r24, 0x6F	; 111
 8bc:	c1 f0       	breq	.+48     	; 0x8ee <__DATA_REGION_LENGTH__+0xee>
 8be:	18 f4       	brcc	.+6      	; 0x8c6 <__DATA_REGION_LENGTH__+0xc6>
 8c0:	88 35       	cpi	r24, 0x58	; 88
 8c2:	79 f0       	breq	.+30     	; 0x8e2 <__DATA_REGION_LENGTH__+0xe2>
 8c4:	b5 c0       	rjmp	.+362    	; 0xa30 <__stack+0x131>
 8c6:	80 37       	cpi	r24, 0x70	; 112
 8c8:	19 f0       	breq	.+6      	; 0x8d0 <__DATA_REGION_LENGTH__+0xd0>
 8ca:	88 37       	cpi	r24, 0x78	; 120
 8cc:	21 f0       	breq	.+8      	; 0x8d6 <__DATA_REGION_LENGTH__+0xd6>
 8ce:	b0 c0       	rjmp	.+352    	; 0xa30 <__stack+0x131>
 8d0:	e9 2f       	mov	r30, r25
 8d2:	e0 61       	ori	r30, 0x10	; 16
 8d4:	be 2e       	mov	r11, r30
 8d6:	b4 fe       	sbrs	r11, 4
 8d8:	0d c0       	rjmp	.+26     	; 0x8f4 <__DATA_REGION_LENGTH__+0xf4>
 8da:	fb 2d       	mov	r31, r11
 8dc:	f4 60       	ori	r31, 0x04	; 4
 8de:	bf 2e       	mov	r11, r31
 8e0:	09 c0       	rjmp	.+18     	; 0x8f4 <__DATA_REGION_LENGTH__+0xf4>
 8e2:	34 fe       	sbrs	r3, 4
 8e4:	0a c0       	rjmp	.+20     	; 0x8fa <__DATA_REGION_LENGTH__+0xfa>
 8e6:	29 2f       	mov	r18, r25
 8e8:	26 60       	ori	r18, 0x06	; 6
 8ea:	b2 2e       	mov	r11, r18
 8ec:	06 c0       	rjmp	.+12     	; 0x8fa <__DATA_REGION_LENGTH__+0xfa>
 8ee:	28 e0       	ldi	r18, 0x08	; 8
 8f0:	30 e0       	ldi	r19, 0x00	; 0
 8f2:	05 c0       	rjmp	.+10     	; 0x8fe <__DATA_REGION_LENGTH__+0xfe>
 8f4:	20 e1       	ldi	r18, 0x10	; 16
 8f6:	30 e0       	ldi	r19, 0x00	; 0
 8f8:	02 c0       	rjmp	.+4      	; 0x8fe <__DATA_REGION_LENGTH__+0xfe>
 8fa:	20 e1       	ldi	r18, 0x10	; 16
 8fc:	32 e0       	ldi	r19, 0x02	; 2
 8fe:	f8 01       	movw	r30, r16
 900:	b7 fe       	sbrs	r11, 7
 902:	07 c0       	rjmp	.+14     	; 0x912 <__stack+0x13>
 904:	60 81       	ld	r22, Z
 906:	71 81       	ldd	r23, Z+1	; 0x01
 908:	82 81       	ldd	r24, Z+2	; 0x02
 90a:	93 81       	ldd	r25, Z+3	; 0x03
 90c:	0c 5f       	subi	r16, 0xFC	; 252
 90e:	1f 4f       	sbci	r17, 0xFF	; 255
 910:	06 c0       	rjmp	.+12     	; 0x91e <__stack+0x1f>
 912:	60 81       	ld	r22, Z
 914:	71 81       	ldd	r23, Z+1	; 0x01
 916:	80 e0       	ldi	r24, 0x00	; 0
 918:	90 e0       	ldi	r25, 0x00	; 0
 91a:	0e 5f       	subi	r16, 0xFE	; 254
 91c:	1f 4f       	sbci	r17, 0xFF	; 255
 91e:	a3 01       	movw	r20, r6
 920:	0e 94 74 05 	call	0xae8	; 0xae8 <__ultoa_invert>
 924:	88 2e       	mov	r8, r24
 926:	86 18       	sub	r8, r6
 928:	fb 2d       	mov	r31, r11
 92a:	ff 77       	andi	r31, 0x7F	; 127
 92c:	3f 2e       	mov	r3, r31
 92e:	36 fe       	sbrs	r3, 6
 930:	0d c0       	rjmp	.+26     	; 0x94c <__stack+0x4d>
 932:	23 2d       	mov	r18, r3
 934:	2e 7f       	andi	r18, 0xFE	; 254
 936:	a2 2e       	mov	r10, r18
 938:	89 14       	cp	r8, r9
 93a:	58 f4       	brcc	.+22     	; 0x952 <__stack+0x53>
 93c:	34 fe       	sbrs	r3, 4
 93e:	0b c0       	rjmp	.+22     	; 0x956 <__stack+0x57>
 940:	32 fc       	sbrc	r3, 2
 942:	09 c0       	rjmp	.+18     	; 0x956 <__stack+0x57>
 944:	83 2d       	mov	r24, r3
 946:	8e 7e       	andi	r24, 0xEE	; 238
 948:	a8 2e       	mov	r10, r24
 94a:	05 c0       	rjmp	.+10     	; 0x956 <__stack+0x57>
 94c:	b8 2c       	mov	r11, r8
 94e:	a3 2c       	mov	r10, r3
 950:	03 c0       	rjmp	.+6      	; 0x958 <__stack+0x59>
 952:	b8 2c       	mov	r11, r8
 954:	01 c0       	rjmp	.+2      	; 0x958 <__stack+0x59>
 956:	b9 2c       	mov	r11, r9
 958:	a4 fe       	sbrs	r10, 4
 95a:	0f c0       	rjmp	.+30     	; 0x97a <__stack+0x7b>
 95c:	fe 01       	movw	r30, r28
 95e:	e8 0d       	add	r30, r8
 960:	f1 1d       	adc	r31, r1
 962:	80 81       	ld	r24, Z
 964:	80 33       	cpi	r24, 0x30	; 48
 966:	21 f4       	brne	.+8      	; 0x970 <__stack+0x71>
 968:	9a 2d       	mov	r25, r10
 96a:	99 7e       	andi	r25, 0xE9	; 233
 96c:	a9 2e       	mov	r10, r25
 96e:	09 c0       	rjmp	.+18     	; 0x982 <__stack+0x83>
 970:	a2 fe       	sbrs	r10, 2
 972:	06 c0       	rjmp	.+12     	; 0x980 <__stack+0x81>
 974:	b3 94       	inc	r11
 976:	b3 94       	inc	r11
 978:	04 c0       	rjmp	.+8      	; 0x982 <__stack+0x83>
 97a:	8a 2d       	mov	r24, r10
 97c:	86 78       	andi	r24, 0x86	; 134
 97e:	09 f0       	breq	.+2      	; 0x982 <__stack+0x83>
 980:	b3 94       	inc	r11
 982:	a3 fc       	sbrc	r10, 3
 984:	11 c0       	rjmp	.+34     	; 0x9a8 <__stack+0xa9>
 986:	a0 fe       	sbrs	r10, 0
 988:	06 c0       	rjmp	.+12     	; 0x996 <__stack+0x97>
 98a:	b2 14       	cp	r11, r2
 98c:	88 f4       	brcc	.+34     	; 0x9b0 <__stack+0xb1>
 98e:	28 0c       	add	r2, r8
 990:	92 2c       	mov	r9, r2
 992:	9b 18       	sub	r9, r11
 994:	0e c0       	rjmp	.+28     	; 0x9b2 <__stack+0xb3>
 996:	b2 14       	cp	r11, r2
 998:	60 f4       	brcc	.+24     	; 0x9b2 <__stack+0xb3>
 99a:	b6 01       	movw	r22, r12
 99c:	80 e2       	ldi	r24, 0x20	; 32
 99e:	90 e0       	ldi	r25, 0x00	; 0
 9a0:	0e 94 38 05 	call	0xa70	; 0xa70 <fputc>
 9a4:	b3 94       	inc	r11
 9a6:	f7 cf       	rjmp	.-18     	; 0x996 <__stack+0x97>
 9a8:	b2 14       	cp	r11, r2
 9aa:	18 f4       	brcc	.+6      	; 0x9b2 <__stack+0xb3>
 9ac:	2b 18       	sub	r2, r11
 9ae:	02 c0       	rjmp	.+4      	; 0x9b4 <__stack+0xb5>
 9b0:	98 2c       	mov	r9, r8
 9b2:	21 2c       	mov	r2, r1
 9b4:	a4 fe       	sbrs	r10, 4
 9b6:	10 c0       	rjmp	.+32     	; 0x9d8 <__stack+0xd9>
 9b8:	b6 01       	movw	r22, r12
 9ba:	80 e3       	ldi	r24, 0x30	; 48
 9bc:	90 e0       	ldi	r25, 0x00	; 0
 9be:	0e 94 38 05 	call	0xa70	; 0xa70 <fputc>
 9c2:	a2 fe       	sbrs	r10, 2
 9c4:	17 c0       	rjmp	.+46     	; 0x9f4 <__stack+0xf5>
 9c6:	a1 fc       	sbrc	r10, 1
 9c8:	03 c0       	rjmp	.+6      	; 0x9d0 <__stack+0xd1>
 9ca:	88 e7       	ldi	r24, 0x78	; 120
 9cc:	90 e0       	ldi	r25, 0x00	; 0
 9ce:	02 c0       	rjmp	.+4      	; 0x9d4 <__stack+0xd5>
 9d0:	88 e5       	ldi	r24, 0x58	; 88
 9d2:	90 e0       	ldi	r25, 0x00	; 0
 9d4:	b6 01       	movw	r22, r12
 9d6:	0c c0       	rjmp	.+24     	; 0x9f0 <__stack+0xf1>
 9d8:	8a 2d       	mov	r24, r10
 9da:	86 78       	andi	r24, 0x86	; 134
 9dc:	59 f0       	breq	.+22     	; 0x9f4 <__stack+0xf5>
 9de:	a1 fe       	sbrs	r10, 1
 9e0:	02 c0       	rjmp	.+4      	; 0x9e6 <__stack+0xe7>
 9e2:	8b e2       	ldi	r24, 0x2B	; 43
 9e4:	01 c0       	rjmp	.+2      	; 0x9e8 <__stack+0xe9>
 9e6:	80 e2       	ldi	r24, 0x20	; 32
 9e8:	a7 fc       	sbrc	r10, 7
 9ea:	8d e2       	ldi	r24, 0x2D	; 45
 9ec:	b6 01       	movw	r22, r12
 9ee:	90 e0       	ldi	r25, 0x00	; 0
 9f0:	0e 94 38 05 	call	0xa70	; 0xa70 <fputc>
 9f4:	89 14       	cp	r8, r9
 9f6:	38 f4       	brcc	.+14     	; 0xa06 <__stack+0x107>
 9f8:	b6 01       	movw	r22, r12
 9fa:	80 e3       	ldi	r24, 0x30	; 48
 9fc:	90 e0       	ldi	r25, 0x00	; 0
 9fe:	0e 94 38 05 	call	0xa70	; 0xa70 <fputc>
 a02:	9a 94       	dec	r9
 a04:	f7 cf       	rjmp	.-18     	; 0x9f4 <__stack+0xf5>
 a06:	8a 94       	dec	r8
 a08:	f3 01       	movw	r30, r6
 a0a:	e8 0d       	add	r30, r8
 a0c:	f1 1d       	adc	r31, r1
 a0e:	80 81       	ld	r24, Z
 a10:	b6 01       	movw	r22, r12
 a12:	90 e0       	ldi	r25, 0x00	; 0
 a14:	0e 94 38 05 	call	0xa70	; 0xa70 <fputc>
 a18:	81 10       	cpse	r8, r1
 a1a:	f5 cf       	rjmp	.-22     	; 0xa06 <__stack+0x107>
 a1c:	22 20       	and	r2, r2
 a1e:	09 f4       	brne	.+2      	; 0xa22 <__stack+0x123>
 a20:	42 ce       	rjmp	.-892    	; 0x6a6 <vfprintf+0x24>
 a22:	b6 01       	movw	r22, r12
 a24:	80 e2       	ldi	r24, 0x20	; 32
 a26:	90 e0       	ldi	r25, 0x00	; 0
 a28:	0e 94 38 05 	call	0xa70	; 0xa70 <fputc>
 a2c:	2a 94       	dec	r2
 a2e:	f6 cf       	rjmp	.-20     	; 0xa1c <__stack+0x11d>
 a30:	f6 01       	movw	r30, r12
 a32:	86 81       	ldd	r24, Z+6	; 0x06
 a34:	97 81       	ldd	r25, Z+7	; 0x07
 a36:	02 c0       	rjmp	.+4      	; 0xa3c <__stack+0x13d>
 a38:	8f ef       	ldi	r24, 0xFF	; 255
 a3a:	9f ef       	ldi	r25, 0xFF	; 255
 a3c:	2b 96       	adiw	r28, 0x0b	; 11
 a3e:	e2 e1       	ldi	r30, 0x12	; 18
 a40:	0c 94 ee 05 	jmp	0xbdc	; 0xbdc <__epilogue_restores__>

00000a44 <strnlen_P>:
 a44:	fc 01       	movw	r30, r24
 a46:	05 90       	lpm	r0, Z+
 a48:	61 50       	subi	r22, 0x01	; 1
 a4a:	70 40       	sbci	r23, 0x00	; 0
 a4c:	01 10       	cpse	r0, r1
 a4e:	d8 f7       	brcc	.-10     	; 0xa46 <strnlen_P+0x2>
 a50:	80 95       	com	r24
 a52:	90 95       	com	r25
 a54:	8e 0f       	add	r24, r30
 a56:	9f 1f       	adc	r25, r31
 a58:	08 95       	ret

00000a5a <strnlen>:
 a5a:	fc 01       	movw	r30, r24
 a5c:	61 50       	subi	r22, 0x01	; 1
 a5e:	70 40       	sbci	r23, 0x00	; 0
 a60:	01 90       	ld	r0, Z+
 a62:	01 10       	cpse	r0, r1
 a64:	d8 f7       	brcc	.-10     	; 0xa5c <strnlen+0x2>
 a66:	80 95       	com	r24
 a68:	90 95       	com	r25
 a6a:	8e 0f       	add	r24, r30
 a6c:	9f 1f       	adc	r25, r31
 a6e:	08 95       	ret

00000a70 <fputc>:
 a70:	0f 93       	push	r16
 a72:	1f 93       	push	r17
 a74:	cf 93       	push	r28
 a76:	df 93       	push	r29
 a78:	fb 01       	movw	r30, r22
 a7a:	23 81       	ldd	r18, Z+3	; 0x03
 a7c:	21 fd       	sbrc	r18, 1
 a7e:	03 c0       	rjmp	.+6      	; 0xa86 <fputc+0x16>
 a80:	8f ef       	ldi	r24, 0xFF	; 255
 a82:	9f ef       	ldi	r25, 0xFF	; 255
 a84:	2c c0       	rjmp	.+88     	; 0xade <fputc+0x6e>
 a86:	22 ff       	sbrs	r18, 2
 a88:	16 c0       	rjmp	.+44     	; 0xab6 <fputc+0x46>
 a8a:	46 81       	ldd	r20, Z+6	; 0x06
 a8c:	57 81       	ldd	r21, Z+7	; 0x07
 a8e:	24 81       	ldd	r18, Z+4	; 0x04
 a90:	35 81       	ldd	r19, Z+5	; 0x05
 a92:	42 17       	cp	r20, r18
 a94:	53 07       	cpc	r21, r19
 a96:	44 f4       	brge	.+16     	; 0xaa8 <fputc+0x38>
 a98:	a0 81       	ld	r26, Z
 a9a:	b1 81       	ldd	r27, Z+1	; 0x01
 a9c:	9d 01       	movw	r18, r26
 a9e:	2f 5f       	subi	r18, 0xFF	; 255
 aa0:	3f 4f       	sbci	r19, 0xFF	; 255
 aa2:	31 83       	std	Z+1, r19	; 0x01
 aa4:	20 83       	st	Z, r18
 aa6:	8c 93       	st	X, r24
 aa8:	26 81       	ldd	r18, Z+6	; 0x06
 aaa:	37 81       	ldd	r19, Z+7	; 0x07
 aac:	2f 5f       	subi	r18, 0xFF	; 255
 aae:	3f 4f       	sbci	r19, 0xFF	; 255
 ab0:	37 83       	std	Z+7, r19	; 0x07
 ab2:	26 83       	std	Z+6, r18	; 0x06
 ab4:	14 c0       	rjmp	.+40     	; 0xade <fputc+0x6e>
 ab6:	8b 01       	movw	r16, r22
 ab8:	ec 01       	movw	r28, r24
 aba:	fb 01       	movw	r30, r22
 abc:	00 84       	ldd	r0, Z+8	; 0x08
 abe:	f1 85       	ldd	r31, Z+9	; 0x09
 ac0:	e0 2d       	mov	r30, r0
 ac2:	09 95       	icall
 ac4:	89 2b       	or	r24, r25
 ac6:	e1 f6       	brne	.-72     	; 0xa80 <fputc+0x10>
 ac8:	d8 01       	movw	r26, r16
 aca:	16 96       	adiw	r26, 0x06	; 6
 acc:	8d 91       	ld	r24, X+
 ace:	9c 91       	ld	r25, X
 ad0:	17 97       	sbiw	r26, 0x07	; 7
 ad2:	01 96       	adiw	r24, 0x01	; 1
 ad4:	17 96       	adiw	r26, 0x07	; 7
 ad6:	9c 93       	st	X, r25
 ad8:	8e 93       	st	-X, r24
 ada:	16 97       	sbiw	r26, 0x06	; 6
 adc:	ce 01       	movw	r24, r28
 ade:	df 91       	pop	r29
 ae0:	cf 91       	pop	r28
 ae2:	1f 91       	pop	r17
 ae4:	0f 91       	pop	r16
 ae6:	08 95       	ret

00000ae8 <__ultoa_invert>:
 ae8:	fa 01       	movw	r30, r20
 aea:	aa 27       	eor	r26, r26
 aec:	28 30       	cpi	r18, 0x08	; 8
 aee:	51 f1       	breq	.+84     	; 0xb44 <__ultoa_invert+0x5c>
 af0:	20 31       	cpi	r18, 0x10	; 16
 af2:	81 f1       	breq	.+96     	; 0xb54 <__ultoa_invert+0x6c>
 af4:	e8 94       	clt
 af6:	6f 93       	push	r22
 af8:	6e 7f       	andi	r22, 0xFE	; 254
 afa:	6e 5f       	subi	r22, 0xFE	; 254
 afc:	7f 4f       	sbci	r23, 0xFF	; 255
 afe:	8f 4f       	sbci	r24, 0xFF	; 255
 b00:	9f 4f       	sbci	r25, 0xFF	; 255
 b02:	af 4f       	sbci	r26, 0xFF	; 255
 b04:	b1 e0       	ldi	r27, 0x01	; 1
 b06:	3e d0       	rcall	.+124    	; 0xb84 <__ultoa_invert+0x9c>
 b08:	b4 e0       	ldi	r27, 0x04	; 4
 b0a:	3c d0       	rcall	.+120    	; 0xb84 <__ultoa_invert+0x9c>
 b0c:	67 0f       	add	r22, r23
 b0e:	78 1f       	adc	r23, r24
 b10:	89 1f       	adc	r24, r25
 b12:	9a 1f       	adc	r25, r26
 b14:	a1 1d       	adc	r26, r1
 b16:	68 0f       	add	r22, r24
 b18:	79 1f       	adc	r23, r25
 b1a:	8a 1f       	adc	r24, r26
 b1c:	91 1d       	adc	r25, r1
 b1e:	a1 1d       	adc	r26, r1
 b20:	6a 0f       	add	r22, r26
 b22:	71 1d       	adc	r23, r1
 b24:	81 1d       	adc	r24, r1
 b26:	91 1d       	adc	r25, r1
 b28:	a1 1d       	adc	r26, r1
 b2a:	20 d0       	rcall	.+64     	; 0xb6c <__ultoa_invert+0x84>
 b2c:	09 f4       	brne	.+2      	; 0xb30 <__ultoa_invert+0x48>
 b2e:	68 94       	set
 b30:	3f 91       	pop	r19
 b32:	2a e0       	ldi	r18, 0x0A	; 10
 b34:	26 9f       	mul	r18, r22
 b36:	11 24       	eor	r1, r1
 b38:	30 19       	sub	r19, r0
 b3a:	30 5d       	subi	r19, 0xD0	; 208
 b3c:	31 93       	st	Z+, r19
 b3e:	de f6       	brtc	.-74     	; 0xaf6 <__ultoa_invert+0xe>
 b40:	cf 01       	movw	r24, r30
 b42:	08 95       	ret
 b44:	46 2f       	mov	r20, r22
 b46:	47 70       	andi	r20, 0x07	; 7
 b48:	40 5d       	subi	r20, 0xD0	; 208
 b4a:	41 93       	st	Z+, r20
 b4c:	b3 e0       	ldi	r27, 0x03	; 3
 b4e:	0f d0       	rcall	.+30     	; 0xb6e <__ultoa_invert+0x86>
 b50:	c9 f7       	brne	.-14     	; 0xb44 <__ultoa_invert+0x5c>
 b52:	f6 cf       	rjmp	.-20     	; 0xb40 <__ultoa_invert+0x58>
 b54:	46 2f       	mov	r20, r22
 b56:	4f 70       	andi	r20, 0x0F	; 15
 b58:	40 5d       	subi	r20, 0xD0	; 208
 b5a:	4a 33       	cpi	r20, 0x3A	; 58
 b5c:	18 f0       	brcs	.+6      	; 0xb64 <__ultoa_invert+0x7c>
 b5e:	49 5d       	subi	r20, 0xD9	; 217
 b60:	31 fd       	sbrc	r19, 1
 b62:	40 52       	subi	r20, 0x20	; 32
 b64:	41 93       	st	Z+, r20
 b66:	02 d0       	rcall	.+4      	; 0xb6c <__ultoa_invert+0x84>
 b68:	a9 f7       	brne	.-22     	; 0xb54 <__ultoa_invert+0x6c>
 b6a:	ea cf       	rjmp	.-44     	; 0xb40 <__ultoa_invert+0x58>
 b6c:	b4 e0       	ldi	r27, 0x04	; 4
 b6e:	a6 95       	lsr	r26
 b70:	97 95       	ror	r25
 b72:	87 95       	ror	r24
 b74:	77 95       	ror	r23
 b76:	67 95       	ror	r22
 b78:	ba 95       	dec	r27
 b7a:	c9 f7       	brne	.-14     	; 0xb6e <__ultoa_invert+0x86>
 b7c:	00 97       	sbiw	r24, 0x00	; 0
 b7e:	61 05       	cpc	r22, r1
 b80:	71 05       	cpc	r23, r1
 b82:	08 95       	ret
 b84:	9b 01       	movw	r18, r22
 b86:	ac 01       	movw	r20, r24
 b88:	0a 2e       	mov	r0, r26
 b8a:	06 94       	lsr	r0
 b8c:	57 95       	ror	r21
 b8e:	47 95       	ror	r20
 b90:	37 95       	ror	r19
 b92:	27 95       	ror	r18
 b94:	ba 95       	dec	r27
 b96:	c9 f7       	brne	.-14     	; 0xb8a <__ultoa_invert+0xa2>
 b98:	62 0f       	add	r22, r18
 b9a:	73 1f       	adc	r23, r19
 b9c:	84 1f       	adc	r24, r20
 b9e:	95 1f       	adc	r25, r21
 ba0:	a0 1d       	adc	r26, r0
 ba2:	08 95       	ret

00000ba4 <__prologue_saves__>:
 ba4:	2f 92       	push	r2
 ba6:	3f 92       	push	r3
 ba8:	4f 92       	push	r4
 baa:	5f 92       	push	r5
 bac:	6f 92       	push	r6
 bae:	7f 92       	push	r7
 bb0:	8f 92       	push	r8
 bb2:	9f 92       	push	r9
 bb4:	af 92       	push	r10
 bb6:	bf 92       	push	r11
 bb8:	cf 92       	push	r12
 bba:	df 92       	push	r13
 bbc:	ef 92       	push	r14
 bbe:	ff 92       	push	r15
 bc0:	0f 93       	push	r16
 bc2:	1f 93       	push	r17
 bc4:	cf 93       	push	r28
 bc6:	df 93       	push	r29
 bc8:	cd b7       	in	r28, 0x3d	; 61
 bca:	de b7       	in	r29, 0x3e	; 62
 bcc:	ca 1b       	sub	r28, r26
 bce:	db 0b       	sbc	r29, r27
 bd0:	0f b6       	in	r0, 0x3f	; 63
 bd2:	f8 94       	cli
 bd4:	de bf       	out	0x3e, r29	; 62
 bd6:	0f be       	out	0x3f, r0	; 63
 bd8:	cd bf       	out	0x3d, r28	; 61
 bda:	09 94       	ijmp

00000bdc <__epilogue_restores__>:
 bdc:	2a 88       	ldd	r2, Y+18	; 0x12
 bde:	39 88       	ldd	r3, Y+17	; 0x11
 be0:	48 88       	ldd	r4, Y+16	; 0x10
 be2:	5f 84       	ldd	r5, Y+15	; 0x0f
 be4:	6e 84       	ldd	r6, Y+14	; 0x0e
 be6:	7d 84       	ldd	r7, Y+13	; 0x0d
 be8:	8c 84       	ldd	r8, Y+12	; 0x0c
 bea:	9b 84       	ldd	r9, Y+11	; 0x0b
 bec:	aa 84       	ldd	r10, Y+10	; 0x0a
 bee:	b9 84       	ldd	r11, Y+9	; 0x09
 bf0:	c8 84       	ldd	r12, Y+8	; 0x08
 bf2:	df 80       	ldd	r13, Y+7	; 0x07
 bf4:	ee 80       	ldd	r14, Y+6	; 0x06
 bf6:	fd 80       	ldd	r15, Y+5	; 0x05
 bf8:	0c 81       	ldd	r16, Y+4	; 0x04
 bfa:	1b 81       	ldd	r17, Y+3	; 0x03
 bfc:	aa 81       	ldd	r26, Y+2	; 0x02
 bfe:	b9 81       	ldd	r27, Y+1	; 0x01
 c00:	ce 0f       	add	r28, r30
 c02:	d1 1d       	adc	r29, r1
 c04:	0f b6       	in	r0, 0x3f	; 63
 c06:	f8 94       	cli
 c08:	de bf       	out	0x3e, r29	; 62
 c0a:	0f be       	out	0x3f, r0	; 63
 c0c:	cd bf       	out	0x3d, r28	; 61
 c0e:	ed 01       	movw	r28, r26
 c10:	08 95       	ret

00000c12 <_exit>:
 c12:	f8 94       	cli

00000c14 <__stop_program>:
 c14:	ff cf       	rjmp	.-2      	; 0xc14 <__stop_program>
