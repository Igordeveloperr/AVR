
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000018  00800100  00000c60  00000cf4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c60  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800118  00800118  00000d0c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000d0c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000d68  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000178  00000000  00000000  00000da8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000018bf  00000000  00000000  00000f20  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c8b  00000000  00000000  000027df  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e49  00000000  00000000  0000346a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000318  00000000  00000000  000042b4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000686  00000000  00000000  000045cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000fa4  00000000  00000000  00004c52  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000138  00000000  00000000  00005bf6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 e6       	ldi	r30, 0x60	; 96
  7c:	fc e0       	ldi	r31, 0x0C	; 12
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a8 31       	cpi	r26, 0x18	; 24
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a8 e1       	ldi	r26, 0x18	; 24
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	aa 31       	cpi	r26, 0x1A	; 26
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 93 02 	call	0x526	; 0x526 <main>
  9e:	0c 94 2e 06 	jmp	0xc5c	; 0xc5c <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <i2c_init>:

// тупа повторяем условие СТАРТ
unsigned char i2c_rep_start(unsigned char address)
{
    return i2c_start(address);
}
  a6:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
  aa:	88 e4       	ldi	r24, 0x48	; 72
  ac:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
  b0:	08 95       	ret

000000b2 <i2c_start>:
  b2:	94 ea       	ldi	r25, 0xA4	; 164
  b4:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  b8:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  bc:	99 23       	and	r25, r25
  be:	e4 f7       	brge	.-8      	; 0xb8 <i2c_start+0x6>
  c0:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
  c4:	98 7f       	andi	r25, 0xF8	; 248
  c6:	98 30       	cpi	r25, 0x08	; 8
  c8:	11 f0       	breq	.+4      	; 0xce <i2c_start+0x1c>
  ca:	90 31       	cpi	r25, 0x10	; 16
  cc:	91 f4       	brne	.+36     	; 0xf2 <i2c_start+0x40>
  ce:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
  d2:	84 e8       	ldi	r24, 0x84	; 132
  d4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  d8:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  dc:	88 23       	and	r24, r24
  de:	e4 f7       	brge	.-8      	; 0xd8 <i2c_start+0x26>
  e0:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
  e4:	88 7f       	andi	r24, 0xF8	; 248
  e6:	88 31       	cpi	r24, 0x18	; 24
  e8:	31 f0       	breq	.+12     	; 0xf6 <i2c_start+0x44>
  ea:	80 34       	cpi	r24, 0x40	; 64
  ec:	31 f4       	brne	.+12     	; 0xfa <i2c_start+0x48>
  ee:	80 e0       	ldi	r24, 0x00	; 0
  f0:	08 95       	ret
  f2:	81 e0       	ldi	r24, 0x01	; 1
  f4:	08 95       	ret
  f6:	80 e0       	ldi	r24, 0x00	; 0
  f8:	08 95       	ret
  fa:	81 e0       	ldi	r24, 0x01	; 1
  fc:	08 95       	ret

000000fe <i2c_stop>:

// передача условия СТОП на шину
void i2c_stop(void)
{
    // отправка условия СТОП
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
  fe:	84 e9       	ldi	r24, 0x94	; 148
 100:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	// ждем выполнения условия остановки
	while(TWCR & (1<<TWSTO));
 104:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 108:	84 fd       	sbrc	r24, 4
 10a:	fc cf       	rjmp	.-8      	; 0x104 <i2c_stop+0x6>
}
 10c:	08 95       	ret

0000010e <i2c_write>:
unsigned char i2c_write( unsigned char data )
{	
    uint8_t   twst;
    
	// отправляем данные на уст-во
	TWDR = data;
 10e:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
	TWCR = (1<<TWINT) | (1<<TWEN);
 112:	84 e8       	ldi	r24, 0x84	; 132
 114:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	// ждем завершения передачи
	while(!(TWCR & (1<<TWINT)));
 118:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 11c:	88 23       	and	r24, r24
 11e:	e4 f7       	brge	.-8      	; 0x118 <i2c_write+0xa>
	// записываем ответ от ведомого уст-ва
	twst = TW_STATUS & 0xF8;
 120:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 124:	88 7f       	andi	r24, 0xF8	; 248
	if( twst != TW_MT_DATA_ACK) return 1;
 126:	88 32       	cpi	r24, 0x28	; 40
 128:	11 f0       	breq	.+4      	; 0x12e <i2c_write+0x20>
 12a:	81 e0       	ldi	r24, 0x01	; 1
 12c:	08 95       	ret
	return 0;
 12e:	80 e0       	ldi	r24, 0x00	; 0
}
 130:	08 95       	ret

00000132 <lcd_read>:

    while ( (c = pgm_read_byte(progmem_s++)) ) {
        lcd_putc(c);
    }

}/* lcd_puts_p */
 132:	cf 93       	push	r28
 134:	88 23       	and	r24, r24
 136:	31 f0       	breq	.+12     	; 0x144 <lcd_read+0x12>
 138:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 13c:	81 60       	ori	r24, 0x01	; 1
 13e:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 142:	05 c0       	rjmp	.+10     	; 0x14e <lcd_read+0x1c>
 144:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 148:	8e 7f       	andi	r24, 0xFE	; 254
 14a:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 14e:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 152:	82 60       	ori	r24, 0x02	; 2
 154:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 158:	60 91 18 01 	lds	r22, 0x0118	; 0x800118 <__data_end>
 15c:	80 e0       	ldi	r24, 0x00	; 0
 15e:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <pcf8574_setoutput>
 162:	62 e0       	ldi	r22, 0x02	; 2
 164:	80 e0       	ldi	r24, 0x00	; 0
 166:	0e 94 3c 03 	call	0x678	; 0x678 <pcf8574_setoutputpinhigh>
 16a:	00 c0       	rjmp	.+0      	; 0x16c <lcd_read+0x3a>
 16c:	64 e0       	ldi	r22, 0x04	; 4
 16e:	80 e0       	ldi	r24, 0x00	; 0
 170:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <pcf8574_getoutputpin>
 174:	c8 2f       	mov	r28, r24
 176:	c2 95       	swap	r28
 178:	c0 7f       	andi	r28, 0xF0	; 240
 17a:	62 e0       	ldi	r22, 0x02	; 2
 17c:	80 e0       	ldi	r24, 0x00	; 0
 17e:	0e 94 40 03 	call	0x680	; 0x680 <pcf8574_setoutputpinlow>
 182:	00 c0       	rjmp	.+0      	; 0x184 <lcd_read+0x52>
 184:	62 e0       	ldi	r22, 0x02	; 2
 186:	80 e0       	ldi	r24, 0x00	; 0
 188:	0e 94 3c 03 	call	0x678	; 0x678 <pcf8574_setoutputpinhigh>
 18c:	00 c0       	rjmp	.+0      	; 0x18e <lcd_read+0x5c>
 18e:	64 e0       	ldi	r22, 0x04	; 4
 190:	80 e0       	ldi	r24, 0x00	; 0
 192:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <pcf8574_getoutputpin>
 196:	8f 70       	andi	r24, 0x0F	; 15
 198:	c8 2b       	or	r28, r24
 19a:	62 e0       	ldi	r22, 0x02	; 2
 19c:	80 e0       	ldi	r24, 0x00	; 0
 19e:	0e 94 40 03 	call	0x680	; 0x680 <pcf8574_setoutputpinlow>
 1a2:	8c 2f       	mov	r24, r28
 1a4:	cf 91       	pop	r28
 1a6:	08 95       	ret

000001a8 <lcd_waitbusy>:
 1a8:	80 e0       	ldi	r24, 0x00	; 0
 1aa:	0e 94 99 00 	call	0x132	; 0x132 <lcd_read>
 1ae:	88 23       	and	r24, r24
 1b0:	dc f3       	brlt	.-10     	; 0x1a8 <lcd_waitbusy>
 1b2:	88 e0       	ldi	r24, 0x08	; 8
 1b4:	90 e0       	ldi	r25, 0x00	; 0
 1b6:	01 97       	sbiw	r24, 0x01	; 1
 1b8:	f1 f7       	brne	.-4      	; 0x1b6 <lcd_waitbusy+0xe>
 1ba:	80 e0       	ldi	r24, 0x00	; 0
 1bc:	0e 94 99 00 	call	0x132	; 0x132 <lcd_read>
 1c0:	08 95       	ret

000001c2 <toggle_e>:
 1c2:	62 e0       	ldi	r22, 0x02	; 2
 1c4:	80 e0       	ldi	r24, 0x00	; 0
 1c6:	0e 94 3c 03 	call	0x678	; 0x678 <pcf8574_setoutputpinhigh>
 1ca:	00 c0       	rjmp	.+0      	; 0x1cc <toggle_e+0xa>
 1cc:	62 e0       	ldi	r22, 0x02	; 2
 1ce:	80 e0       	ldi	r24, 0x00	; 0
 1d0:	0e 94 40 03 	call	0x680	; 0x680 <pcf8574_setoutputpinlow>
 1d4:	08 95       	ret

000001d6 <lcd_write>:
 1d6:	cf 93       	push	r28
 1d8:	c8 2f       	mov	r28, r24
 1da:	66 23       	and	r22, r22
 1dc:	31 f0       	breq	.+12     	; 0x1ea <lcd_write+0x14>
 1de:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 1e2:	81 60       	ori	r24, 0x01	; 1
 1e4:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 1e8:	05 c0       	rjmp	.+10     	; 0x1f4 <lcd_write+0x1e>
 1ea:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 1ee:	8e 7f       	andi	r24, 0xFE	; 254
 1f0:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 1f4:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 1f8:	8d 7f       	andi	r24, 0xFD	; 253
 1fa:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 1fe:	60 91 18 01 	lds	r22, 0x0118	; 0x800118 <__data_end>
 202:	80 e0       	ldi	r24, 0x00	; 0
 204:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <pcf8574_setoutput>
 208:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 20c:	8f 77       	andi	r24, 0x7F	; 127
 20e:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 212:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 216:	8f 7b       	andi	r24, 0xBF	; 191
 218:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 21c:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 220:	8f 7d       	andi	r24, 0xDF	; 223
 222:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 226:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 22a:	8f 7e       	andi	r24, 0xEF	; 239
 22c:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 230:	cc 23       	and	r28, r28
 232:	2c f4       	brge	.+10     	; 0x23e <lcd_write+0x68>
 234:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 238:	80 68       	ori	r24, 0x80	; 128
 23a:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 23e:	c6 ff       	sbrs	r28, 6
 240:	05 c0       	rjmp	.+10     	; 0x24c <lcd_write+0x76>
 242:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 246:	80 64       	ori	r24, 0x40	; 64
 248:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 24c:	c5 ff       	sbrs	r28, 5
 24e:	05 c0       	rjmp	.+10     	; 0x25a <lcd_write+0x84>
 250:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 254:	80 62       	ori	r24, 0x20	; 32
 256:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 25a:	c4 ff       	sbrs	r28, 4
 25c:	05 c0       	rjmp	.+10     	; 0x268 <lcd_write+0x92>
 25e:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 262:	80 61       	ori	r24, 0x10	; 16
 264:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 268:	60 91 18 01 	lds	r22, 0x0118	; 0x800118 <__data_end>
 26c:	80 e0       	ldi	r24, 0x00	; 0
 26e:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <pcf8574_setoutput>
 272:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <toggle_e>
 276:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 27a:	8f 77       	andi	r24, 0x7F	; 127
 27c:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 280:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 284:	8f 7b       	andi	r24, 0xBF	; 191
 286:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 28a:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 28e:	8f 7d       	andi	r24, 0xDF	; 223
 290:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 294:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 298:	8f 7e       	andi	r24, 0xEF	; 239
 29a:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 29e:	c3 ff       	sbrs	r28, 3
 2a0:	05 c0       	rjmp	.+10     	; 0x2ac <lcd_write+0xd6>
 2a2:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 2a6:	80 68       	ori	r24, 0x80	; 128
 2a8:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 2ac:	c2 ff       	sbrs	r28, 2
 2ae:	05 c0       	rjmp	.+10     	; 0x2ba <lcd_write+0xe4>
 2b0:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 2b4:	80 64       	ori	r24, 0x40	; 64
 2b6:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 2ba:	c1 ff       	sbrs	r28, 1
 2bc:	05 c0       	rjmp	.+10     	; 0x2c8 <lcd_write+0xf2>
 2be:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 2c2:	80 62       	ori	r24, 0x20	; 32
 2c4:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 2c8:	c0 ff       	sbrs	r28, 0
 2ca:	05 c0       	rjmp	.+10     	; 0x2d6 <lcd_write+0x100>
 2cc:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 2d0:	80 61       	ori	r24, 0x10	; 16
 2d2:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 2d6:	60 91 18 01 	lds	r22, 0x0118	; 0x800118 <__data_end>
 2da:	80 e0       	ldi	r24, 0x00	; 0
 2dc:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <pcf8574_setoutput>
 2e0:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <toggle_e>
 2e4:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 2e8:	80 61       	ori	r24, 0x10	; 16
 2ea:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 2ee:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 2f2:	80 62       	ori	r24, 0x20	; 32
 2f4:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 2f8:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 2fc:	80 64       	ori	r24, 0x40	; 64
 2fe:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 302:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 306:	80 68       	ori	r24, 0x80	; 128
 308:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 30c:	60 91 18 01 	lds	r22, 0x0118	; 0x800118 <__data_end>
 310:	80 e0       	ldi	r24, 0x00	; 0
 312:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <pcf8574_setoutput>
 316:	cf 91       	pop	r28
 318:	08 95       	ret

0000031a <lcd_command>:
 31a:	cf 93       	push	r28
 31c:	c8 2f       	mov	r28, r24
 31e:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <lcd_waitbusy>
 322:	60 e0       	ldi	r22, 0x00	; 0
 324:	8c 2f       	mov	r24, r28
 326:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <lcd_write>
 32a:	cf 91       	pop	r28
 32c:	08 95       	ret

0000032e <lcd_gotoxy>:
 32e:	61 11       	cpse	r22, r1
 330:	04 c0       	rjmp	.+8      	; 0x33a <lcd_gotoxy+0xc>
 332:	80 58       	subi	r24, 0x80	; 128
 334:	0e 94 8d 01 	call	0x31a	; 0x31a <lcd_command>
 338:	08 95       	ret
 33a:	61 30       	cpi	r22, 0x01	; 1
 33c:	21 f4       	brne	.+8      	; 0x346 <lcd_gotoxy+0x18>
 33e:	80 54       	subi	r24, 0x40	; 64
 340:	0e 94 8d 01 	call	0x31a	; 0x31a <lcd_command>
 344:	08 95       	ret
 346:	62 30       	cpi	r22, 0x02	; 2
 348:	21 f4       	brne	.+8      	; 0x352 <lcd_gotoxy+0x24>
 34a:	80 57       	subi	r24, 0x70	; 112
 34c:	0e 94 8d 01 	call	0x31a	; 0x31a <lcd_command>
 350:	08 95       	ret
 352:	80 53       	subi	r24, 0x30	; 48
 354:	0e 94 8d 01 	call	0x31a	; 0x31a <lcd_command>
 358:	08 95       	ret

0000035a <lcd_clrscr>:
 35a:	81 e0       	ldi	r24, 0x01	; 1
 35c:	0e 94 8d 01 	call	0x31a	; 0x31a <lcd_command>
 360:	08 95       	ret

00000362 <lcd_led>:
 362:	88 23       	and	r24, r24
 364:	31 f0       	breq	.+12     	; 0x372 <lcd_led+0x10>
 366:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 36a:	87 7f       	andi	r24, 0xF7	; 247
 36c:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 370:	05 c0       	rjmp	.+10     	; 0x37c <lcd_led+0x1a>
 372:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 376:	88 60       	ori	r24, 0x08	; 8
 378:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 37c:	60 91 18 01 	lds	r22, 0x0118	; 0x800118 <__data_end>
 380:	80 e0       	ldi	r24, 0x00	; 0
 382:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <pcf8574_setoutput>
 386:	08 95       	ret

00000388 <lcd_home>:
 388:	82 e0       	ldi	r24, 0x02	; 2
 38a:	0e 94 8d 01 	call	0x31a	; 0x31a <lcd_command>
 38e:	08 95       	ret

00000390 <lcd_putc>:
 390:	cf 93       	push	r28
 392:	c8 2f       	mov	r28, r24
 394:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <lcd_waitbusy>
 398:	ca 30       	cpi	r28, 0x0A	; 10
 39a:	a1 f4       	brne	.+40     	; 0x3c4 <lcd_putc+0x34>
 39c:	80 31       	cpi	r24, 0x10	; 16
 39e:	48 f0       	brcs	.+18     	; 0x3b2 <lcd_putc+0x22>
 3a0:	90 ec       	ldi	r25, 0xC0	; 192
 3a2:	98 0f       	add	r25, r24
 3a4:	90 31       	cpi	r25, 0x10	; 16
 3a6:	38 f0       	brcs	.+14     	; 0x3b6 <lcd_putc+0x26>
 3a8:	80 51       	subi	r24, 0x10	; 16
 3aa:	80 33       	cpi	r24, 0x30	; 48
 3ac:	30 f4       	brcc	.+12     	; 0x3ba <lcd_putc+0x2a>
 3ae:	80 e5       	ldi	r24, 0x50	; 80
 3b0:	05 c0       	rjmp	.+10     	; 0x3bc <lcd_putc+0x2c>
 3b2:	80 e4       	ldi	r24, 0x40	; 64
 3b4:	03 c0       	rjmp	.+6      	; 0x3bc <lcd_putc+0x2c>
 3b6:	80 e1       	ldi	r24, 0x10	; 16
 3b8:	01 c0       	rjmp	.+2      	; 0x3bc <lcd_putc+0x2c>
 3ba:	80 e0       	ldi	r24, 0x00	; 0
 3bc:	80 58       	subi	r24, 0x80	; 128
 3be:	0e 94 8d 01 	call	0x31a	; 0x31a <lcd_command>
 3c2:	21 c0       	rjmp	.+66     	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 3c4:	80 31       	cpi	r24, 0x10	; 16
 3c6:	29 f4       	brne	.+10     	; 0x3d2 <lcd_putc+0x42>
 3c8:	60 e0       	ldi	r22, 0x00	; 0
 3ca:	80 ec       	ldi	r24, 0xC0	; 192
 3cc:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <lcd_write>
 3d0:	14 c0       	rjmp	.+40     	; 0x3fa <lcd_putc+0x6a>
 3d2:	80 35       	cpi	r24, 0x50	; 80
 3d4:	29 f4       	brne	.+10     	; 0x3e0 <lcd_putc+0x50>
 3d6:	60 e0       	ldi	r22, 0x00	; 0
 3d8:	80 e9       	ldi	r24, 0x90	; 144
 3da:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <lcd_write>
 3de:	0d c0       	rjmp	.+26     	; 0x3fa <lcd_putc+0x6a>
 3e0:	80 32       	cpi	r24, 0x20	; 32
 3e2:	29 f4       	brne	.+10     	; 0x3ee <lcd_putc+0x5e>
 3e4:	60 e0       	ldi	r22, 0x00	; 0
 3e6:	80 ed       	ldi	r24, 0xD0	; 208
 3e8:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <lcd_write>
 3ec:	06 c0       	rjmp	.+12     	; 0x3fa <lcd_putc+0x6a>
 3ee:	80 36       	cpi	r24, 0x60	; 96
 3f0:	21 f4       	brne	.+8      	; 0x3fa <lcd_putc+0x6a>
 3f2:	60 e0       	ldi	r22, 0x00	; 0
 3f4:	80 e8       	ldi	r24, 0x80	; 128
 3f6:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <lcd_write>
 3fa:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <lcd_waitbusy>
 3fe:	61 e0       	ldi	r22, 0x01	; 1
 400:	8c 2f       	mov	r24, r28
 402:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <lcd_write>
 406:	cf 91       	pop	r28
 408:	08 95       	ret

0000040a <lcd_puts>:
 40a:	cf 93       	push	r28
 40c:	df 93       	push	r29
 40e:	fc 01       	movw	r30, r24
 410:	03 c0       	rjmp	.+6      	; 0x418 <lcd_puts+0xe>
 412:	0e 94 c8 01 	call	0x390	; 0x390 <lcd_putc>
 416:	fe 01       	movw	r30, r28
 418:	ef 01       	movw	r28, r30
 41a:	21 96       	adiw	r28, 0x01	; 1
 41c:	80 81       	ld	r24, Z
 41e:	81 11       	cpse	r24, r1
 420:	f8 cf       	rjmp	.-16     	; 0x412 <lcd_puts+0x8>
 422:	df 91       	pop	r29
 424:	cf 91       	pop	r28
 426:	08 95       	ret

00000428 <lcd_init>:
                   LCD_DISP_ON_CURSOR      display on, cursor on
                   LCD_DISP_CURSOR_BLINK   display on, cursor on flashing
Returns:  none
*************************************************************************/
void lcd_init(uint8_t dispAttr)
{
 428:	1f 93       	push	r17
 42a:	cf 93       	push	r28
 42c:	df 93       	push	r29
 42e:	18 2f       	mov	r17, r24
	#if LCD_PCF8574_INIT == 1
	//init pcf8574
	pcf8574_init();
 430:	0e 94 c8 02 	call	0x590	; 0x590 <pcf8574_init>
	#endif

	dataport = 0;
 434:	10 92 18 01 	sts	0x0118, r1	; 0x800118 <__data_end>
	pcf8574_setoutput(LCD_PCF8574_DEVICEID, dataport);
 438:	60 91 18 01 	lds	r22, 0x0118	; 0x800118 <__data_end>
 43c:	80 e0       	ldi	r24, 0x00	; 0
 43e:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <pcf8574_setoutput>
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
 442:	80 e0       	ldi	r24, 0x00	; 0
 444:	9a ef       	ldi	r25, 0xFA	; 250
 446:	01 97       	sbiw	r24, 0x01	; 1
 448:	f1 f7       	brne	.-4      	; 0x446 <lcd_init+0x1e>
	pcf8574_setoutput(LCD_PCF8574_DEVICEID, dataport);

    delay(16000);        /* wait 16ms or more after power-on       */

    /* initial write to lcd is 8bit */
    dataport |= _BV(LCD_DATA1_PIN);  // _BV(LCD_FUNCTION)>>4;
 44a:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 44e:	80 62       	ori	r24, 0x20	; 32
 450:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
    dataport |= _BV(LCD_DATA0_PIN);  // _BV(LCD_FUNCTION_8BIT)>>4;
 454:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 458:	80 61       	ori	r24, 0x10	; 16
 45a:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
    pcf8574_setoutput(LCD_PCF8574_DEVICEID, dataport);
 45e:	60 91 18 01 	lds	r22, 0x0118	; 0x800118 <__data_end>
 462:	80 e0       	ldi	r24, 0x00	; 0
 464:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <pcf8574_setoutput>

    lcd_e_toggle();
 468:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <toggle_e>
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
 46c:	80 e0       	ldi	r24, 0x00	; 0
 46e:	9e e4       	ldi	r25, 0x4E	; 78
 470:	01 97       	sbiw	r24, 0x01	; 1
 472:	f1 f7       	brne	.-4      	; 0x470 <lcd_init+0x48>

    lcd_e_toggle();
    delay(4992);         /* delay, busy flag can't be checked here */
   
    /* repeat last command */ 
    lcd_e_toggle();      
 474:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <toggle_e>
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
 478:	c0 e0       	ldi	r28, 0x00	; 0
 47a:	d1 e0       	ldi	r29, 0x01	; 1
 47c:	ce 01       	movw	r24, r28
 47e:	01 97       	sbiw	r24, 0x01	; 1
 480:	f1 f7       	brne	.-4      	; 0x47e <lcd_init+0x56>
    /* repeat last command */ 
    lcd_e_toggle();      
    delay(64);           /* delay, busy flag can't be checked here */
    
    /* repeat last command a third time */
    lcd_e_toggle();      
 482:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <toggle_e>
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
 486:	ce 01       	movw	r24, r28
 488:	01 97       	sbiw	r24, 0x01	; 1
 48a:	f1 f7       	brne	.-4      	; 0x488 <lcd_init+0x60>
    /* repeat last command a third time */
    lcd_e_toggle();      
    delay(64);           /* delay, busy flag can't be checked here */

    /* now configure for 4bit mode */
    dataport &= ~_BV(LCD_DATA0_PIN);
 48c:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 490:	8f 7e       	andi	r24, 0xEF	; 239
 492:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
    pcf8574_setoutput(LCD_PCF8574_DEVICEID, dataport);
 496:	60 91 18 01 	lds	r22, 0x0118	; 0x800118 <__data_end>
 49a:	80 e0       	ldi	r24, 0x00	; 0
 49c:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <pcf8574_setoutput>
    lcd_e_toggle();
 4a0:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <toggle_e>
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
 4a4:	21 97       	sbiw	r28, 0x01	; 1
 4a6:	f1 f7       	brne	.-4      	; 0x4a4 <lcd_init+0x7c>
    lcd_e_toggle();
    delay(64);           /* some displays need this additional delay */
    
    /* from now the LCD only accepts 4 bit I/O, we can use lcd_command() */    

    lcd_command(LCD_FUNCTION_DEFAULT);      /* function set: display lines  */
 4a8:	88 e2       	ldi	r24, 0x28	; 40
 4aa:	0e 94 8d 01 	call	0x31a	; 0x31a <lcd_command>

    lcd_command(LCD_DISP_OFF);              /* display off                  */
 4ae:	88 e0       	ldi	r24, 0x08	; 8
 4b0:	0e 94 8d 01 	call	0x31a	; 0x31a <lcd_command>
    lcd_clrscr();                           /* display clear                */
 4b4:	0e 94 ad 01 	call	0x35a	; 0x35a <lcd_clrscr>
    lcd_command(LCD_MODE_DEFAULT);          /* set entry mode               */
 4b8:	86 e0       	ldi	r24, 0x06	; 6
 4ba:	0e 94 8d 01 	call	0x31a	; 0x31a <lcd_command>
    lcd_command(dispAttr);                  /* display/cursor control       */
 4be:	81 2f       	mov	r24, r17
 4c0:	0e 94 8d 01 	call	0x31a	; 0x31a <lcd_command>

}/* lcd_init */
 4c4:	df 91       	pop	r29
 4c6:	cf 91       	pop	r28
 4c8:	1f 91       	pop	r17
 4ca:	08 95       	ret

000004cc <lcd_puts_num>:
#include "main.h"

void lcd_puts_num(int number)
{
 4cc:	0f 93       	push	r16
 4ce:	1f 93       	push	r17
 4d0:	cf 93       	push	r28
 4d2:	df 93       	push	r29
 4d4:	cd b7       	in	r28, 0x3d	; 61
 4d6:	de b7       	in	r29, 0x3e	; 62
 4d8:	da 95       	dec	r29
 4da:	0f b6       	in	r0, 0x3f	; 63
 4dc:	f8 94       	cli
 4de:	de bf       	out	0x3e, r29	; 62
 4e0:	0f be       	out	0x3f, r0	; 63
 4e2:	cd bf       	out	0x3d, r28	; 61
	char data[256];
	sprintf(data, "%d", number);
 4e4:	9f 93       	push	r25
 4e6:	8f 93       	push	r24
 4e8:	80 e0       	ldi	r24, 0x00	; 0
 4ea:	91 e0       	ldi	r25, 0x01	; 1
 4ec:	9f 93       	push	r25
 4ee:	8f 93       	push	r24
 4f0:	8e 01       	movw	r16, r28
 4f2:	0f 5f       	subi	r16, 0xFF	; 255
 4f4:	1f 4f       	sbci	r17, 0xFF	; 255
 4f6:	1f 93       	push	r17
 4f8:	0f 93       	push	r16
 4fa:	0e 94 44 03 	call	0x688	; 0x688 <sprintf>
	lcd_puts(data);
 4fe:	c8 01       	movw	r24, r16
 500:	0e 94 05 02 	call	0x40a	; 0x40a <lcd_puts>
}
 504:	0f 90       	pop	r0
 506:	0f 90       	pop	r0
 508:	0f 90       	pop	r0
 50a:	0f 90       	pop	r0
 50c:	0f 90       	pop	r0
 50e:	0f 90       	pop	r0
 510:	d3 95       	inc	r29
 512:	0f b6       	in	r0, 0x3f	; 63
 514:	f8 94       	cli
 516:	de bf       	out	0x3e, r29	; 62
 518:	0f be       	out	0x3f, r0	; 63
 51a:	cd bf       	out	0x3d, r28	; 61
 51c:	df 91       	pop	r29
 51e:	cf 91       	pop	r28
 520:	1f 91       	pop	r17
 522:	0f 91       	pop	r16
 524:	08 95       	ret

00000526 <main>:

int main(void)
{
	uint8_t count = 0;
	
	lcd_init(LCD_DISP_ON_BLINK);
 526:	8d e0       	ldi	r24, 0x0D	; 13
 528:	0e 94 14 02 	call	0x428	; 0x428 <lcd_init>
	lcd_home();
 52c:	0e 94 c4 01 	call	0x388	; 0x388 <lcd_home>
	lcd_led(0);
 530:	80 e0       	ldi	r24, 0x00	; 0
 532:	0e 94 b1 01 	call	0x362	; 0x362 <lcd_led>
	lcd_gotoxy(0, 0);
 536:	60 e0       	ldi	r22, 0x00	; 0
 538:	80 e0       	ldi	r24, 0x00	; 0
 53a:	0e 94 97 01 	call	0x32e	; 0x32e <lcd_gotoxy>
	lcd_puts("Hello epta!");
 53e:	83 e0       	ldi	r24, 0x03	; 3
 540:	91 e0       	ldi	r25, 0x01	; 1
 542:	0e 94 05 02 	call	0x40a	; 0x40a <lcd_puts>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 546:	2f ef       	ldi	r18, 0xFF	; 255
 548:	83 ed       	ldi	r24, 0xD3	; 211
 54a:	90 e3       	ldi	r25, 0x30	; 48
 54c:	21 50       	subi	r18, 0x01	; 1
 54e:	80 40       	sbci	r24, 0x00	; 0
 550:	90 40       	sbci	r25, 0x00	; 0
 552:	e1 f7       	brne	.-8      	; 0x54c <main+0x26>
 554:	00 c0       	rjmp	.+0      	; 0x556 <main+0x30>
 556:	00 00       	nop
	_delay_ms(1000);
	lcd_clrscr();
 558:	0e 94 ad 01 	call	0x35a	; 0x35a <lcd_clrscr>
	lcd_puts(data);
}

int main(void)
{
	uint8_t count = 0;
 55c:	c0 e0       	ldi	r28, 0x00	; 0
	lcd_puts("Hello epta!");
	_delay_ms(1000);
	lcd_clrscr();
	while (1)
	{
		lcd_home();
 55e:	0e 94 c4 01 	call	0x388	; 0x388 <lcd_home>
		lcd_puts("Count = ");
 562:	8f e0       	ldi	r24, 0x0F	; 15
 564:	91 e0       	ldi	r25, 0x01	; 1
 566:	0e 94 05 02 	call	0x40a	; 0x40a <lcd_puts>
		lcd_gotoxy(8, 0);
 56a:	60 e0       	ldi	r22, 0x00	; 0
 56c:	88 e0       	ldi	r24, 0x08	; 8
 56e:	0e 94 97 01 	call	0x32e	; 0x32e <lcd_gotoxy>
		lcd_puts_num(count);
 572:	8c 2f       	mov	r24, r28
 574:	90 e0       	ldi	r25, 0x00	; 0
 576:	0e 94 66 02 	call	0x4cc	; 0x4cc <lcd_puts_num>
		count++;
 57a:	cf 5f       	subi	r28, 0xFF	; 255
 57c:	2f ef       	ldi	r18, 0xFF	; 255
 57e:	83 ed       	ldi	r24, 0xD3	; 211
 580:	90 e3       	ldi	r25, 0x30	; 48
 582:	21 50       	subi	r18, 0x01	; 1
 584:	80 40       	sbci	r24, 0x00	; 0
 586:	90 40       	sbci	r25, 0x00	; 0
 588:	e1 f7       	brne	.-8      	; 0x582 <main+0x5c>
 58a:	00 c0       	rjmp	.+0      	; 0x58c <main+0x66>
 58c:	00 00       	nop
 58e:	e7 cf       	rjmp	.-50     	; 0x55e <main+0x38>

00000590 <pcf8574_init>:
		i2c_write(b);
		i2c_stop();
		return 0;
	}
	return -1;
}
 590:	0e 94 53 00 	call	0xa6	; 0xa6 <i2c_init>
 594:	85 e3       	ldi	r24, 0x35	; 53
 596:	8a 95       	dec	r24
 598:	f1 f7       	brne	.-4      	; 0x596 <pcf8574_init+0x6>
 59a:	00 00       	nop
 59c:	80 e0       	ldi	r24, 0x00	; 0
 59e:	06 c0       	rjmp	.+12     	; 0x5ac <pcf8574_init+0x1c>
 5a0:	e8 2f       	mov	r30, r24
 5a2:	f0 e0       	ldi	r31, 0x00	; 0
 5a4:	e7 5e       	subi	r30, 0xE7	; 231
 5a6:	fe 4f       	sbci	r31, 0xFE	; 254
 5a8:	10 82       	st	Z, r1
 5aa:	8f 5f       	subi	r24, 0xFF	; 255
 5ac:	88 23       	and	r24, r24
 5ae:	c1 f3       	breq	.-16     	; 0x5a0 <pcf8574_init+0x10>
 5b0:	08 95       	ret

000005b2 <pcf8574_getoutputpin>:
 5b2:	81 11       	cpse	r24, r1
 5b4:	11 c0       	rjmp	.+34     	; 0x5d8 <pcf8574_getoutputpin+0x26>
 5b6:	68 30       	cpi	r22, 0x08	; 8
 5b8:	88 f4       	brcc	.+34     	; 0x5dc <pcf8574_getoutputpin+0x2a>
 5ba:	e8 2f       	mov	r30, r24
 5bc:	f0 e0       	ldi	r31, 0x00	; 0
 5be:	e7 5e       	subi	r30, 0xE7	; 231
 5c0:	fe 4f       	sbci	r31, 0xFE	; 254
 5c2:	80 81       	ld	r24, Z
 5c4:	08 2e       	mov	r0, r24
 5c6:	00 0c       	add	r0, r0
 5c8:	99 0b       	sbc	r25, r25
 5ca:	02 c0       	rjmp	.+4      	; 0x5d0 <pcf8574_getoutputpin+0x1e>
 5cc:	95 95       	asr	r25
 5ce:	87 95       	ror	r24
 5d0:	6a 95       	dec	r22
 5d2:	e2 f7       	brpl	.-8      	; 0x5cc <pcf8574_getoutputpin+0x1a>
 5d4:	81 70       	andi	r24, 0x01	; 1
 5d6:	08 95       	ret
 5d8:	8f ef       	ldi	r24, 0xFF	; 255
 5da:	08 95       	ret
 5dc:	8f ef       	ldi	r24, 0xFF	; 255
 5de:	08 95       	ret

000005e0 <pcf8574_setoutput>:
 5e0:	cf 93       	push	r28
 5e2:	81 11       	cpse	r24, r1
 5e4:	11 c0       	rjmp	.+34     	; 0x608 <pcf8574_setoutput+0x28>
 5e6:	c6 2f       	mov	r28, r22
 5e8:	e8 2f       	mov	r30, r24
 5ea:	f0 e0       	ldi	r31, 0x00	; 0
 5ec:	e7 5e       	subi	r30, 0xE7	; 231
 5ee:	fe 4f       	sbci	r31, 0xFE	; 254
 5f0:	60 83       	st	Z, r22
 5f2:	89 5d       	subi	r24, 0xD9	; 217
 5f4:	88 0f       	add	r24, r24
 5f6:	0e 94 59 00 	call	0xb2	; 0xb2 <i2c_start>
 5fa:	8c 2f       	mov	r24, r28
 5fc:	0e 94 87 00 	call	0x10e	; 0x10e <i2c_write>
 600:	0e 94 7f 00 	call	0xfe	; 0xfe <i2c_stop>
 604:	80 e0       	ldi	r24, 0x00	; 0
 606:	01 c0       	rjmp	.+2      	; 0x60a <pcf8574_setoutput+0x2a>
 608:	8f ef       	ldi	r24, 0xFF	; 255
 60a:	cf 91       	pop	r28
 60c:	08 95       	ret

0000060e <pcf8574_setoutputpin>:

/*
 * set output pin
 */
int8_t pcf8574_setoutputpin(uint8_t deviceid, uint8_t pin, uint8_t data) {
 60e:	cf 93       	push	r28
 610:	df 93       	push	r29
	if((deviceid >= 0 && deviceid < PCF8574_MAXDEVICES) && (pin >= 0 && pin < PCF8574_MAXPINS)) {
 612:	81 11       	cpse	r24, r1
 614:	2b c0       	rjmp	.+86     	; 0x66c <pcf8574_setoutputpin+0x5e>
 616:	68 30       	cpi	r22, 0x08	; 8
 618:	58 f5       	brcc	.+86     	; 0x670 <pcf8574_setoutputpin+0x62>
	    uint8_t b = 0;
	    b = pcf8574_pinstatus[deviceid];
 61a:	28 2f       	mov	r18, r24
 61c:	30 e0       	ldi	r19, 0x00	; 0
 61e:	f9 01       	movw	r30, r18
 620:	e7 5e       	subi	r30, 0xE7	; 231
 622:	fe 4f       	sbci	r31, 0xFE	; 254
 624:	90 81       	ld	r25, Z
	    b = (data != 0) ? (b | (1 << pin)) : (b & ~(1 << pin));
 626:	44 23       	and	r20, r20
 628:	49 f0       	breq	.+18     	; 0x63c <pcf8574_setoutputpin+0x2e>
 62a:	c1 e0       	ldi	r28, 0x01	; 1
 62c:	d0 e0       	ldi	r29, 0x00	; 0
 62e:	02 c0       	rjmp	.+4      	; 0x634 <pcf8574_setoutputpin+0x26>
 630:	cc 0f       	add	r28, r28
 632:	dd 1f       	adc	r29, r29
 634:	6a 95       	dec	r22
 636:	e2 f7       	brpl	.-8      	; 0x630 <pcf8574_setoutputpin+0x22>
 638:	c9 2b       	or	r28, r25
 63a:	09 c0       	rjmp	.+18     	; 0x64e <pcf8574_setoutputpin+0x40>
 63c:	c1 e0       	ldi	r28, 0x01	; 1
 63e:	d0 e0       	ldi	r29, 0x00	; 0
 640:	02 c0       	rjmp	.+4      	; 0x646 <pcf8574_setoutputpin+0x38>
 642:	cc 0f       	add	r28, r28
 644:	dd 1f       	adc	r29, r29
 646:	6a 95       	dec	r22
 648:	e2 f7       	brpl	.-8      	; 0x642 <pcf8574_setoutputpin+0x34>
 64a:	c0 95       	com	r28
 64c:	c9 23       	and	r28, r25
	    pcf8574_pinstatus[deviceid] = b;
 64e:	f9 01       	movw	r30, r18
 650:	e7 5e       	subi	r30, 0xE7	; 231
 652:	fe 4f       	sbci	r31, 0xFE	; 254
 654:	c0 83       	st	Z, r28
	    //update device
		i2c_start(((PCF8574_ADDRBASE+deviceid)<<1) | I2C_WRITE);
 656:	89 5d       	subi	r24, 0xD9	; 217
 658:	88 0f       	add	r24, r24
 65a:	0e 94 59 00 	call	0xb2	; 0xb2 <i2c_start>
		i2c_write(b);
 65e:	8c 2f       	mov	r24, r28
 660:	0e 94 87 00 	call	0x10e	; 0x10e <i2c_write>
		i2c_stop();
 664:	0e 94 7f 00 	call	0xfe	; 0xfe <i2c_stop>
		return 0;
 668:	80 e0       	ldi	r24, 0x00	; 0
 66a:	03 c0       	rjmp	.+6      	; 0x672 <pcf8574_setoutputpin+0x64>
	}
	return -1;
 66c:	8f ef       	ldi	r24, 0xFF	; 255
 66e:	01 c0       	rjmp	.+2      	; 0x672 <pcf8574_setoutputpin+0x64>
 670:	8f ef       	ldi	r24, 0xFF	; 255
}
 672:	df 91       	pop	r29
 674:	cf 91       	pop	r28
 676:	08 95       	ret

00000678 <pcf8574_setoutputpinhigh>:

/*
 * set output pin high
 */
int8_t pcf8574_setoutputpinhigh(uint8_t deviceid, uint8_t pin) {
	return pcf8574_setoutputpin(deviceid, pin, 1);
 678:	41 e0       	ldi	r20, 0x01	; 1
 67a:	0e 94 07 03 	call	0x60e	; 0x60e <pcf8574_setoutputpin>
}
 67e:	08 95       	ret

00000680 <pcf8574_setoutputpinlow>:

/*
 * set output pin low
 */
int8_t pcf8574_setoutputpinlow(uint8_t deviceid, uint8_t pin) {
	return pcf8574_setoutputpin(deviceid, pin, 0);
 680:	40 e0       	ldi	r20, 0x00	; 0
 682:	0e 94 07 03 	call	0x60e	; 0x60e <pcf8574_setoutputpin>
}
 686:	08 95       	ret

00000688 <sprintf>:
 688:	ae e0       	ldi	r26, 0x0E	; 14
 68a:	b0 e0       	ldi	r27, 0x00	; 0
 68c:	ea e4       	ldi	r30, 0x4A	; 74
 68e:	f3 e0       	ldi	r31, 0x03	; 3
 690:	0c 94 05 06 	jmp	0xc0a	; 0xc0a <__prologue_saves__+0x1c>
 694:	0d 89       	ldd	r16, Y+21	; 0x15
 696:	1e 89       	ldd	r17, Y+22	; 0x16
 698:	86 e0       	ldi	r24, 0x06	; 6
 69a:	8c 83       	std	Y+4, r24	; 0x04
 69c:	1a 83       	std	Y+2, r17	; 0x02
 69e:	09 83       	std	Y+1, r16	; 0x01
 6a0:	8f ef       	ldi	r24, 0xFF	; 255
 6a2:	9f e7       	ldi	r25, 0x7F	; 127
 6a4:	9e 83       	std	Y+6, r25	; 0x06
 6a6:	8d 83       	std	Y+5, r24	; 0x05
 6a8:	ae 01       	movw	r20, r28
 6aa:	47 5e       	subi	r20, 0xE7	; 231
 6ac:	5f 4f       	sbci	r21, 0xFF	; 255
 6ae:	6f 89       	ldd	r22, Y+23	; 0x17
 6b0:	78 8d       	ldd	r23, Y+24	; 0x18
 6b2:	ce 01       	movw	r24, r28
 6b4:	01 96       	adiw	r24, 0x01	; 1
 6b6:	0e 94 66 03 	call	0x6cc	; 0x6cc <vfprintf>
 6ba:	ef 81       	ldd	r30, Y+7	; 0x07
 6bc:	f8 85       	ldd	r31, Y+8	; 0x08
 6be:	e0 0f       	add	r30, r16
 6c0:	f1 1f       	adc	r31, r17
 6c2:	10 82       	st	Z, r1
 6c4:	2e 96       	adiw	r28, 0x0e	; 14
 6c6:	e4 e0       	ldi	r30, 0x04	; 4
 6c8:	0c 94 21 06 	jmp	0xc42	; 0xc42 <__epilogue_restores__+0x1c>

000006cc <vfprintf>:
 6cc:	ab e0       	ldi	r26, 0x0B	; 11
 6ce:	b0 e0       	ldi	r27, 0x00	; 0
 6d0:	ec e6       	ldi	r30, 0x6C	; 108
 6d2:	f3 e0       	ldi	r31, 0x03	; 3
 6d4:	0c 94 f7 05 	jmp	0xbee	; 0xbee <__prologue_saves__>
 6d8:	6c 01       	movw	r12, r24
 6da:	7b 01       	movw	r14, r22
 6dc:	8a 01       	movw	r16, r20
 6de:	fc 01       	movw	r30, r24
 6e0:	17 82       	std	Z+7, r1	; 0x07
 6e2:	16 82       	std	Z+6, r1	; 0x06
 6e4:	83 81       	ldd	r24, Z+3	; 0x03
 6e6:	81 ff       	sbrs	r24, 1
 6e8:	cc c1       	rjmp	.+920    	; 0xa82 <__stack+0x183>
 6ea:	ce 01       	movw	r24, r28
 6ec:	01 96       	adiw	r24, 0x01	; 1
 6ee:	3c 01       	movw	r6, r24
 6f0:	f6 01       	movw	r30, r12
 6f2:	93 81       	ldd	r25, Z+3	; 0x03
 6f4:	f7 01       	movw	r30, r14
 6f6:	93 fd       	sbrc	r25, 3
 6f8:	85 91       	lpm	r24, Z+
 6fa:	93 ff       	sbrs	r25, 3
 6fc:	81 91       	ld	r24, Z+
 6fe:	7f 01       	movw	r14, r30
 700:	88 23       	and	r24, r24
 702:	09 f4       	brne	.+2      	; 0x706 <vfprintf+0x3a>
 704:	ba c1       	rjmp	.+884    	; 0xa7a <__stack+0x17b>
 706:	85 32       	cpi	r24, 0x25	; 37
 708:	39 f4       	brne	.+14     	; 0x718 <vfprintf+0x4c>
 70a:	93 fd       	sbrc	r25, 3
 70c:	85 91       	lpm	r24, Z+
 70e:	93 ff       	sbrs	r25, 3
 710:	81 91       	ld	r24, Z+
 712:	7f 01       	movw	r14, r30
 714:	85 32       	cpi	r24, 0x25	; 37
 716:	29 f4       	brne	.+10     	; 0x722 <vfprintf+0x56>
 718:	b6 01       	movw	r22, r12
 71a:	90 e0       	ldi	r25, 0x00	; 0
 71c:	0e 94 5d 05 	call	0xaba	; 0xaba <fputc>
 720:	e7 cf       	rjmp	.-50     	; 0x6f0 <vfprintf+0x24>
 722:	91 2c       	mov	r9, r1
 724:	21 2c       	mov	r2, r1
 726:	31 2c       	mov	r3, r1
 728:	ff e1       	ldi	r31, 0x1F	; 31
 72a:	f3 15       	cp	r31, r3
 72c:	d8 f0       	brcs	.+54     	; 0x764 <vfprintf+0x98>
 72e:	8b 32       	cpi	r24, 0x2B	; 43
 730:	79 f0       	breq	.+30     	; 0x750 <vfprintf+0x84>
 732:	38 f4       	brcc	.+14     	; 0x742 <vfprintf+0x76>
 734:	80 32       	cpi	r24, 0x20	; 32
 736:	79 f0       	breq	.+30     	; 0x756 <vfprintf+0x8a>
 738:	83 32       	cpi	r24, 0x23	; 35
 73a:	a1 f4       	brne	.+40     	; 0x764 <vfprintf+0x98>
 73c:	23 2d       	mov	r18, r3
 73e:	20 61       	ori	r18, 0x10	; 16
 740:	1d c0       	rjmp	.+58     	; 0x77c <vfprintf+0xb0>
 742:	8d 32       	cpi	r24, 0x2D	; 45
 744:	61 f0       	breq	.+24     	; 0x75e <vfprintf+0x92>
 746:	80 33       	cpi	r24, 0x30	; 48
 748:	69 f4       	brne	.+26     	; 0x764 <vfprintf+0x98>
 74a:	23 2d       	mov	r18, r3
 74c:	21 60       	ori	r18, 0x01	; 1
 74e:	16 c0       	rjmp	.+44     	; 0x77c <vfprintf+0xb0>
 750:	83 2d       	mov	r24, r3
 752:	82 60       	ori	r24, 0x02	; 2
 754:	38 2e       	mov	r3, r24
 756:	e3 2d       	mov	r30, r3
 758:	e4 60       	ori	r30, 0x04	; 4
 75a:	3e 2e       	mov	r3, r30
 75c:	2a c0       	rjmp	.+84     	; 0x7b2 <vfprintf+0xe6>
 75e:	f3 2d       	mov	r31, r3
 760:	f8 60       	ori	r31, 0x08	; 8
 762:	1d c0       	rjmp	.+58     	; 0x79e <vfprintf+0xd2>
 764:	37 fc       	sbrc	r3, 7
 766:	2d c0       	rjmp	.+90     	; 0x7c2 <vfprintf+0xf6>
 768:	20 ed       	ldi	r18, 0xD0	; 208
 76a:	28 0f       	add	r18, r24
 76c:	2a 30       	cpi	r18, 0x0A	; 10
 76e:	40 f0       	brcs	.+16     	; 0x780 <vfprintf+0xb4>
 770:	8e 32       	cpi	r24, 0x2E	; 46
 772:	b9 f4       	brne	.+46     	; 0x7a2 <vfprintf+0xd6>
 774:	36 fc       	sbrc	r3, 6
 776:	81 c1       	rjmp	.+770    	; 0xa7a <__stack+0x17b>
 778:	23 2d       	mov	r18, r3
 77a:	20 64       	ori	r18, 0x40	; 64
 77c:	32 2e       	mov	r3, r18
 77e:	19 c0       	rjmp	.+50     	; 0x7b2 <vfprintf+0xe6>
 780:	36 fe       	sbrs	r3, 6
 782:	06 c0       	rjmp	.+12     	; 0x790 <vfprintf+0xc4>
 784:	8a e0       	ldi	r24, 0x0A	; 10
 786:	98 9e       	mul	r9, r24
 788:	20 0d       	add	r18, r0
 78a:	11 24       	eor	r1, r1
 78c:	92 2e       	mov	r9, r18
 78e:	11 c0       	rjmp	.+34     	; 0x7b2 <vfprintf+0xe6>
 790:	ea e0       	ldi	r30, 0x0A	; 10
 792:	2e 9e       	mul	r2, r30
 794:	20 0d       	add	r18, r0
 796:	11 24       	eor	r1, r1
 798:	22 2e       	mov	r2, r18
 79a:	f3 2d       	mov	r31, r3
 79c:	f0 62       	ori	r31, 0x20	; 32
 79e:	3f 2e       	mov	r3, r31
 7a0:	08 c0       	rjmp	.+16     	; 0x7b2 <vfprintf+0xe6>
 7a2:	8c 36       	cpi	r24, 0x6C	; 108
 7a4:	21 f4       	brne	.+8      	; 0x7ae <vfprintf+0xe2>
 7a6:	83 2d       	mov	r24, r3
 7a8:	80 68       	ori	r24, 0x80	; 128
 7aa:	38 2e       	mov	r3, r24
 7ac:	02 c0       	rjmp	.+4      	; 0x7b2 <vfprintf+0xe6>
 7ae:	88 36       	cpi	r24, 0x68	; 104
 7b0:	41 f4       	brne	.+16     	; 0x7c2 <vfprintf+0xf6>
 7b2:	f7 01       	movw	r30, r14
 7b4:	93 fd       	sbrc	r25, 3
 7b6:	85 91       	lpm	r24, Z+
 7b8:	93 ff       	sbrs	r25, 3
 7ba:	81 91       	ld	r24, Z+
 7bc:	7f 01       	movw	r14, r30
 7be:	81 11       	cpse	r24, r1
 7c0:	b3 cf       	rjmp	.-154    	; 0x728 <vfprintf+0x5c>
 7c2:	98 2f       	mov	r25, r24
 7c4:	9f 7d       	andi	r25, 0xDF	; 223
 7c6:	95 54       	subi	r25, 0x45	; 69
 7c8:	93 30       	cpi	r25, 0x03	; 3
 7ca:	28 f4       	brcc	.+10     	; 0x7d6 <vfprintf+0x10a>
 7cc:	0c 5f       	subi	r16, 0xFC	; 252
 7ce:	1f 4f       	sbci	r17, 0xFF	; 255
 7d0:	9f e3       	ldi	r25, 0x3F	; 63
 7d2:	99 83       	std	Y+1, r25	; 0x01
 7d4:	0d c0       	rjmp	.+26     	; 0x7f0 <vfprintf+0x124>
 7d6:	83 36       	cpi	r24, 0x63	; 99
 7d8:	31 f0       	breq	.+12     	; 0x7e6 <vfprintf+0x11a>
 7da:	83 37       	cpi	r24, 0x73	; 115
 7dc:	71 f0       	breq	.+28     	; 0x7fa <vfprintf+0x12e>
 7de:	83 35       	cpi	r24, 0x53	; 83
 7e0:	09 f0       	breq	.+2      	; 0x7e4 <vfprintf+0x118>
 7e2:	59 c0       	rjmp	.+178    	; 0x896 <__DATA_REGION_LENGTH__+0x96>
 7e4:	21 c0       	rjmp	.+66     	; 0x828 <__DATA_REGION_LENGTH__+0x28>
 7e6:	f8 01       	movw	r30, r16
 7e8:	80 81       	ld	r24, Z
 7ea:	89 83       	std	Y+1, r24	; 0x01
 7ec:	0e 5f       	subi	r16, 0xFE	; 254
 7ee:	1f 4f       	sbci	r17, 0xFF	; 255
 7f0:	88 24       	eor	r8, r8
 7f2:	83 94       	inc	r8
 7f4:	91 2c       	mov	r9, r1
 7f6:	53 01       	movw	r10, r6
 7f8:	13 c0       	rjmp	.+38     	; 0x820 <__DATA_REGION_LENGTH__+0x20>
 7fa:	28 01       	movw	r4, r16
 7fc:	f2 e0       	ldi	r31, 0x02	; 2
 7fe:	4f 0e       	add	r4, r31
 800:	51 1c       	adc	r5, r1
 802:	f8 01       	movw	r30, r16
 804:	a0 80       	ld	r10, Z
 806:	b1 80       	ldd	r11, Z+1	; 0x01
 808:	36 fe       	sbrs	r3, 6
 80a:	03 c0       	rjmp	.+6      	; 0x812 <__DATA_REGION_LENGTH__+0x12>
 80c:	69 2d       	mov	r22, r9
 80e:	70 e0       	ldi	r23, 0x00	; 0
 810:	02 c0       	rjmp	.+4      	; 0x816 <__DATA_REGION_LENGTH__+0x16>
 812:	6f ef       	ldi	r22, 0xFF	; 255
 814:	7f ef       	ldi	r23, 0xFF	; 255
 816:	c5 01       	movw	r24, r10
 818:	0e 94 52 05 	call	0xaa4	; 0xaa4 <strnlen>
 81c:	4c 01       	movw	r8, r24
 81e:	82 01       	movw	r16, r4
 820:	f3 2d       	mov	r31, r3
 822:	ff 77       	andi	r31, 0x7F	; 127
 824:	3f 2e       	mov	r3, r31
 826:	16 c0       	rjmp	.+44     	; 0x854 <__DATA_REGION_LENGTH__+0x54>
 828:	28 01       	movw	r4, r16
 82a:	22 e0       	ldi	r18, 0x02	; 2
 82c:	42 0e       	add	r4, r18
 82e:	51 1c       	adc	r5, r1
 830:	f8 01       	movw	r30, r16
 832:	a0 80       	ld	r10, Z
 834:	b1 80       	ldd	r11, Z+1	; 0x01
 836:	36 fe       	sbrs	r3, 6
 838:	03 c0       	rjmp	.+6      	; 0x840 <__DATA_REGION_LENGTH__+0x40>
 83a:	69 2d       	mov	r22, r9
 83c:	70 e0       	ldi	r23, 0x00	; 0
 83e:	02 c0       	rjmp	.+4      	; 0x844 <__DATA_REGION_LENGTH__+0x44>
 840:	6f ef       	ldi	r22, 0xFF	; 255
 842:	7f ef       	ldi	r23, 0xFF	; 255
 844:	c5 01       	movw	r24, r10
 846:	0e 94 47 05 	call	0xa8e	; 0xa8e <strnlen_P>
 84a:	4c 01       	movw	r8, r24
 84c:	f3 2d       	mov	r31, r3
 84e:	f0 68       	ori	r31, 0x80	; 128
 850:	3f 2e       	mov	r3, r31
 852:	82 01       	movw	r16, r4
 854:	33 fc       	sbrc	r3, 3
 856:	1b c0       	rjmp	.+54     	; 0x88e <__DATA_REGION_LENGTH__+0x8e>
 858:	82 2d       	mov	r24, r2
 85a:	90 e0       	ldi	r25, 0x00	; 0
 85c:	88 16       	cp	r8, r24
 85e:	99 06       	cpc	r9, r25
 860:	b0 f4       	brcc	.+44     	; 0x88e <__DATA_REGION_LENGTH__+0x8e>
 862:	b6 01       	movw	r22, r12
 864:	80 e2       	ldi	r24, 0x20	; 32
 866:	90 e0       	ldi	r25, 0x00	; 0
 868:	0e 94 5d 05 	call	0xaba	; 0xaba <fputc>
 86c:	2a 94       	dec	r2
 86e:	f4 cf       	rjmp	.-24     	; 0x858 <__DATA_REGION_LENGTH__+0x58>
 870:	f5 01       	movw	r30, r10
 872:	37 fc       	sbrc	r3, 7
 874:	85 91       	lpm	r24, Z+
 876:	37 fe       	sbrs	r3, 7
 878:	81 91       	ld	r24, Z+
 87a:	5f 01       	movw	r10, r30
 87c:	b6 01       	movw	r22, r12
 87e:	90 e0       	ldi	r25, 0x00	; 0
 880:	0e 94 5d 05 	call	0xaba	; 0xaba <fputc>
 884:	21 10       	cpse	r2, r1
 886:	2a 94       	dec	r2
 888:	21 e0       	ldi	r18, 0x01	; 1
 88a:	82 1a       	sub	r8, r18
 88c:	91 08       	sbc	r9, r1
 88e:	81 14       	cp	r8, r1
 890:	91 04       	cpc	r9, r1
 892:	71 f7       	brne	.-36     	; 0x870 <__DATA_REGION_LENGTH__+0x70>
 894:	e8 c0       	rjmp	.+464    	; 0xa66 <__stack+0x167>
 896:	84 36       	cpi	r24, 0x64	; 100
 898:	11 f0       	breq	.+4      	; 0x89e <__DATA_REGION_LENGTH__+0x9e>
 89a:	89 36       	cpi	r24, 0x69	; 105
 89c:	41 f5       	brne	.+80     	; 0x8ee <__DATA_REGION_LENGTH__+0xee>
 89e:	f8 01       	movw	r30, r16
 8a0:	37 fe       	sbrs	r3, 7
 8a2:	07 c0       	rjmp	.+14     	; 0x8b2 <__DATA_REGION_LENGTH__+0xb2>
 8a4:	60 81       	ld	r22, Z
 8a6:	71 81       	ldd	r23, Z+1	; 0x01
 8a8:	82 81       	ldd	r24, Z+2	; 0x02
 8aa:	93 81       	ldd	r25, Z+3	; 0x03
 8ac:	0c 5f       	subi	r16, 0xFC	; 252
 8ae:	1f 4f       	sbci	r17, 0xFF	; 255
 8b0:	08 c0       	rjmp	.+16     	; 0x8c2 <__DATA_REGION_LENGTH__+0xc2>
 8b2:	60 81       	ld	r22, Z
 8b4:	71 81       	ldd	r23, Z+1	; 0x01
 8b6:	07 2e       	mov	r0, r23
 8b8:	00 0c       	add	r0, r0
 8ba:	88 0b       	sbc	r24, r24
 8bc:	99 0b       	sbc	r25, r25
 8be:	0e 5f       	subi	r16, 0xFE	; 254
 8c0:	1f 4f       	sbci	r17, 0xFF	; 255
 8c2:	f3 2d       	mov	r31, r3
 8c4:	ff 76       	andi	r31, 0x6F	; 111
 8c6:	3f 2e       	mov	r3, r31
 8c8:	97 ff       	sbrs	r25, 7
 8ca:	09 c0       	rjmp	.+18     	; 0x8de <__DATA_REGION_LENGTH__+0xde>
 8cc:	90 95       	com	r25
 8ce:	80 95       	com	r24
 8d0:	70 95       	com	r23
 8d2:	61 95       	neg	r22
 8d4:	7f 4f       	sbci	r23, 0xFF	; 255
 8d6:	8f 4f       	sbci	r24, 0xFF	; 255
 8d8:	9f 4f       	sbci	r25, 0xFF	; 255
 8da:	f0 68       	ori	r31, 0x80	; 128
 8dc:	3f 2e       	mov	r3, r31
 8de:	2a e0       	ldi	r18, 0x0A	; 10
 8e0:	30 e0       	ldi	r19, 0x00	; 0
 8e2:	a3 01       	movw	r20, r6
 8e4:	0e 94 99 05 	call	0xb32	; 0xb32 <__ultoa_invert>
 8e8:	88 2e       	mov	r8, r24
 8ea:	86 18       	sub	r8, r6
 8ec:	45 c0       	rjmp	.+138    	; 0x978 <__stack+0x79>
 8ee:	85 37       	cpi	r24, 0x75	; 117
 8f0:	31 f4       	brne	.+12     	; 0x8fe <__DATA_REGION_LENGTH__+0xfe>
 8f2:	23 2d       	mov	r18, r3
 8f4:	2f 7e       	andi	r18, 0xEF	; 239
 8f6:	b2 2e       	mov	r11, r18
 8f8:	2a e0       	ldi	r18, 0x0A	; 10
 8fa:	30 e0       	ldi	r19, 0x00	; 0
 8fc:	25 c0       	rjmp	.+74     	; 0x948 <__stack+0x49>
 8fe:	93 2d       	mov	r25, r3
 900:	99 7f       	andi	r25, 0xF9	; 249
 902:	b9 2e       	mov	r11, r25
 904:	8f 36       	cpi	r24, 0x6F	; 111
 906:	c1 f0       	breq	.+48     	; 0x938 <__stack+0x39>
 908:	18 f4       	brcc	.+6      	; 0x910 <__stack+0x11>
 90a:	88 35       	cpi	r24, 0x58	; 88
 90c:	79 f0       	breq	.+30     	; 0x92c <__stack+0x2d>
 90e:	b5 c0       	rjmp	.+362    	; 0xa7a <__stack+0x17b>
 910:	80 37       	cpi	r24, 0x70	; 112
 912:	19 f0       	breq	.+6      	; 0x91a <__stack+0x1b>
 914:	88 37       	cpi	r24, 0x78	; 120
 916:	21 f0       	breq	.+8      	; 0x920 <__stack+0x21>
 918:	b0 c0       	rjmp	.+352    	; 0xa7a <__stack+0x17b>
 91a:	e9 2f       	mov	r30, r25
 91c:	e0 61       	ori	r30, 0x10	; 16
 91e:	be 2e       	mov	r11, r30
 920:	b4 fe       	sbrs	r11, 4
 922:	0d c0       	rjmp	.+26     	; 0x93e <__stack+0x3f>
 924:	fb 2d       	mov	r31, r11
 926:	f4 60       	ori	r31, 0x04	; 4
 928:	bf 2e       	mov	r11, r31
 92a:	09 c0       	rjmp	.+18     	; 0x93e <__stack+0x3f>
 92c:	34 fe       	sbrs	r3, 4
 92e:	0a c0       	rjmp	.+20     	; 0x944 <__stack+0x45>
 930:	29 2f       	mov	r18, r25
 932:	26 60       	ori	r18, 0x06	; 6
 934:	b2 2e       	mov	r11, r18
 936:	06 c0       	rjmp	.+12     	; 0x944 <__stack+0x45>
 938:	28 e0       	ldi	r18, 0x08	; 8
 93a:	30 e0       	ldi	r19, 0x00	; 0
 93c:	05 c0       	rjmp	.+10     	; 0x948 <__stack+0x49>
 93e:	20 e1       	ldi	r18, 0x10	; 16
 940:	30 e0       	ldi	r19, 0x00	; 0
 942:	02 c0       	rjmp	.+4      	; 0x948 <__stack+0x49>
 944:	20 e1       	ldi	r18, 0x10	; 16
 946:	32 e0       	ldi	r19, 0x02	; 2
 948:	f8 01       	movw	r30, r16
 94a:	b7 fe       	sbrs	r11, 7
 94c:	07 c0       	rjmp	.+14     	; 0x95c <__stack+0x5d>
 94e:	60 81       	ld	r22, Z
 950:	71 81       	ldd	r23, Z+1	; 0x01
 952:	82 81       	ldd	r24, Z+2	; 0x02
 954:	93 81       	ldd	r25, Z+3	; 0x03
 956:	0c 5f       	subi	r16, 0xFC	; 252
 958:	1f 4f       	sbci	r17, 0xFF	; 255
 95a:	06 c0       	rjmp	.+12     	; 0x968 <__stack+0x69>
 95c:	60 81       	ld	r22, Z
 95e:	71 81       	ldd	r23, Z+1	; 0x01
 960:	80 e0       	ldi	r24, 0x00	; 0
 962:	90 e0       	ldi	r25, 0x00	; 0
 964:	0e 5f       	subi	r16, 0xFE	; 254
 966:	1f 4f       	sbci	r17, 0xFF	; 255
 968:	a3 01       	movw	r20, r6
 96a:	0e 94 99 05 	call	0xb32	; 0xb32 <__ultoa_invert>
 96e:	88 2e       	mov	r8, r24
 970:	86 18       	sub	r8, r6
 972:	fb 2d       	mov	r31, r11
 974:	ff 77       	andi	r31, 0x7F	; 127
 976:	3f 2e       	mov	r3, r31
 978:	36 fe       	sbrs	r3, 6
 97a:	0d c0       	rjmp	.+26     	; 0x996 <__stack+0x97>
 97c:	23 2d       	mov	r18, r3
 97e:	2e 7f       	andi	r18, 0xFE	; 254
 980:	a2 2e       	mov	r10, r18
 982:	89 14       	cp	r8, r9
 984:	58 f4       	brcc	.+22     	; 0x99c <__stack+0x9d>
 986:	34 fe       	sbrs	r3, 4
 988:	0b c0       	rjmp	.+22     	; 0x9a0 <__stack+0xa1>
 98a:	32 fc       	sbrc	r3, 2
 98c:	09 c0       	rjmp	.+18     	; 0x9a0 <__stack+0xa1>
 98e:	83 2d       	mov	r24, r3
 990:	8e 7e       	andi	r24, 0xEE	; 238
 992:	a8 2e       	mov	r10, r24
 994:	05 c0       	rjmp	.+10     	; 0x9a0 <__stack+0xa1>
 996:	b8 2c       	mov	r11, r8
 998:	a3 2c       	mov	r10, r3
 99a:	03 c0       	rjmp	.+6      	; 0x9a2 <__stack+0xa3>
 99c:	b8 2c       	mov	r11, r8
 99e:	01 c0       	rjmp	.+2      	; 0x9a2 <__stack+0xa3>
 9a0:	b9 2c       	mov	r11, r9
 9a2:	a4 fe       	sbrs	r10, 4
 9a4:	0f c0       	rjmp	.+30     	; 0x9c4 <__stack+0xc5>
 9a6:	fe 01       	movw	r30, r28
 9a8:	e8 0d       	add	r30, r8
 9aa:	f1 1d       	adc	r31, r1
 9ac:	80 81       	ld	r24, Z
 9ae:	80 33       	cpi	r24, 0x30	; 48
 9b0:	21 f4       	brne	.+8      	; 0x9ba <__stack+0xbb>
 9b2:	9a 2d       	mov	r25, r10
 9b4:	99 7e       	andi	r25, 0xE9	; 233
 9b6:	a9 2e       	mov	r10, r25
 9b8:	09 c0       	rjmp	.+18     	; 0x9cc <__stack+0xcd>
 9ba:	a2 fe       	sbrs	r10, 2
 9bc:	06 c0       	rjmp	.+12     	; 0x9ca <__stack+0xcb>
 9be:	b3 94       	inc	r11
 9c0:	b3 94       	inc	r11
 9c2:	04 c0       	rjmp	.+8      	; 0x9cc <__stack+0xcd>
 9c4:	8a 2d       	mov	r24, r10
 9c6:	86 78       	andi	r24, 0x86	; 134
 9c8:	09 f0       	breq	.+2      	; 0x9cc <__stack+0xcd>
 9ca:	b3 94       	inc	r11
 9cc:	a3 fc       	sbrc	r10, 3
 9ce:	11 c0       	rjmp	.+34     	; 0x9f2 <__stack+0xf3>
 9d0:	a0 fe       	sbrs	r10, 0
 9d2:	06 c0       	rjmp	.+12     	; 0x9e0 <__stack+0xe1>
 9d4:	b2 14       	cp	r11, r2
 9d6:	88 f4       	brcc	.+34     	; 0x9fa <__stack+0xfb>
 9d8:	28 0c       	add	r2, r8
 9da:	92 2c       	mov	r9, r2
 9dc:	9b 18       	sub	r9, r11
 9de:	0e c0       	rjmp	.+28     	; 0x9fc <__stack+0xfd>
 9e0:	b2 14       	cp	r11, r2
 9e2:	60 f4       	brcc	.+24     	; 0x9fc <__stack+0xfd>
 9e4:	b6 01       	movw	r22, r12
 9e6:	80 e2       	ldi	r24, 0x20	; 32
 9e8:	90 e0       	ldi	r25, 0x00	; 0
 9ea:	0e 94 5d 05 	call	0xaba	; 0xaba <fputc>
 9ee:	b3 94       	inc	r11
 9f0:	f7 cf       	rjmp	.-18     	; 0x9e0 <__stack+0xe1>
 9f2:	b2 14       	cp	r11, r2
 9f4:	18 f4       	brcc	.+6      	; 0x9fc <__stack+0xfd>
 9f6:	2b 18       	sub	r2, r11
 9f8:	02 c0       	rjmp	.+4      	; 0x9fe <__stack+0xff>
 9fa:	98 2c       	mov	r9, r8
 9fc:	21 2c       	mov	r2, r1
 9fe:	a4 fe       	sbrs	r10, 4
 a00:	10 c0       	rjmp	.+32     	; 0xa22 <__stack+0x123>
 a02:	b6 01       	movw	r22, r12
 a04:	80 e3       	ldi	r24, 0x30	; 48
 a06:	90 e0       	ldi	r25, 0x00	; 0
 a08:	0e 94 5d 05 	call	0xaba	; 0xaba <fputc>
 a0c:	a2 fe       	sbrs	r10, 2
 a0e:	17 c0       	rjmp	.+46     	; 0xa3e <__stack+0x13f>
 a10:	a1 fc       	sbrc	r10, 1
 a12:	03 c0       	rjmp	.+6      	; 0xa1a <__stack+0x11b>
 a14:	88 e7       	ldi	r24, 0x78	; 120
 a16:	90 e0       	ldi	r25, 0x00	; 0
 a18:	02 c0       	rjmp	.+4      	; 0xa1e <__stack+0x11f>
 a1a:	88 e5       	ldi	r24, 0x58	; 88
 a1c:	90 e0       	ldi	r25, 0x00	; 0
 a1e:	b6 01       	movw	r22, r12
 a20:	0c c0       	rjmp	.+24     	; 0xa3a <__stack+0x13b>
 a22:	8a 2d       	mov	r24, r10
 a24:	86 78       	andi	r24, 0x86	; 134
 a26:	59 f0       	breq	.+22     	; 0xa3e <__stack+0x13f>
 a28:	a1 fe       	sbrs	r10, 1
 a2a:	02 c0       	rjmp	.+4      	; 0xa30 <__stack+0x131>
 a2c:	8b e2       	ldi	r24, 0x2B	; 43
 a2e:	01 c0       	rjmp	.+2      	; 0xa32 <__stack+0x133>
 a30:	80 e2       	ldi	r24, 0x20	; 32
 a32:	a7 fc       	sbrc	r10, 7
 a34:	8d e2       	ldi	r24, 0x2D	; 45
 a36:	b6 01       	movw	r22, r12
 a38:	90 e0       	ldi	r25, 0x00	; 0
 a3a:	0e 94 5d 05 	call	0xaba	; 0xaba <fputc>
 a3e:	89 14       	cp	r8, r9
 a40:	38 f4       	brcc	.+14     	; 0xa50 <__stack+0x151>
 a42:	b6 01       	movw	r22, r12
 a44:	80 e3       	ldi	r24, 0x30	; 48
 a46:	90 e0       	ldi	r25, 0x00	; 0
 a48:	0e 94 5d 05 	call	0xaba	; 0xaba <fputc>
 a4c:	9a 94       	dec	r9
 a4e:	f7 cf       	rjmp	.-18     	; 0xa3e <__stack+0x13f>
 a50:	8a 94       	dec	r8
 a52:	f3 01       	movw	r30, r6
 a54:	e8 0d       	add	r30, r8
 a56:	f1 1d       	adc	r31, r1
 a58:	80 81       	ld	r24, Z
 a5a:	b6 01       	movw	r22, r12
 a5c:	90 e0       	ldi	r25, 0x00	; 0
 a5e:	0e 94 5d 05 	call	0xaba	; 0xaba <fputc>
 a62:	81 10       	cpse	r8, r1
 a64:	f5 cf       	rjmp	.-22     	; 0xa50 <__stack+0x151>
 a66:	22 20       	and	r2, r2
 a68:	09 f4       	brne	.+2      	; 0xa6c <__stack+0x16d>
 a6a:	42 ce       	rjmp	.-892    	; 0x6f0 <vfprintf+0x24>
 a6c:	b6 01       	movw	r22, r12
 a6e:	80 e2       	ldi	r24, 0x20	; 32
 a70:	90 e0       	ldi	r25, 0x00	; 0
 a72:	0e 94 5d 05 	call	0xaba	; 0xaba <fputc>
 a76:	2a 94       	dec	r2
 a78:	f6 cf       	rjmp	.-20     	; 0xa66 <__stack+0x167>
 a7a:	f6 01       	movw	r30, r12
 a7c:	86 81       	ldd	r24, Z+6	; 0x06
 a7e:	97 81       	ldd	r25, Z+7	; 0x07
 a80:	02 c0       	rjmp	.+4      	; 0xa86 <__stack+0x187>
 a82:	8f ef       	ldi	r24, 0xFF	; 255
 a84:	9f ef       	ldi	r25, 0xFF	; 255
 a86:	2b 96       	adiw	r28, 0x0b	; 11
 a88:	e2 e1       	ldi	r30, 0x12	; 18
 a8a:	0c 94 13 06 	jmp	0xc26	; 0xc26 <__epilogue_restores__>

00000a8e <strnlen_P>:
 a8e:	fc 01       	movw	r30, r24
 a90:	05 90       	lpm	r0, Z+
 a92:	61 50       	subi	r22, 0x01	; 1
 a94:	70 40       	sbci	r23, 0x00	; 0
 a96:	01 10       	cpse	r0, r1
 a98:	d8 f7       	brcc	.-10     	; 0xa90 <strnlen_P+0x2>
 a9a:	80 95       	com	r24
 a9c:	90 95       	com	r25
 a9e:	8e 0f       	add	r24, r30
 aa0:	9f 1f       	adc	r25, r31
 aa2:	08 95       	ret

00000aa4 <strnlen>:
 aa4:	fc 01       	movw	r30, r24
 aa6:	61 50       	subi	r22, 0x01	; 1
 aa8:	70 40       	sbci	r23, 0x00	; 0
 aaa:	01 90       	ld	r0, Z+
 aac:	01 10       	cpse	r0, r1
 aae:	d8 f7       	brcc	.-10     	; 0xaa6 <strnlen+0x2>
 ab0:	80 95       	com	r24
 ab2:	90 95       	com	r25
 ab4:	8e 0f       	add	r24, r30
 ab6:	9f 1f       	adc	r25, r31
 ab8:	08 95       	ret

00000aba <fputc>:
 aba:	0f 93       	push	r16
 abc:	1f 93       	push	r17
 abe:	cf 93       	push	r28
 ac0:	df 93       	push	r29
 ac2:	fb 01       	movw	r30, r22
 ac4:	23 81       	ldd	r18, Z+3	; 0x03
 ac6:	21 fd       	sbrc	r18, 1
 ac8:	03 c0       	rjmp	.+6      	; 0xad0 <fputc+0x16>
 aca:	8f ef       	ldi	r24, 0xFF	; 255
 acc:	9f ef       	ldi	r25, 0xFF	; 255
 ace:	2c c0       	rjmp	.+88     	; 0xb28 <fputc+0x6e>
 ad0:	22 ff       	sbrs	r18, 2
 ad2:	16 c0       	rjmp	.+44     	; 0xb00 <fputc+0x46>
 ad4:	46 81       	ldd	r20, Z+6	; 0x06
 ad6:	57 81       	ldd	r21, Z+7	; 0x07
 ad8:	24 81       	ldd	r18, Z+4	; 0x04
 ada:	35 81       	ldd	r19, Z+5	; 0x05
 adc:	42 17       	cp	r20, r18
 ade:	53 07       	cpc	r21, r19
 ae0:	44 f4       	brge	.+16     	; 0xaf2 <fputc+0x38>
 ae2:	a0 81       	ld	r26, Z
 ae4:	b1 81       	ldd	r27, Z+1	; 0x01
 ae6:	9d 01       	movw	r18, r26
 ae8:	2f 5f       	subi	r18, 0xFF	; 255
 aea:	3f 4f       	sbci	r19, 0xFF	; 255
 aec:	31 83       	std	Z+1, r19	; 0x01
 aee:	20 83       	st	Z, r18
 af0:	8c 93       	st	X, r24
 af2:	26 81       	ldd	r18, Z+6	; 0x06
 af4:	37 81       	ldd	r19, Z+7	; 0x07
 af6:	2f 5f       	subi	r18, 0xFF	; 255
 af8:	3f 4f       	sbci	r19, 0xFF	; 255
 afa:	37 83       	std	Z+7, r19	; 0x07
 afc:	26 83       	std	Z+6, r18	; 0x06
 afe:	14 c0       	rjmp	.+40     	; 0xb28 <fputc+0x6e>
 b00:	8b 01       	movw	r16, r22
 b02:	ec 01       	movw	r28, r24
 b04:	fb 01       	movw	r30, r22
 b06:	00 84       	ldd	r0, Z+8	; 0x08
 b08:	f1 85       	ldd	r31, Z+9	; 0x09
 b0a:	e0 2d       	mov	r30, r0
 b0c:	09 95       	icall
 b0e:	89 2b       	or	r24, r25
 b10:	e1 f6       	brne	.-72     	; 0xaca <fputc+0x10>
 b12:	d8 01       	movw	r26, r16
 b14:	16 96       	adiw	r26, 0x06	; 6
 b16:	8d 91       	ld	r24, X+
 b18:	9c 91       	ld	r25, X
 b1a:	17 97       	sbiw	r26, 0x07	; 7
 b1c:	01 96       	adiw	r24, 0x01	; 1
 b1e:	17 96       	adiw	r26, 0x07	; 7
 b20:	9c 93       	st	X, r25
 b22:	8e 93       	st	-X, r24
 b24:	16 97       	sbiw	r26, 0x06	; 6
 b26:	ce 01       	movw	r24, r28
 b28:	df 91       	pop	r29
 b2a:	cf 91       	pop	r28
 b2c:	1f 91       	pop	r17
 b2e:	0f 91       	pop	r16
 b30:	08 95       	ret

00000b32 <__ultoa_invert>:
 b32:	fa 01       	movw	r30, r20
 b34:	aa 27       	eor	r26, r26
 b36:	28 30       	cpi	r18, 0x08	; 8
 b38:	51 f1       	breq	.+84     	; 0xb8e <__ultoa_invert+0x5c>
 b3a:	20 31       	cpi	r18, 0x10	; 16
 b3c:	81 f1       	breq	.+96     	; 0xb9e <__ultoa_invert+0x6c>
 b3e:	e8 94       	clt
 b40:	6f 93       	push	r22
 b42:	6e 7f       	andi	r22, 0xFE	; 254
 b44:	6e 5f       	subi	r22, 0xFE	; 254
 b46:	7f 4f       	sbci	r23, 0xFF	; 255
 b48:	8f 4f       	sbci	r24, 0xFF	; 255
 b4a:	9f 4f       	sbci	r25, 0xFF	; 255
 b4c:	af 4f       	sbci	r26, 0xFF	; 255
 b4e:	b1 e0       	ldi	r27, 0x01	; 1
 b50:	3e d0       	rcall	.+124    	; 0xbce <__ultoa_invert+0x9c>
 b52:	b4 e0       	ldi	r27, 0x04	; 4
 b54:	3c d0       	rcall	.+120    	; 0xbce <__ultoa_invert+0x9c>
 b56:	67 0f       	add	r22, r23
 b58:	78 1f       	adc	r23, r24
 b5a:	89 1f       	adc	r24, r25
 b5c:	9a 1f       	adc	r25, r26
 b5e:	a1 1d       	adc	r26, r1
 b60:	68 0f       	add	r22, r24
 b62:	79 1f       	adc	r23, r25
 b64:	8a 1f       	adc	r24, r26
 b66:	91 1d       	adc	r25, r1
 b68:	a1 1d       	adc	r26, r1
 b6a:	6a 0f       	add	r22, r26
 b6c:	71 1d       	adc	r23, r1
 b6e:	81 1d       	adc	r24, r1
 b70:	91 1d       	adc	r25, r1
 b72:	a1 1d       	adc	r26, r1
 b74:	20 d0       	rcall	.+64     	; 0xbb6 <__ultoa_invert+0x84>
 b76:	09 f4       	brne	.+2      	; 0xb7a <__ultoa_invert+0x48>
 b78:	68 94       	set
 b7a:	3f 91       	pop	r19
 b7c:	2a e0       	ldi	r18, 0x0A	; 10
 b7e:	26 9f       	mul	r18, r22
 b80:	11 24       	eor	r1, r1
 b82:	30 19       	sub	r19, r0
 b84:	30 5d       	subi	r19, 0xD0	; 208
 b86:	31 93       	st	Z+, r19
 b88:	de f6       	brtc	.-74     	; 0xb40 <__ultoa_invert+0xe>
 b8a:	cf 01       	movw	r24, r30
 b8c:	08 95       	ret
 b8e:	46 2f       	mov	r20, r22
 b90:	47 70       	andi	r20, 0x07	; 7
 b92:	40 5d       	subi	r20, 0xD0	; 208
 b94:	41 93       	st	Z+, r20
 b96:	b3 e0       	ldi	r27, 0x03	; 3
 b98:	0f d0       	rcall	.+30     	; 0xbb8 <__ultoa_invert+0x86>
 b9a:	c9 f7       	brne	.-14     	; 0xb8e <__ultoa_invert+0x5c>
 b9c:	f6 cf       	rjmp	.-20     	; 0xb8a <__ultoa_invert+0x58>
 b9e:	46 2f       	mov	r20, r22
 ba0:	4f 70       	andi	r20, 0x0F	; 15
 ba2:	40 5d       	subi	r20, 0xD0	; 208
 ba4:	4a 33       	cpi	r20, 0x3A	; 58
 ba6:	18 f0       	brcs	.+6      	; 0xbae <__ultoa_invert+0x7c>
 ba8:	49 5d       	subi	r20, 0xD9	; 217
 baa:	31 fd       	sbrc	r19, 1
 bac:	40 52       	subi	r20, 0x20	; 32
 bae:	41 93       	st	Z+, r20
 bb0:	02 d0       	rcall	.+4      	; 0xbb6 <__ultoa_invert+0x84>
 bb2:	a9 f7       	brne	.-22     	; 0xb9e <__ultoa_invert+0x6c>
 bb4:	ea cf       	rjmp	.-44     	; 0xb8a <__ultoa_invert+0x58>
 bb6:	b4 e0       	ldi	r27, 0x04	; 4
 bb8:	a6 95       	lsr	r26
 bba:	97 95       	ror	r25
 bbc:	87 95       	ror	r24
 bbe:	77 95       	ror	r23
 bc0:	67 95       	ror	r22
 bc2:	ba 95       	dec	r27
 bc4:	c9 f7       	brne	.-14     	; 0xbb8 <__ultoa_invert+0x86>
 bc6:	00 97       	sbiw	r24, 0x00	; 0
 bc8:	61 05       	cpc	r22, r1
 bca:	71 05       	cpc	r23, r1
 bcc:	08 95       	ret
 bce:	9b 01       	movw	r18, r22
 bd0:	ac 01       	movw	r20, r24
 bd2:	0a 2e       	mov	r0, r26
 bd4:	06 94       	lsr	r0
 bd6:	57 95       	ror	r21
 bd8:	47 95       	ror	r20
 bda:	37 95       	ror	r19
 bdc:	27 95       	ror	r18
 bde:	ba 95       	dec	r27
 be0:	c9 f7       	brne	.-14     	; 0xbd4 <__ultoa_invert+0xa2>
 be2:	62 0f       	add	r22, r18
 be4:	73 1f       	adc	r23, r19
 be6:	84 1f       	adc	r24, r20
 be8:	95 1f       	adc	r25, r21
 bea:	a0 1d       	adc	r26, r0
 bec:	08 95       	ret

00000bee <__prologue_saves__>:
 bee:	2f 92       	push	r2
 bf0:	3f 92       	push	r3
 bf2:	4f 92       	push	r4
 bf4:	5f 92       	push	r5
 bf6:	6f 92       	push	r6
 bf8:	7f 92       	push	r7
 bfa:	8f 92       	push	r8
 bfc:	9f 92       	push	r9
 bfe:	af 92       	push	r10
 c00:	bf 92       	push	r11
 c02:	cf 92       	push	r12
 c04:	df 92       	push	r13
 c06:	ef 92       	push	r14
 c08:	ff 92       	push	r15
 c0a:	0f 93       	push	r16
 c0c:	1f 93       	push	r17
 c0e:	cf 93       	push	r28
 c10:	df 93       	push	r29
 c12:	cd b7       	in	r28, 0x3d	; 61
 c14:	de b7       	in	r29, 0x3e	; 62
 c16:	ca 1b       	sub	r28, r26
 c18:	db 0b       	sbc	r29, r27
 c1a:	0f b6       	in	r0, 0x3f	; 63
 c1c:	f8 94       	cli
 c1e:	de bf       	out	0x3e, r29	; 62
 c20:	0f be       	out	0x3f, r0	; 63
 c22:	cd bf       	out	0x3d, r28	; 61
 c24:	09 94       	ijmp

00000c26 <__epilogue_restores__>:
 c26:	2a 88       	ldd	r2, Y+18	; 0x12
 c28:	39 88       	ldd	r3, Y+17	; 0x11
 c2a:	48 88       	ldd	r4, Y+16	; 0x10
 c2c:	5f 84       	ldd	r5, Y+15	; 0x0f
 c2e:	6e 84       	ldd	r6, Y+14	; 0x0e
 c30:	7d 84       	ldd	r7, Y+13	; 0x0d
 c32:	8c 84       	ldd	r8, Y+12	; 0x0c
 c34:	9b 84       	ldd	r9, Y+11	; 0x0b
 c36:	aa 84       	ldd	r10, Y+10	; 0x0a
 c38:	b9 84       	ldd	r11, Y+9	; 0x09
 c3a:	c8 84       	ldd	r12, Y+8	; 0x08
 c3c:	df 80       	ldd	r13, Y+7	; 0x07
 c3e:	ee 80       	ldd	r14, Y+6	; 0x06
 c40:	fd 80       	ldd	r15, Y+5	; 0x05
 c42:	0c 81       	ldd	r16, Y+4	; 0x04
 c44:	1b 81       	ldd	r17, Y+3	; 0x03
 c46:	aa 81       	ldd	r26, Y+2	; 0x02
 c48:	b9 81       	ldd	r27, Y+1	; 0x01
 c4a:	ce 0f       	add	r28, r30
 c4c:	d1 1d       	adc	r29, r1
 c4e:	0f b6       	in	r0, 0x3f	; 63
 c50:	f8 94       	cli
 c52:	de bf       	out	0x3e, r29	; 62
 c54:	0f be       	out	0x3f, r0	; 63
 c56:	cd bf       	out	0x3d, r28	; 61
 c58:	ed 01       	movw	r28, r26
 c5a:	08 95       	ret

00000c5c <_exit>:
 c5c:	f8 94       	cli

00000c5e <__stop_program>:
 c5e:	ff cf       	rjmp	.-2      	; 0xc5e <__stop_program>
