
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000091c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000010  00800060  0000091c  000009b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000056  00800070  00800070  000009c0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000009c0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000a1c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000100  00000000  00000000  00000a58  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000010e8  00000000  00000000  00000b58  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008e0  00000000  00000000  00001c40  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000007c0  00000000  00000000  00002520  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002a4  00000000  00000000  00002ce0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000458  00000000  00000000  00002f84  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a07  00000000  00000000  000033dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c0  00000000  00000000  00003de3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	2c c0       	rjmp	.+88     	; 0x5c <__bad_interrupt>
   4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
   6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
   8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
   a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
   c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
   e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
  10:	4d c1       	rjmp	.+666    	; 0x2ac <__vector_8>
  12:	24 c0       	rjmp	.+72     	; 0x5c <__bad_interrupt>
  14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
  16:	22 c0       	rjmp	.+68     	; 0x5c <__bad_interrupt>
  18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
  1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
  1c:	1f c0       	rjmp	.+62     	; 0x5c <__bad_interrupt>
  1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
  20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
  22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
  24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	ec e1       	ldi	r30, 0x1C	; 28
  3a:	f9 e0       	ldi	r31, 0x09	; 9
  3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0
  42:	a0 37       	cpi	r26, 0x70	; 112
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>

00000048 <__do_clear_bss>:
  48:	20 e0       	ldi	r18, 0x00	; 0
  4a:	a0 e7       	ldi	r26, 0x70	; 112
  4c:	b0 e0       	ldi	r27, 0x00	; 0
  4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
  50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
  52:	a6 3c       	cpi	r26, 0xC6	; 198
  54:	b2 07       	cpc	r27, r18
  56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
  58:	6f d1       	rcall	.+734    	; 0x338 <main>
  5a:	5e c4       	rjmp	.+2236   	; 0x918 <_exit>

0000005c <__bad_interrupt>:
  5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <i2c_wait>:
	TWBR=32;
}

//ожидание завершения задания
void i2c_wait(void){
	while (!(TWCR & (1<<TWINT)));
  5e:	06 b6       	in	r0, 0x36	; 54
  60:	07 fe       	sbrs	r0, 7
  62:	fd cf       	rjmp	.-6      	; 0x5e <i2c_wait>
}
  64:	08 95       	ret

00000066 <i2c_start>:

// условие старт
void i2c_start(void) {
	TWCR = (1<<TWINT)|(1<<TWSTA)|(1<<TWEN);
  66:	84 ea       	ldi	r24, 0xA4	; 164
  68:	86 bf       	out	0x36, r24	; 54
	i2c_wait();
  6a:	f9 df       	rcall	.-14     	; 0x5e <i2c_wait>
  6c:	08 95       	ret

0000006e <i2c_stop>:
}

// условие стоп
void i2c_stop(void) {
	TWCR = (1<<TWINT)|(1<<TWSTO)|(1<<TWEN);
  6e:	84 e9       	ldi	r24, 0x94	; 148
  70:	86 bf       	out	0x36, r24	; 54
  72:	08 95       	ret

00000074 <i2c_write>:
}

// запись байта
void i2c_write(uint8_t byte) {
	TWDR = byte;
  74:	83 b9       	out	0x03, r24	; 3
	TWCR = (1<<TWINT)|(1<<TWEN);
  76:	84 e8       	ldi	r24, 0x84	; 132
  78:	86 bf       	out	0x36, r24	; 54
	i2c_wait();
  7a:	f1 df       	rcall	.-30     	; 0x5e <i2c_wait>
  7c:	08 95       	ret

0000007e <write>:
		status=0;
	} 
	else
	{
		send_byte(1,1);// символ с кодом 1
		status=1;
  7e:	cf 93       	push	r28
  80:	c8 2f       	mov	r28, r24
  82:	84 60       	ori	r24, 0x04	; 4
  84:	67 d1       	rcall	.+718    	; 0x354 <pcf_write>
  86:	8c 2f       	mov	r24, r28
  88:	8b 7f       	andi	r24, 0xFB	; 251
  8a:	64 d1       	rcall	.+712    	; 0x354 <pcf_write>
  8c:	cf 91       	pop	r28
  8e:	08 95       	ret

00000090 <send_byte>:
  90:	cf 93       	push	r28
  92:	df 93       	push	r29
  94:	c8 2f       	mov	r28, r24
  96:	61 11       	cpse	r22, r1
  98:	02 c0       	rjmp	.+4      	; 0x9e <send_byte+0xe>
  9a:	d0 e0       	ldi	r29, 0x00	; 0
  9c:	01 c0       	rjmp	.+2      	; 0xa0 <send_byte+0x10>
  9e:	d1 e0       	ldi	r29, 0x01	; 1
  a0:	8c 2f       	mov	r24, r28
  a2:	80 7f       	andi	r24, 0xF0	; 240
  a4:	8d 2b       	or	r24, r29
  a6:	eb df       	rcall	.-42     	; 0x7e <write>
  a8:	20 e1       	ldi	r18, 0x10	; 16
  aa:	c2 9f       	mul	r28, r18
  ac:	c0 01       	movw	r24, r0
  ae:	11 24       	eor	r1, r1
  b0:	8d 2b       	or	r24, r29
  b2:	e5 df       	rcall	.-54     	; 0x7e <write>
  b4:	df 91       	pop	r29
  b6:	cf 91       	pop	r28
  b8:	08 95       	ret

000000ba <lcd_ini>:
  ba:	87 e4       	ldi	r24, 0x47	; 71
  bc:	91 e0       	ldi	r25, 0x01	; 1
  be:	01 97       	sbiw	r24, 0x01	; 1
  c0:	f1 f7       	brne	.-4      	; 0xbe <lcd_ini+0x4>
  c2:	00 c0       	rjmp	.+0      	; 0xc4 <lcd_ini+0xa>
  c4:	80 e3       	ldi	r24, 0x30	; 48
  c6:	db df       	rcall	.-74     	; 0x7e <write>
  c8:	96 e3       	ldi	r25, 0x36	; 54
  ca:	9a 95       	dec	r25
  cc:	f1 f7       	brne	.-4      	; 0xca <lcd_ini+0x10>
  ce:	00 c0       	rjmp	.+0      	; 0xd0 <lcd_ini+0x16>
  d0:	80 e3       	ldi	r24, 0x30	; 48
  d2:	d5 df       	rcall	.-86     	; 0x7e <write>
  d4:	00 c0       	rjmp	.+0      	; 0xd6 <lcd_ini+0x1c>
  d6:	00 c0       	rjmp	.+0      	; 0xd8 <lcd_ini+0x1e>
  d8:	00 00       	nop
  da:	80 e3       	ldi	r24, 0x30	; 48
  dc:	d0 df       	rcall	.-96     	; 0x7e <write>
  de:	00 c0       	rjmp	.+0      	; 0xe0 <lcd_ini+0x26>
  e0:	80 e2       	ldi	r24, 0x20	; 32
  e2:	cd df       	rcall	.-102    	; 0x7e <write>
  e4:	00 c0       	rjmp	.+0      	; 0xe6 <lcd_ini+0x2c>
  e6:	60 e0       	ldi	r22, 0x00	; 0
  e8:	88 e2       	ldi	r24, 0x28	; 40
  ea:	d2 df       	rcall	.-92     	; 0x90 <send_byte>
  ec:	00 c0       	rjmp	.+0      	; 0xee <lcd_ini+0x34>
  ee:	60 e0       	ldi	r22, 0x00	; 0
  f0:	8c e0       	ldi	r24, 0x0C	; 12
  f2:	ce df       	rcall	.-100    	; 0x90 <send_byte>
  f4:	00 c0       	rjmp	.+0      	; 0xf6 <lcd_ini+0x3c>
  f6:	60 e0       	ldi	r22, 0x00	; 0
  f8:	81 e0       	ldi	r24, 0x01	; 1
  fa:	ca df       	rcall	.-108    	; 0x90 <send_byte>
  fc:	86 e1       	ldi	r24, 0x16	; 22
  fe:	8a 95       	dec	r24
 100:	f1 f7       	brne	.-4      	; 0xfe <lcd_ini+0x44>
 102:	60 e0       	ldi	r22, 0x00	; 0
 104:	86 e0       	ldi	r24, 0x06	; 6
 106:	c4 df       	rcall	.-120    	; 0x90 <send_byte>
 108:	00 c0       	rjmp	.+0      	; 0x10a <lcd_ini+0x50>
 10a:	08 95       	ret

0000010c <lcd_str>:
 10c:	0f 93       	push	r16
 10e:	1f 93       	push	r17
 110:	cf 93       	push	r28
 112:	8c 01       	movw	r16, r24
 114:	c0 e0       	ldi	r28, 0x00	; 0
 116:	03 c0       	rjmp	.+6      	; 0x11e <lcd_str+0x12>
 118:	61 e0       	ldi	r22, 0x01	; 1
 11a:	ba df       	rcall	.-140    	; 0x90 <send_byte>
 11c:	cf 5f       	subi	r28, 0xFF	; 255
 11e:	f8 01       	movw	r30, r16
 120:	ec 0f       	add	r30, r28
 122:	f1 1d       	adc	r31, r1
 124:	80 81       	ld	r24, Z
 126:	81 11       	cpse	r24, r1
 128:	f7 cf       	rjmp	.-18     	; 0x118 <lcd_str+0xc>
 12a:	cf 91       	pop	r28
 12c:	1f 91       	pop	r17
 12e:	0f 91       	pop	r16
 130:	08 95       	ret

00000132 <lcd_clear>:
}

// чистим дисплей
void lcd_clear()
{
	send_byte(1, 0);
 132:	60 e0       	ldi	r22, 0x00	; 0
 134:	81 e0       	ldi	r24, 0x01	; 1
 136:	ac df       	rcall	.-168    	; 0x90 <send_byte>
 138:	08 95       	ret

0000013a <control_time>:
char str[80];


void control_time()
{
	if (hour == 23 && minutes >= 60)
 13a:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <hour>
 13e:	90 91 75 00 	lds	r25, 0x0075	; 0x800075 <hour+0x1>
 142:	47 97       	sbiw	r24, 0x17	; 23
 144:	91 f4       	brne	.+36     	; 0x16a <control_time+0x30>
 146:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <minutes>
 14a:	90 91 73 00 	lds	r25, 0x0073	; 0x800073 <minutes+0x1>
 14e:	cc 97       	sbiw	r24, 0x3c	; 60
 150:	64 f0       	brlt	.+24     	; 0x16a <control_time+0x30>
	{
		hour = 0;
 152:	10 92 75 00 	sts	0x0075, r1	; 0x800075 <hour+0x1>
 156:	10 92 74 00 	sts	0x0074, r1	; 0x800074 <hour>
		minutes = 0;
 15a:	10 92 73 00 	sts	0x0073, r1	; 0x800073 <minutes+0x1>
 15e:	10 92 72 00 	sts	0x0072, r1	; 0x800072 <minutes>
		seconds = 0;
 162:	10 92 71 00 	sts	0x0071, r1	; 0x800071 <__data_end+0x1>
 166:	10 92 70 00 	sts	0x0070, r1	; 0x800070 <__data_end>
	}
	
	if (minutes >= 60)
 16a:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <minutes>
 16e:	90 91 73 00 	lds	r25, 0x0073	; 0x800073 <minutes+0x1>
 172:	cc 97       	sbiw	r24, 0x3c	; 60
 174:	6c f0       	brlt	.+26     	; 0x190 <control_time+0x56>
	{
		hour++;
 176:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <hour>
 17a:	90 91 75 00 	lds	r25, 0x0075	; 0x800075 <hour+0x1>
 17e:	01 96       	adiw	r24, 0x01	; 1
 180:	90 93 75 00 	sts	0x0075, r25	; 0x800075 <hour+0x1>
 184:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <hour>
		minutes = 0;
 188:	10 92 73 00 	sts	0x0073, r1	; 0x800073 <minutes+0x1>
 18c:	10 92 72 00 	sts	0x0072, r1	; 0x800072 <minutes>
 190:	08 95       	ret

00000192 <format_time>:
	}
}

void format_time()
{
	if (minutes < 10 && hour < 10)
 192:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <minutes>
 196:	90 91 73 00 	lds	r25, 0x0073	; 0x800073 <minutes+0x1>
 19a:	8a 30       	cpi	r24, 0x0A	; 10
 19c:	91 05       	cpc	r25, r1
 19e:	e4 f4       	brge	.+56     	; 0x1d8 <format_time+0x46>
 1a0:	20 91 74 00 	lds	r18, 0x0074	; 0x800074 <hour>
 1a4:	30 91 75 00 	lds	r19, 0x0075	; 0x800075 <hour+0x1>
 1a8:	2a 30       	cpi	r18, 0x0A	; 10
 1aa:	31 05       	cpc	r19, r1
 1ac:	ac f4       	brge	.+42     	; 0x1d8 <format_time+0x46>
	{
		sprintf(str, "0%d:0%d", hour, minutes);
 1ae:	9f 93       	push	r25
 1b0:	8f 93       	push	r24
 1b2:	3f 93       	push	r19
 1b4:	2f 93       	push	r18
 1b6:	80 e6       	ldi	r24, 0x60	; 96
 1b8:	90 e0       	ldi	r25, 0x00	; 0
 1ba:	9f 93       	push	r25
 1bc:	8f 93       	push	r24
 1be:	86 e7       	ldi	r24, 0x76	; 118
 1c0:	90 e0       	ldi	r25, 0x00	; 0
 1c2:	9f 93       	push	r25
 1c4:	8f 93       	push	r24
 1c6:	d0 d0       	rcall	.+416    	; 0x368 <sprintf>
 1c8:	8d b7       	in	r24, 0x3d	; 61
 1ca:	9e b7       	in	r25, 0x3e	; 62
 1cc:	08 96       	adiw	r24, 0x08	; 8
 1ce:	0f b6       	in	r0, 0x3f	; 63
 1d0:	f8 94       	cli
 1d2:	9e bf       	out	0x3e, r25	; 62
 1d4:	0f be       	out	0x3f, r0	; 63
 1d6:	8d bf       	out	0x3d, r24	; 61
	}
	
	if (minutes < 10 && hour >= 10)
 1d8:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <minutes>
 1dc:	90 91 73 00 	lds	r25, 0x0073	; 0x800073 <minutes+0x1>
 1e0:	8a 30       	cpi	r24, 0x0A	; 10
 1e2:	91 05       	cpc	r25, r1
 1e4:	e4 f4       	brge	.+56     	; 0x21e <__EEPROM_REGION_LENGTH__+0x1e>
 1e6:	20 91 74 00 	lds	r18, 0x0074	; 0x800074 <hour>
 1ea:	30 91 75 00 	lds	r19, 0x0075	; 0x800075 <hour+0x1>
 1ee:	2a 30       	cpi	r18, 0x0A	; 10
 1f0:	31 05       	cpc	r19, r1
 1f2:	ac f0       	brlt	.+42     	; 0x21e <__EEPROM_REGION_LENGTH__+0x1e>
	{
		sprintf(str, "%d:0%d", hour, minutes);
 1f4:	9f 93       	push	r25
 1f6:	8f 93       	push	r24
 1f8:	3f 93       	push	r19
 1fa:	2f 93       	push	r18
 1fc:	81 e6       	ldi	r24, 0x61	; 97
 1fe:	90 e0       	ldi	r25, 0x00	; 0
 200:	9f 93       	push	r25
 202:	8f 93       	push	r24
 204:	86 e7       	ldi	r24, 0x76	; 118
 206:	90 e0       	ldi	r25, 0x00	; 0
 208:	9f 93       	push	r25
 20a:	8f 93       	push	r24
 20c:	ad d0       	rcall	.+346    	; 0x368 <sprintf>
 20e:	8d b7       	in	r24, 0x3d	; 61
 210:	9e b7       	in	r25, 0x3e	; 62
 212:	08 96       	adiw	r24, 0x08	; 8
 214:	0f b6       	in	r0, 0x3f	; 63
 216:	f8 94       	cli
 218:	9e bf       	out	0x3e, r25	; 62
 21a:	0f be       	out	0x3f, r0	; 63
 21c:	8d bf       	out	0x3d, r24	; 61
	}
	
	if (minutes >= 10 && hour < 10)
 21e:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <minutes>
 222:	90 91 73 00 	lds	r25, 0x0073	; 0x800073 <minutes+0x1>
 226:	8a 30       	cpi	r24, 0x0A	; 10
 228:	91 05       	cpc	r25, r1
 22a:	e4 f0       	brlt	.+56     	; 0x264 <__EEPROM_REGION_LENGTH__+0x64>
 22c:	20 91 74 00 	lds	r18, 0x0074	; 0x800074 <hour>
 230:	30 91 75 00 	lds	r19, 0x0075	; 0x800075 <hour+0x1>
 234:	2a 30       	cpi	r18, 0x0A	; 10
 236:	31 05       	cpc	r19, r1
 238:	ac f4       	brge	.+42     	; 0x264 <__EEPROM_REGION_LENGTH__+0x64>
	{
		sprintf(str, "0%d:%d", hour, minutes);
 23a:	9f 93       	push	r25
 23c:	8f 93       	push	r24
 23e:	3f 93       	push	r19
 240:	2f 93       	push	r18
 242:	88 e6       	ldi	r24, 0x68	; 104
 244:	90 e0       	ldi	r25, 0x00	; 0
 246:	9f 93       	push	r25
 248:	8f 93       	push	r24
 24a:	86 e7       	ldi	r24, 0x76	; 118
 24c:	90 e0       	ldi	r25, 0x00	; 0
 24e:	9f 93       	push	r25
 250:	8f 93       	push	r24
 252:	8a d0       	rcall	.+276    	; 0x368 <sprintf>
 254:	8d b7       	in	r24, 0x3d	; 61
 256:	9e b7       	in	r25, 0x3e	; 62
 258:	08 96       	adiw	r24, 0x08	; 8
 25a:	0f b6       	in	r0, 0x3f	; 63
 25c:	f8 94       	cli
 25e:	9e bf       	out	0x3e, r25	; 62
 260:	0f be       	out	0x3f, r0	; 63
 262:	8d bf       	out	0x3d, r24	; 61
	}
	
	if (minutes >= 10 && hour >= 10)
 264:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <minutes>
 268:	90 91 73 00 	lds	r25, 0x0073	; 0x800073 <minutes+0x1>
 26c:	8a 30       	cpi	r24, 0x0A	; 10
 26e:	91 05       	cpc	r25, r1
 270:	e4 f0       	brlt	.+56     	; 0x2aa <__EEPROM_REGION_LENGTH__+0xaa>
 272:	20 91 74 00 	lds	r18, 0x0074	; 0x800074 <hour>
 276:	30 91 75 00 	lds	r19, 0x0075	; 0x800075 <hour+0x1>
 27a:	2a 30       	cpi	r18, 0x0A	; 10
 27c:	31 05       	cpc	r19, r1
 27e:	ac f0       	brlt	.+42     	; 0x2aa <__EEPROM_REGION_LENGTH__+0xaa>
	{
		sprintf(str, "%d:%d", hour, minutes);
 280:	9f 93       	push	r25
 282:	8f 93       	push	r24
 284:	3f 93       	push	r19
 286:	2f 93       	push	r18
 288:	89 e6       	ldi	r24, 0x69	; 105
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	9f 93       	push	r25
 28e:	8f 93       	push	r24
 290:	86 e7       	ldi	r24, 0x76	; 118
 292:	90 e0       	ldi	r25, 0x00	; 0
 294:	9f 93       	push	r25
 296:	8f 93       	push	r24
 298:	67 d0       	rcall	.+206    	; 0x368 <sprintf>
 29a:	8d b7       	in	r24, 0x3d	; 61
 29c:	9e b7       	in	r25, 0x3e	; 62
 29e:	08 96       	adiw	r24, 0x08	; 8
 2a0:	0f b6       	in	r0, 0x3f	; 63
 2a2:	f8 94       	cli
 2a4:	9e bf       	out	0x3e, r25	; 62
 2a6:	0f be       	out	0x3f, r0	; 63
 2a8:	8d bf       	out	0x3d, r24	; 61
 2aa:	08 95       	ret

000002ac <__vector_8>:
	}
}

ISR(TIMER1_OVF_vect)
{
 2ac:	1f 92       	push	r1
 2ae:	0f 92       	push	r0
 2b0:	0f b6       	in	r0, 0x3f	; 63
 2b2:	0f 92       	push	r0
 2b4:	11 24       	eor	r1, r1
 2b6:	2f 93       	push	r18
 2b8:	3f 93       	push	r19
 2ba:	4f 93       	push	r20
 2bc:	5f 93       	push	r21
 2be:	6f 93       	push	r22
 2c0:	7f 93       	push	r23
 2c2:	8f 93       	push	r24
 2c4:	9f 93       	push	r25
 2c6:	af 93       	push	r26
 2c8:	bf 93       	push	r27
 2ca:	ef 93       	push	r30
 2cc:	ff 93       	push	r31
	TCCR1B &= ~(1 << CS10);
 2ce:	8e b5       	in	r24, 0x2e	; 46
 2d0:	8e 7f       	andi	r24, 0xFE	; 254
 2d2:	8e bd       	out	0x2e, r24	; 46
	TCCR1B |= (1 << CS10);
 2d4:	8e b5       	in	r24, 0x2e	; 46
 2d6:	81 60       	ori	r24, 0x01	; 1
 2d8:	8e bd       	out	0x2e, r24	; 46
	seconds += 2;
 2da:	80 91 70 00 	lds	r24, 0x0070	; 0x800070 <__data_end>
 2de:	90 91 71 00 	lds	r25, 0x0071	; 0x800071 <__data_end+0x1>
 2e2:	02 96       	adiw	r24, 0x02	; 2
 2e4:	90 93 71 00 	sts	0x0071, r25	; 0x800071 <__data_end+0x1>
 2e8:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__data_end>
	if (seconds == 60)
 2ec:	cc 97       	sbiw	r24, 0x3c	; 60
 2ee:	99 f4       	brne	.+38     	; 0x316 <__vector_8+0x6a>
	{
		minutes++;
 2f0:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <minutes>
 2f4:	90 91 73 00 	lds	r25, 0x0073	; 0x800073 <minutes+0x1>
 2f8:	01 96       	adiw	r24, 0x01	; 1
 2fa:	90 93 73 00 	sts	0x0073, r25	; 0x800073 <minutes+0x1>
 2fe:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <minutes>
		seconds = 0;
 302:	10 92 71 00 	sts	0x0071, r1	; 0x800071 <__data_end+0x1>
 306:	10 92 70 00 	sts	0x0070, r1	; 0x800070 <__data_end>
		control_time();
 30a:	17 df       	rcall	.-466    	; 0x13a <control_time>
		lcd_clear();
 30c:	12 df       	rcall	.-476    	; 0x132 <lcd_clear>
		format_time();
 30e:	41 df       	rcall	.-382    	; 0x192 <format_time>
		lcd_str(str);
 310:	86 e7       	ldi	r24, 0x76	; 118
 312:	90 e0       	ldi	r25, 0x00	; 0
 314:	fb de       	rcall	.-522    	; 0x10c <lcd_str>
	}
}
 316:	ff 91       	pop	r31
 318:	ef 91       	pop	r30
 31a:	bf 91       	pop	r27
 31c:	af 91       	pop	r26
 31e:	9f 91       	pop	r25
 320:	8f 91       	pop	r24
 322:	7f 91       	pop	r23
 324:	6f 91       	pop	r22
 326:	5f 91       	pop	r21
 328:	4f 91       	pop	r20
 32a:	3f 91       	pop	r19
 32c:	2f 91       	pop	r18
 32e:	0f 90       	pop	r0
 330:	0f be       	out	0x3f, r0	; 63
 332:	0f 90       	pop	r0
 334:	1f 90       	pop	r1
 336:	18 95       	reti

00000338 <main>:

int main(void)
{
	TIMSK |= (1 << TOIE1);
 338:	89 b7       	in	r24, 0x39	; 57
 33a:	84 60       	ori	r24, 0x04	; 4
 33c:	89 bf       	out	0x39, r24	; 57
	sei();
 33e:	78 94       	sei
	TCCR1B |= (1 << CS10);
 340:	8e b5       	in	r24, 0x2e	; 46
 342:	81 60       	ori	r24, 0x01	; 1
 344:	8e bd       	out	0x2e, r24	; 46
	
	lcd_ini();	
 346:	b9 de       	rcall	.-654    	; 0xba <lcd_ini>
	lcd_clear();
 348:	f4 de       	rcall	.-536    	; 0x132 <lcd_clear>
	format_time();
 34a:	23 df       	rcall	.-442    	; 0x192 <format_time>
	lcd_str(str);
 34c:	86 e7       	ldi	r24, 0x76	; 118
 34e:	90 e0       	ldi	r25, 0x00	; 0
 350:	dd de       	rcall	.-582    	; 0x10c <lcd_str>
 352:	ff cf       	rjmp	.-2      	; 0x352 <main+0x1a>

00000354 <pcf_write>:
#include "pcf.h"


void pcf_write(uint8_t byte){
 354:	cf 93       	push	r28
 356:	c8 2f       	mov	r28, r24
	i2c_start();
 358:	86 de       	rcall	.-756    	; 0x66 <i2c_start>
	i2c_write(0x40);// адрес на запись
 35a:	80 e4       	ldi	r24, 0x40	; 64
 35c:	8b de       	rcall	.-746    	; 0x74 <i2c_write>
	i2c_write(byte);
 35e:	8c 2f       	mov	r24, r28
 360:	89 de       	rcall	.-750    	; 0x74 <i2c_write>
	i2c_stop();
 362:	85 de       	rcall	.-758    	; 0x6e <i2c_stop>
 364:	cf 91       	pop	r28
 366:	08 95       	ret

00000368 <sprintf>:
 368:	ae e0       	ldi	r26, 0x0E	; 14
 36a:	b0 e0       	ldi	r27, 0x00	; 0
 36c:	e9 eb       	ldi	r30, 0xB9	; 185
 36e:	f1 e0       	ldi	r31, 0x01	; 1
 370:	aa c2       	rjmp	.+1364   	; 0x8c6 <__prologue_saves__+0x1c>
 372:	0d 89       	ldd	r16, Y+21	; 0x15
 374:	1e 89       	ldd	r17, Y+22	; 0x16
 376:	86 e0       	ldi	r24, 0x06	; 6
 378:	8c 83       	std	Y+4, r24	; 0x04
 37a:	1a 83       	std	Y+2, r17	; 0x02
 37c:	09 83       	std	Y+1, r16	; 0x01
 37e:	8f ef       	ldi	r24, 0xFF	; 255
 380:	9f e7       	ldi	r25, 0x7F	; 127
 382:	9e 83       	std	Y+6, r25	; 0x06
 384:	8d 83       	std	Y+5, r24	; 0x05
 386:	ae 01       	movw	r20, r28
 388:	47 5e       	subi	r20, 0xE7	; 231
 38a:	5f 4f       	sbci	r21, 0xFF	; 255
 38c:	6f 89       	ldd	r22, Y+23	; 0x17
 38e:	78 8d       	ldd	r23, Y+24	; 0x18
 390:	ce 01       	movw	r24, r28
 392:	01 96       	adiw	r24, 0x01	; 1
 394:	08 d0       	rcall	.+16     	; 0x3a6 <vfprintf>
 396:	ef 81       	ldd	r30, Y+7	; 0x07
 398:	f8 85       	ldd	r31, Y+8	; 0x08
 39a:	e0 0f       	add	r30, r16
 39c:	f1 1f       	adc	r31, r17
 39e:	10 82       	st	Z, r1
 3a0:	2e 96       	adiw	r28, 0x0e	; 14
 3a2:	e4 e0       	ldi	r30, 0x04	; 4
 3a4:	ac c2       	rjmp	.+1368   	; 0x8fe <__epilogue_restores__+0x1c>

000003a6 <vfprintf>:
 3a6:	ab e0       	ldi	r26, 0x0B	; 11
 3a8:	b0 e0       	ldi	r27, 0x00	; 0
 3aa:	e8 ed       	ldi	r30, 0xD8	; 216
 3ac:	f1 e0       	ldi	r31, 0x01	; 1
 3ae:	7d c2       	rjmp	.+1274   	; 0x8aa <__prologue_saves__>
 3b0:	6c 01       	movw	r12, r24
 3b2:	7b 01       	movw	r14, r22
 3b4:	8a 01       	movw	r16, r20
 3b6:	fc 01       	movw	r30, r24
 3b8:	17 82       	std	Z+7, r1	; 0x07
 3ba:	16 82       	std	Z+6, r1	; 0x06
 3bc:	83 81       	ldd	r24, Z+3	; 0x03
 3be:	81 ff       	sbrs	r24, 1
 3c0:	bf c1       	rjmp	.+894    	; 0x740 <__stack+0x2e1>
 3c2:	ce 01       	movw	r24, r28
 3c4:	01 96       	adiw	r24, 0x01	; 1
 3c6:	3c 01       	movw	r6, r24
 3c8:	f6 01       	movw	r30, r12
 3ca:	93 81       	ldd	r25, Z+3	; 0x03
 3cc:	f7 01       	movw	r30, r14
 3ce:	93 fd       	sbrc	r25, 3
 3d0:	85 91       	lpm	r24, Z+
 3d2:	93 ff       	sbrs	r25, 3
 3d4:	81 91       	ld	r24, Z+
 3d6:	7f 01       	movw	r14, r30
 3d8:	88 23       	and	r24, r24
 3da:	09 f4       	brne	.+2      	; 0x3de <vfprintf+0x38>
 3dc:	ad c1       	rjmp	.+858    	; 0x738 <__stack+0x2d9>
 3de:	85 32       	cpi	r24, 0x25	; 37
 3e0:	39 f4       	brne	.+14     	; 0x3f0 <vfprintf+0x4a>
 3e2:	93 fd       	sbrc	r25, 3
 3e4:	85 91       	lpm	r24, Z+
 3e6:	93 ff       	sbrs	r25, 3
 3e8:	81 91       	ld	r24, Z+
 3ea:	7f 01       	movw	r14, r30
 3ec:	85 32       	cpi	r24, 0x25	; 37
 3ee:	21 f4       	brne	.+8      	; 0x3f8 <vfprintf+0x52>
 3f0:	b6 01       	movw	r22, r12
 3f2:	90 e0       	ldi	r25, 0x00	; 0
 3f4:	c0 d1       	rcall	.+896    	; 0x776 <fputc>
 3f6:	e8 cf       	rjmp	.-48     	; 0x3c8 <vfprintf+0x22>
 3f8:	91 2c       	mov	r9, r1
 3fa:	21 2c       	mov	r2, r1
 3fc:	31 2c       	mov	r3, r1
 3fe:	ff e1       	ldi	r31, 0x1F	; 31
 400:	f3 15       	cp	r31, r3
 402:	d8 f0       	brcs	.+54     	; 0x43a <__DATA_REGION_LENGTH__+0x3a>
 404:	8b 32       	cpi	r24, 0x2B	; 43
 406:	79 f0       	breq	.+30     	; 0x426 <__DATA_REGION_LENGTH__+0x26>
 408:	38 f4       	brcc	.+14     	; 0x418 <__DATA_REGION_LENGTH__+0x18>
 40a:	80 32       	cpi	r24, 0x20	; 32
 40c:	79 f0       	breq	.+30     	; 0x42c <__DATA_REGION_LENGTH__+0x2c>
 40e:	83 32       	cpi	r24, 0x23	; 35
 410:	a1 f4       	brne	.+40     	; 0x43a <__DATA_REGION_LENGTH__+0x3a>
 412:	23 2d       	mov	r18, r3
 414:	20 61       	ori	r18, 0x10	; 16
 416:	1d c0       	rjmp	.+58     	; 0x452 <__DATA_REGION_LENGTH__+0x52>
 418:	8d 32       	cpi	r24, 0x2D	; 45
 41a:	61 f0       	breq	.+24     	; 0x434 <__DATA_REGION_LENGTH__+0x34>
 41c:	80 33       	cpi	r24, 0x30	; 48
 41e:	69 f4       	brne	.+26     	; 0x43a <__DATA_REGION_LENGTH__+0x3a>
 420:	23 2d       	mov	r18, r3
 422:	21 60       	ori	r18, 0x01	; 1
 424:	16 c0       	rjmp	.+44     	; 0x452 <__DATA_REGION_LENGTH__+0x52>
 426:	83 2d       	mov	r24, r3
 428:	82 60       	ori	r24, 0x02	; 2
 42a:	38 2e       	mov	r3, r24
 42c:	e3 2d       	mov	r30, r3
 42e:	e4 60       	ori	r30, 0x04	; 4
 430:	3e 2e       	mov	r3, r30
 432:	2a c0       	rjmp	.+84     	; 0x488 <__stack+0x29>
 434:	f3 2d       	mov	r31, r3
 436:	f8 60       	ori	r31, 0x08	; 8
 438:	1d c0       	rjmp	.+58     	; 0x474 <__stack+0x15>
 43a:	37 fc       	sbrc	r3, 7
 43c:	2d c0       	rjmp	.+90     	; 0x498 <__stack+0x39>
 43e:	20 ed       	ldi	r18, 0xD0	; 208
 440:	28 0f       	add	r18, r24
 442:	2a 30       	cpi	r18, 0x0A	; 10
 444:	40 f0       	brcs	.+16     	; 0x456 <__DATA_REGION_LENGTH__+0x56>
 446:	8e 32       	cpi	r24, 0x2E	; 46
 448:	b9 f4       	brne	.+46     	; 0x478 <__stack+0x19>
 44a:	36 fc       	sbrc	r3, 6
 44c:	75 c1       	rjmp	.+746    	; 0x738 <__stack+0x2d9>
 44e:	23 2d       	mov	r18, r3
 450:	20 64       	ori	r18, 0x40	; 64
 452:	32 2e       	mov	r3, r18
 454:	19 c0       	rjmp	.+50     	; 0x488 <__stack+0x29>
 456:	36 fe       	sbrs	r3, 6
 458:	06 c0       	rjmp	.+12     	; 0x466 <__stack+0x7>
 45a:	8a e0       	ldi	r24, 0x0A	; 10
 45c:	98 9e       	mul	r9, r24
 45e:	20 0d       	add	r18, r0
 460:	11 24       	eor	r1, r1
 462:	92 2e       	mov	r9, r18
 464:	11 c0       	rjmp	.+34     	; 0x488 <__stack+0x29>
 466:	ea e0       	ldi	r30, 0x0A	; 10
 468:	2e 9e       	mul	r2, r30
 46a:	20 0d       	add	r18, r0
 46c:	11 24       	eor	r1, r1
 46e:	22 2e       	mov	r2, r18
 470:	f3 2d       	mov	r31, r3
 472:	f0 62       	ori	r31, 0x20	; 32
 474:	3f 2e       	mov	r3, r31
 476:	08 c0       	rjmp	.+16     	; 0x488 <__stack+0x29>
 478:	8c 36       	cpi	r24, 0x6C	; 108
 47a:	21 f4       	brne	.+8      	; 0x484 <__stack+0x25>
 47c:	83 2d       	mov	r24, r3
 47e:	80 68       	ori	r24, 0x80	; 128
 480:	38 2e       	mov	r3, r24
 482:	02 c0       	rjmp	.+4      	; 0x488 <__stack+0x29>
 484:	88 36       	cpi	r24, 0x68	; 104
 486:	41 f4       	brne	.+16     	; 0x498 <__stack+0x39>
 488:	f7 01       	movw	r30, r14
 48a:	93 fd       	sbrc	r25, 3
 48c:	85 91       	lpm	r24, Z+
 48e:	93 ff       	sbrs	r25, 3
 490:	81 91       	ld	r24, Z+
 492:	7f 01       	movw	r14, r30
 494:	81 11       	cpse	r24, r1
 496:	b3 cf       	rjmp	.-154    	; 0x3fe <vfprintf+0x58>
 498:	98 2f       	mov	r25, r24
 49a:	9f 7d       	andi	r25, 0xDF	; 223
 49c:	95 54       	subi	r25, 0x45	; 69
 49e:	93 30       	cpi	r25, 0x03	; 3
 4a0:	28 f4       	brcc	.+10     	; 0x4ac <__stack+0x4d>
 4a2:	0c 5f       	subi	r16, 0xFC	; 252
 4a4:	1f 4f       	sbci	r17, 0xFF	; 255
 4a6:	9f e3       	ldi	r25, 0x3F	; 63
 4a8:	99 83       	std	Y+1, r25	; 0x01
 4aa:	0d c0       	rjmp	.+26     	; 0x4c6 <__stack+0x67>
 4ac:	83 36       	cpi	r24, 0x63	; 99
 4ae:	31 f0       	breq	.+12     	; 0x4bc <__stack+0x5d>
 4b0:	83 37       	cpi	r24, 0x73	; 115
 4b2:	71 f0       	breq	.+28     	; 0x4d0 <__stack+0x71>
 4b4:	83 35       	cpi	r24, 0x53	; 83
 4b6:	09 f0       	breq	.+2      	; 0x4ba <__stack+0x5b>
 4b8:	55 c0       	rjmp	.+170    	; 0x564 <__stack+0x105>
 4ba:	20 c0       	rjmp	.+64     	; 0x4fc <__stack+0x9d>
 4bc:	f8 01       	movw	r30, r16
 4be:	80 81       	ld	r24, Z
 4c0:	89 83       	std	Y+1, r24	; 0x01
 4c2:	0e 5f       	subi	r16, 0xFE	; 254
 4c4:	1f 4f       	sbci	r17, 0xFF	; 255
 4c6:	88 24       	eor	r8, r8
 4c8:	83 94       	inc	r8
 4ca:	91 2c       	mov	r9, r1
 4cc:	53 01       	movw	r10, r6
 4ce:	12 c0       	rjmp	.+36     	; 0x4f4 <__stack+0x95>
 4d0:	28 01       	movw	r4, r16
 4d2:	f2 e0       	ldi	r31, 0x02	; 2
 4d4:	4f 0e       	add	r4, r31
 4d6:	51 1c       	adc	r5, r1
 4d8:	f8 01       	movw	r30, r16
 4da:	a0 80       	ld	r10, Z
 4dc:	b1 80       	ldd	r11, Z+1	; 0x01
 4de:	36 fe       	sbrs	r3, 6
 4e0:	03 c0       	rjmp	.+6      	; 0x4e8 <__stack+0x89>
 4e2:	69 2d       	mov	r22, r9
 4e4:	70 e0       	ldi	r23, 0x00	; 0
 4e6:	02 c0       	rjmp	.+4      	; 0x4ec <__stack+0x8d>
 4e8:	6f ef       	ldi	r22, 0xFF	; 255
 4ea:	7f ef       	ldi	r23, 0xFF	; 255
 4ec:	c5 01       	movw	r24, r10
 4ee:	38 d1       	rcall	.+624    	; 0x760 <strnlen>
 4f0:	4c 01       	movw	r8, r24
 4f2:	82 01       	movw	r16, r4
 4f4:	f3 2d       	mov	r31, r3
 4f6:	ff 77       	andi	r31, 0x7F	; 127
 4f8:	3f 2e       	mov	r3, r31
 4fa:	15 c0       	rjmp	.+42     	; 0x526 <__stack+0xc7>
 4fc:	28 01       	movw	r4, r16
 4fe:	22 e0       	ldi	r18, 0x02	; 2
 500:	42 0e       	add	r4, r18
 502:	51 1c       	adc	r5, r1
 504:	f8 01       	movw	r30, r16
 506:	a0 80       	ld	r10, Z
 508:	b1 80       	ldd	r11, Z+1	; 0x01
 50a:	36 fe       	sbrs	r3, 6
 50c:	03 c0       	rjmp	.+6      	; 0x514 <__stack+0xb5>
 50e:	69 2d       	mov	r22, r9
 510:	70 e0       	ldi	r23, 0x00	; 0
 512:	02 c0       	rjmp	.+4      	; 0x518 <__stack+0xb9>
 514:	6f ef       	ldi	r22, 0xFF	; 255
 516:	7f ef       	ldi	r23, 0xFF	; 255
 518:	c5 01       	movw	r24, r10
 51a:	17 d1       	rcall	.+558    	; 0x74a <strnlen_P>
 51c:	4c 01       	movw	r8, r24
 51e:	f3 2d       	mov	r31, r3
 520:	f0 68       	ori	r31, 0x80	; 128
 522:	3f 2e       	mov	r3, r31
 524:	82 01       	movw	r16, r4
 526:	33 fc       	sbrc	r3, 3
 528:	19 c0       	rjmp	.+50     	; 0x55c <__stack+0xfd>
 52a:	82 2d       	mov	r24, r2
 52c:	90 e0       	ldi	r25, 0x00	; 0
 52e:	88 16       	cp	r8, r24
 530:	99 06       	cpc	r9, r25
 532:	a0 f4       	brcc	.+40     	; 0x55c <__stack+0xfd>
 534:	b6 01       	movw	r22, r12
 536:	80 e2       	ldi	r24, 0x20	; 32
 538:	90 e0       	ldi	r25, 0x00	; 0
 53a:	1d d1       	rcall	.+570    	; 0x776 <fputc>
 53c:	2a 94       	dec	r2
 53e:	f5 cf       	rjmp	.-22     	; 0x52a <__stack+0xcb>
 540:	f5 01       	movw	r30, r10
 542:	37 fc       	sbrc	r3, 7
 544:	85 91       	lpm	r24, Z+
 546:	37 fe       	sbrs	r3, 7
 548:	81 91       	ld	r24, Z+
 54a:	5f 01       	movw	r10, r30
 54c:	b6 01       	movw	r22, r12
 54e:	90 e0       	ldi	r25, 0x00	; 0
 550:	12 d1       	rcall	.+548    	; 0x776 <fputc>
 552:	21 10       	cpse	r2, r1
 554:	2a 94       	dec	r2
 556:	21 e0       	ldi	r18, 0x01	; 1
 558:	82 1a       	sub	r8, r18
 55a:	91 08       	sbc	r9, r1
 55c:	81 14       	cp	r8, r1
 55e:	91 04       	cpc	r9, r1
 560:	79 f7       	brne	.-34     	; 0x540 <__stack+0xe1>
 562:	e1 c0       	rjmp	.+450    	; 0x726 <__stack+0x2c7>
 564:	84 36       	cpi	r24, 0x64	; 100
 566:	11 f0       	breq	.+4      	; 0x56c <__stack+0x10d>
 568:	89 36       	cpi	r24, 0x69	; 105
 56a:	39 f5       	brne	.+78     	; 0x5ba <__stack+0x15b>
 56c:	f8 01       	movw	r30, r16
 56e:	37 fe       	sbrs	r3, 7
 570:	07 c0       	rjmp	.+14     	; 0x580 <__stack+0x121>
 572:	60 81       	ld	r22, Z
 574:	71 81       	ldd	r23, Z+1	; 0x01
 576:	82 81       	ldd	r24, Z+2	; 0x02
 578:	93 81       	ldd	r25, Z+3	; 0x03
 57a:	0c 5f       	subi	r16, 0xFC	; 252
 57c:	1f 4f       	sbci	r17, 0xFF	; 255
 57e:	08 c0       	rjmp	.+16     	; 0x590 <__stack+0x131>
 580:	60 81       	ld	r22, Z
 582:	71 81       	ldd	r23, Z+1	; 0x01
 584:	07 2e       	mov	r0, r23
 586:	00 0c       	add	r0, r0
 588:	88 0b       	sbc	r24, r24
 58a:	99 0b       	sbc	r25, r25
 58c:	0e 5f       	subi	r16, 0xFE	; 254
 58e:	1f 4f       	sbci	r17, 0xFF	; 255
 590:	f3 2d       	mov	r31, r3
 592:	ff 76       	andi	r31, 0x6F	; 111
 594:	3f 2e       	mov	r3, r31
 596:	97 ff       	sbrs	r25, 7
 598:	09 c0       	rjmp	.+18     	; 0x5ac <__stack+0x14d>
 59a:	90 95       	com	r25
 59c:	80 95       	com	r24
 59e:	70 95       	com	r23
 5a0:	61 95       	neg	r22
 5a2:	7f 4f       	sbci	r23, 0xFF	; 255
 5a4:	8f 4f       	sbci	r24, 0xFF	; 255
 5a6:	9f 4f       	sbci	r25, 0xFF	; 255
 5a8:	f0 68       	ori	r31, 0x80	; 128
 5aa:	3f 2e       	mov	r3, r31
 5ac:	2a e0       	ldi	r18, 0x0A	; 10
 5ae:	30 e0       	ldi	r19, 0x00	; 0
 5b0:	a3 01       	movw	r20, r6
 5b2:	1d d1       	rcall	.+570    	; 0x7ee <__ultoa_invert>
 5b4:	88 2e       	mov	r8, r24
 5b6:	86 18       	sub	r8, r6
 5b8:	44 c0       	rjmp	.+136    	; 0x642 <__stack+0x1e3>
 5ba:	85 37       	cpi	r24, 0x75	; 117
 5bc:	31 f4       	brne	.+12     	; 0x5ca <__stack+0x16b>
 5be:	23 2d       	mov	r18, r3
 5c0:	2f 7e       	andi	r18, 0xEF	; 239
 5c2:	b2 2e       	mov	r11, r18
 5c4:	2a e0       	ldi	r18, 0x0A	; 10
 5c6:	30 e0       	ldi	r19, 0x00	; 0
 5c8:	25 c0       	rjmp	.+74     	; 0x614 <__stack+0x1b5>
 5ca:	93 2d       	mov	r25, r3
 5cc:	99 7f       	andi	r25, 0xF9	; 249
 5ce:	b9 2e       	mov	r11, r25
 5d0:	8f 36       	cpi	r24, 0x6F	; 111
 5d2:	c1 f0       	breq	.+48     	; 0x604 <__stack+0x1a5>
 5d4:	18 f4       	brcc	.+6      	; 0x5dc <__stack+0x17d>
 5d6:	88 35       	cpi	r24, 0x58	; 88
 5d8:	79 f0       	breq	.+30     	; 0x5f8 <__stack+0x199>
 5da:	ae c0       	rjmp	.+348    	; 0x738 <__stack+0x2d9>
 5dc:	80 37       	cpi	r24, 0x70	; 112
 5de:	19 f0       	breq	.+6      	; 0x5e6 <__stack+0x187>
 5e0:	88 37       	cpi	r24, 0x78	; 120
 5e2:	21 f0       	breq	.+8      	; 0x5ec <__stack+0x18d>
 5e4:	a9 c0       	rjmp	.+338    	; 0x738 <__stack+0x2d9>
 5e6:	e9 2f       	mov	r30, r25
 5e8:	e0 61       	ori	r30, 0x10	; 16
 5ea:	be 2e       	mov	r11, r30
 5ec:	b4 fe       	sbrs	r11, 4
 5ee:	0d c0       	rjmp	.+26     	; 0x60a <__stack+0x1ab>
 5f0:	fb 2d       	mov	r31, r11
 5f2:	f4 60       	ori	r31, 0x04	; 4
 5f4:	bf 2e       	mov	r11, r31
 5f6:	09 c0       	rjmp	.+18     	; 0x60a <__stack+0x1ab>
 5f8:	34 fe       	sbrs	r3, 4
 5fa:	0a c0       	rjmp	.+20     	; 0x610 <__stack+0x1b1>
 5fc:	29 2f       	mov	r18, r25
 5fe:	26 60       	ori	r18, 0x06	; 6
 600:	b2 2e       	mov	r11, r18
 602:	06 c0       	rjmp	.+12     	; 0x610 <__stack+0x1b1>
 604:	28 e0       	ldi	r18, 0x08	; 8
 606:	30 e0       	ldi	r19, 0x00	; 0
 608:	05 c0       	rjmp	.+10     	; 0x614 <__stack+0x1b5>
 60a:	20 e1       	ldi	r18, 0x10	; 16
 60c:	30 e0       	ldi	r19, 0x00	; 0
 60e:	02 c0       	rjmp	.+4      	; 0x614 <__stack+0x1b5>
 610:	20 e1       	ldi	r18, 0x10	; 16
 612:	32 e0       	ldi	r19, 0x02	; 2
 614:	f8 01       	movw	r30, r16
 616:	b7 fe       	sbrs	r11, 7
 618:	07 c0       	rjmp	.+14     	; 0x628 <__stack+0x1c9>
 61a:	60 81       	ld	r22, Z
 61c:	71 81       	ldd	r23, Z+1	; 0x01
 61e:	82 81       	ldd	r24, Z+2	; 0x02
 620:	93 81       	ldd	r25, Z+3	; 0x03
 622:	0c 5f       	subi	r16, 0xFC	; 252
 624:	1f 4f       	sbci	r17, 0xFF	; 255
 626:	06 c0       	rjmp	.+12     	; 0x634 <__stack+0x1d5>
 628:	60 81       	ld	r22, Z
 62a:	71 81       	ldd	r23, Z+1	; 0x01
 62c:	80 e0       	ldi	r24, 0x00	; 0
 62e:	90 e0       	ldi	r25, 0x00	; 0
 630:	0e 5f       	subi	r16, 0xFE	; 254
 632:	1f 4f       	sbci	r17, 0xFF	; 255
 634:	a3 01       	movw	r20, r6
 636:	db d0       	rcall	.+438    	; 0x7ee <__ultoa_invert>
 638:	88 2e       	mov	r8, r24
 63a:	86 18       	sub	r8, r6
 63c:	fb 2d       	mov	r31, r11
 63e:	ff 77       	andi	r31, 0x7F	; 127
 640:	3f 2e       	mov	r3, r31
 642:	36 fe       	sbrs	r3, 6
 644:	0d c0       	rjmp	.+26     	; 0x660 <__stack+0x201>
 646:	23 2d       	mov	r18, r3
 648:	2e 7f       	andi	r18, 0xFE	; 254
 64a:	a2 2e       	mov	r10, r18
 64c:	89 14       	cp	r8, r9
 64e:	58 f4       	brcc	.+22     	; 0x666 <__stack+0x207>
 650:	34 fe       	sbrs	r3, 4
 652:	0b c0       	rjmp	.+22     	; 0x66a <__stack+0x20b>
 654:	32 fc       	sbrc	r3, 2
 656:	09 c0       	rjmp	.+18     	; 0x66a <__stack+0x20b>
 658:	83 2d       	mov	r24, r3
 65a:	8e 7e       	andi	r24, 0xEE	; 238
 65c:	a8 2e       	mov	r10, r24
 65e:	05 c0       	rjmp	.+10     	; 0x66a <__stack+0x20b>
 660:	b8 2c       	mov	r11, r8
 662:	a3 2c       	mov	r10, r3
 664:	03 c0       	rjmp	.+6      	; 0x66c <__stack+0x20d>
 666:	b8 2c       	mov	r11, r8
 668:	01 c0       	rjmp	.+2      	; 0x66c <__stack+0x20d>
 66a:	b9 2c       	mov	r11, r9
 66c:	a4 fe       	sbrs	r10, 4
 66e:	0f c0       	rjmp	.+30     	; 0x68e <__stack+0x22f>
 670:	fe 01       	movw	r30, r28
 672:	e8 0d       	add	r30, r8
 674:	f1 1d       	adc	r31, r1
 676:	80 81       	ld	r24, Z
 678:	80 33       	cpi	r24, 0x30	; 48
 67a:	21 f4       	brne	.+8      	; 0x684 <__stack+0x225>
 67c:	9a 2d       	mov	r25, r10
 67e:	99 7e       	andi	r25, 0xE9	; 233
 680:	a9 2e       	mov	r10, r25
 682:	09 c0       	rjmp	.+18     	; 0x696 <__stack+0x237>
 684:	a2 fe       	sbrs	r10, 2
 686:	06 c0       	rjmp	.+12     	; 0x694 <__stack+0x235>
 688:	b3 94       	inc	r11
 68a:	b3 94       	inc	r11
 68c:	04 c0       	rjmp	.+8      	; 0x696 <__stack+0x237>
 68e:	8a 2d       	mov	r24, r10
 690:	86 78       	andi	r24, 0x86	; 134
 692:	09 f0       	breq	.+2      	; 0x696 <__stack+0x237>
 694:	b3 94       	inc	r11
 696:	a3 fc       	sbrc	r10, 3
 698:	10 c0       	rjmp	.+32     	; 0x6ba <__stack+0x25b>
 69a:	a0 fe       	sbrs	r10, 0
 69c:	06 c0       	rjmp	.+12     	; 0x6aa <__stack+0x24b>
 69e:	b2 14       	cp	r11, r2
 6a0:	80 f4       	brcc	.+32     	; 0x6c2 <__stack+0x263>
 6a2:	28 0c       	add	r2, r8
 6a4:	92 2c       	mov	r9, r2
 6a6:	9b 18       	sub	r9, r11
 6a8:	0d c0       	rjmp	.+26     	; 0x6c4 <__stack+0x265>
 6aa:	b2 14       	cp	r11, r2
 6ac:	58 f4       	brcc	.+22     	; 0x6c4 <__stack+0x265>
 6ae:	b6 01       	movw	r22, r12
 6b0:	80 e2       	ldi	r24, 0x20	; 32
 6b2:	90 e0       	ldi	r25, 0x00	; 0
 6b4:	60 d0       	rcall	.+192    	; 0x776 <fputc>
 6b6:	b3 94       	inc	r11
 6b8:	f8 cf       	rjmp	.-16     	; 0x6aa <__stack+0x24b>
 6ba:	b2 14       	cp	r11, r2
 6bc:	18 f4       	brcc	.+6      	; 0x6c4 <__stack+0x265>
 6be:	2b 18       	sub	r2, r11
 6c0:	02 c0       	rjmp	.+4      	; 0x6c6 <__stack+0x267>
 6c2:	98 2c       	mov	r9, r8
 6c4:	21 2c       	mov	r2, r1
 6c6:	a4 fe       	sbrs	r10, 4
 6c8:	0f c0       	rjmp	.+30     	; 0x6e8 <__stack+0x289>
 6ca:	b6 01       	movw	r22, r12
 6cc:	80 e3       	ldi	r24, 0x30	; 48
 6ce:	90 e0       	ldi	r25, 0x00	; 0
 6d0:	52 d0       	rcall	.+164    	; 0x776 <fputc>
 6d2:	a2 fe       	sbrs	r10, 2
 6d4:	16 c0       	rjmp	.+44     	; 0x702 <__stack+0x2a3>
 6d6:	a1 fc       	sbrc	r10, 1
 6d8:	03 c0       	rjmp	.+6      	; 0x6e0 <__stack+0x281>
 6da:	88 e7       	ldi	r24, 0x78	; 120
 6dc:	90 e0       	ldi	r25, 0x00	; 0
 6de:	02 c0       	rjmp	.+4      	; 0x6e4 <__stack+0x285>
 6e0:	88 e5       	ldi	r24, 0x58	; 88
 6e2:	90 e0       	ldi	r25, 0x00	; 0
 6e4:	b6 01       	movw	r22, r12
 6e6:	0c c0       	rjmp	.+24     	; 0x700 <__stack+0x2a1>
 6e8:	8a 2d       	mov	r24, r10
 6ea:	86 78       	andi	r24, 0x86	; 134
 6ec:	51 f0       	breq	.+20     	; 0x702 <__stack+0x2a3>
 6ee:	a1 fe       	sbrs	r10, 1
 6f0:	02 c0       	rjmp	.+4      	; 0x6f6 <__stack+0x297>
 6f2:	8b e2       	ldi	r24, 0x2B	; 43
 6f4:	01 c0       	rjmp	.+2      	; 0x6f8 <__stack+0x299>
 6f6:	80 e2       	ldi	r24, 0x20	; 32
 6f8:	a7 fc       	sbrc	r10, 7
 6fa:	8d e2       	ldi	r24, 0x2D	; 45
 6fc:	b6 01       	movw	r22, r12
 6fe:	90 e0       	ldi	r25, 0x00	; 0
 700:	3a d0       	rcall	.+116    	; 0x776 <fputc>
 702:	89 14       	cp	r8, r9
 704:	30 f4       	brcc	.+12     	; 0x712 <__stack+0x2b3>
 706:	b6 01       	movw	r22, r12
 708:	80 e3       	ldi	r24, 0x30	; 48
 70a:	90 e0       	ldi	r25, 0x00	; 0
 70c:	34 d0       	rcall	.+104    	; 0x776 <fputc>
 70e:	9a 94       	dec	r9
 710:	f8 cf       	rjmp	.-16     	; 0x702 <__stack+0x2a3>
 712:	8a 94       	dec	r8
 714:	f3 01       	movw	r30, r6
 716:	e8 0d       	add	r30, r8
 718:	f1 1d       	adc	r31, r1
 71a:	80 81       	ld	r24, Z
 71c:	b6 01       	movw	r22, r12
 71e:	90 e0       	ldi	r25, 0x00	; 0
 720:	2a d0       	rcall	.+84     	; 0x776 <fputc>
 722:	81 10       	cpse	r8, r1
 724:	f6 cf       	rjmp	.-20     	; 0x712 <__stack+0x2b3>
 726:	22 20       	and	r2, r2
 728:	09 f4       	brne	.+2      	; 0x72c <__stack+0x2cd>
 72a:	4e ce       	rjmp	.-868    	; 0x3c8 <vfprintf+0x22>
 72c:	b6 01       	movw	r22, r12
 72e:	80 e2       	ldi	r24, 0x20	; 32
 730:	90 e0       	ldi	r25, 0x00	; 0
 732:	21 d0       	rcall	.+66     	; 0x776 <fputc>
 734:	2a 94       	dec	r2
 736:	f7 cf       	rjmp	.-18     	; 0x726 <__stack+0x2c7>
 738:	f6 01       	movw	r30, r12
 73a:	86 81       	ldd	r24, Z+6	; 0x06
 73c:	97 81       	ldd	r25, Z+7	; 0x07
 73e:	02 c0       	rjmp	.+4      	; 0x744 <__stack+0x2e5>
 740:	8f ef       	ldi	r24, 0xFF	; 255
 742:	9f ef       	ldi	r25, 0xFF	; 255
 744:	2b 96       	adiw	r28, 0x0b	; 11
 746:	e2 e1       	ldi	r30, 0x12	; 18
 748:	cc c0       	rjmp	.+408    	; 0x8e2 <__epilogue_restores__>

0000074a <strnlen_P>:
 74a:	fc 01       	movw	r30, r24
 74c:	05 90       	lpm	r0, Z+
 74e:	61 50       	subi	r22, 0x01	; 1
 750:	70 40       	sbci	r23, 0x00	; 0
 752:	01 10       	cpse	r0, r1
 754:	d8 f7       	brcc	.-10     	; 0x74c <strnlen_P+0x2>
 756:	80 95       	com	r24
 758:	90 95       	com	r25
 75a:	8e 0f       	add	r24, r30
 75c:	9f 1f       	adc	r25, r31
 75e:	08 95       	ret

00000760 <strnlen>:
 760:	fc 01       	movw	r30, r24
 762:	61 50       	subi	r22, 0x01	; 1
 764:	70 40       	sbci	r23, 0x00	; 0
 766:	01 90       	ld	r0, Z+
 768:	01 10       	cpse	r0, r1
 76a:	d8 f7       	brcc	.-10     	; 0x762 <strnlen+0x2>
 76c:	80 95       	com	r24
 76e:	90 95       	com	r25
 770:	8e 0f       	add	r24, r30
 772:	9f 1f       	adc	r25, r31
 774:	08 95       	ret

00000776 <fputc>:
 776:	0f 93       	push	r16
 778:	1f 93       	push	r17
 77a:	cf 93       	push	r28
 77c:	df 93       	push	r29
 77e:	fb 01       	movw	r30, r22
 780:	23 81       	ldd	r18, Z+3	; 0x03
 782:	21 fd       	sbrc	r18, 1
 784:	03 c0       	rjmp	.+6      	; 0x78c <fputc+0x16>
 786:	8f ef       	ldi	r24, 0xFF	; 255
 788:	9f ef       	ldi	r25, 0xFF	; 255
 78a:	2c c0       	rjmp	.+88     	; 0x7e4 <fputc+0x6e>
 78c:	22 ff       	sbrs	r18, 2
 78e:	16 c0       	rjmp	.+44     	; 0x7bc <fputc+0x46>
 790:	46 81       	ldd	r20, Z+6	; 0x06
 792:	57 81       	ldd	r21, Z+7	; 0x07
 794:	24 81       	ldd	r18, Z+4	; 0x04
 796:	35 81       	ldd	r19, Z+5	; 0x05
 798:	42 17       	cp	r20, r18
 79a:	53 07       	cpc	r21, r19
 79c:	44 f4       	brge	.+16     	; 0x7ae <fputc+0x38>
 79e:	a0 81       	ld	r26, Z
 7a0:	b1 81       	ldd	r27, Z+1	; 0x01
 7a2:	9d 01       	movw	r18, r26
 7a4:	2f 5f       	subi	r18, 0xFF	; 255
 7a6:	3f 4f       	sbci	r19, 0xFF	; 255
 7a8:	31 83       	std	Z+1, r19	; 0x01
 7aa:	20 83       	st	Z, r18
 7ac:	8c 93       	st	X, r24
 7ae:	26 81       	ldd	r18, Z+6	; 0x06
 7b0:	37 81       	ldd	r19, Z+7	; 0x07
 7b2:	2f 5f       	subi	r18, 0xFF	; 255
 7b4:	3f 4f       	sbci	r19, 0xFF	; 255
 7b6:	37 83       	std	Z+7, r19	; 0x07
 7b8:	26 83       	std	Z+6, r18	; 0x06
 7ba:	14 c0       	rjmp	.+40     	; 0x7e4 <fputc+0x6e>
 7bc:	8b 01       	movw	r16, r22
 7be:	ec 01       	movw	r28, r24
 7c0:	fb 01       	movw	r30, r22
 7c2:	00 84       	ldd	r0, Z+8	; 0x08
 7c4:	f1 85       	ldd	r31, Z+9	; 0x09
 7c6:	e0 2d       	mov	r30, r0
 7c8:	09 95       	icall
 7ca:	89 2b       	or	r24, r25
 7cc:	e1 f6       	brne	.-72     	; 0x786 <fputc+0x10>
 7ce:	d8 01       	movw	r26, r16
 7d0:	16 96       	adiw	r26, 0x06	; 6
 7d2:	8d 91       	ld	r24, X+
 7d4:	9c 91       	ld	r25, X
 7d6:	17 97       	sbiw	r26, 0x07	; 7
 7d8:	01 96       	adiw	r24, 0x01	; 1
 7da:	17 96       	adiw	r26, 0x07	; 7
 7dc:	9c 93       	st	X, r25
 7de:	8e 93       	st	-X, r24
 7e0:	16 97       	sbiw	r26, 0x06	; 6
 7e2:	ce 01       	movw	r24, r28
 7e4:	df 91       	pop	r29
 7e6:	cf 91       	pop	r28
 7e8:	1f 91       	pop	r17
 7ea:	0f 91       	pop	r16
 7ec:	08 95       	ret

000007ee <__ultoa_invert>:
 7ee:	fa 01       	movw	r30, r20
 7f0:	aa 27       	eor	r26, r26
 7f2:	28 30       	cpi	r18, 0x08	; 8
 7f4:	51 f1       	breq	.+84     	; 0x84a <__ultoa_invert+0x5c>
 7f6:	20 31       	cpi	r18, 0x10	; 16
 7f8:	81 f1       	breq	.+96     	; 0x85a <__ultoa_invert+0x6c>
 7fa:	e8 94       	clt
 7fc:	6f 93       	push	r22
 7fe:	6e 7f       	andi	r22, 0xFE	; 254
 800:	6e 5f       	subi	r22, 0xFE	; 254
 802:	7f 4f       	sbci	r23, 0xFF	; 255
 804:	8f 4f       	sbci	r24, 0xFF	; 255
 806:	9f 4f       	sbci	r25, 0xFF	; 255
 808:	af 4f       	sbci	r26, 0xFF	; 255
 80a:	b1 e0       	ldi	r27, 0x01	; 1
 80c:	3e d0       	rcall	.+124    	; 0x88a <__ultoa_invert+0x9c>
 80e:	b4 e0       	ldi	r27, 0x04	; 4
 810:	3c d0       	rcall	.+120    	; 0x88a <__ultoa_invert+0x9c>
 812:	67 0f       	add	r22, r23
 814:	78 1f       	adc	r23, r24
 816:	89 1f       	adc	r24, r25
 818:	9a 1f       	adc	r25, r26
 81a:	a1 1d       	adc	r26, r1
 81c:	68 0f       	add	r22, r24
 81e:	79 1f       	adc	r23, r25
 820:	8a 1f       	adc	r24, r26
 822:	91 1d       	adc	r25, r1
 824:	a1 1d       	adc	r26, r1
 826:	6a 0f       	add	r22, r26
 828:	71 1d       	adc	r23, r1
 82a:	81 1d       	adc	r24, r1
 82c:	91 1d       	adc	r25, r1
 82e:	a1 1d       	adc	r26, r1
 830:	20 d0       	rcall	.+64     	; 0x872 <__ultoa_invert+0x84>
 832:	09 f4       	brne	.+2      	; 0x836 <__ultoa_invert+0x48>
 834:	68 94       	set
 836:	3f 91       	pop	r19
 838:	2a e0       	ldi	r18, 0x0A	; 10
 83a:	26 9f       	mul	r18, r22
 83c:	11 24       	eor	r1, r1
 83e:	30 19       	sub	r19, r0
 840:	30 5d       	subi	r19, 0xD0	; 208
 842:	31 93       	st	Z+, r19
 844:	de f6       	brtc	.-74     	; 0x7fc <__ultoa_invert+0xe>
 846:	cf 01       	movw	r24, r30
 848:	08 95       	ret
 84a:	46 2f       	mov	r20, r22
 84c:	47 70       	andi	r20, 0x07	; 7
 84e:	40 5d       	subi	r20, 0xD0	; 208
 850:	41 93       	st	Z+, r20
 852:	b3 e0       	ldi	r27, 0x03	; 3
 854:	0f d0       	rcall	.+30     	; 0x874 <__ultoa_invert+0x86>
 856:	c9 f7       	brne	.-14     	; 0x84a <__ultoa_invert+0x5c>
 858:	f6 cf       	rjmp	.-20     	; 0x846 <__ultoa_invert+0x58>
 85a:	46 2f       	mov	r20, r22
 85c:	4f 70       	andi	r20, 0x0F	; 15
 85e:	40 5d       	subi	r20, 0xD0	; 208
 860:	4a 33       	cpi	r20, 0x3A	; 58
 862:	18 f0       	brcs	.+6      	; 0x86a <__ultoa_invert+0x7c>
 864:	49 5d       	subi	r20, 0xD9	; 217
 866:	31 fd       	sbrc	r19, 1
 868:	40 52       	subi	r20, 0x20	; 32
 86a:	41 93       	st	Z+, r20
 86c:	02 d0       	rcall	.+4      	; 0x872 <__ultoa_invert+0x84>
 86e:	a9 f7       	brne	.-22     	; 0x85a <__ultoa_invert+0x6c>
 870:	ea cf       	rjmp	.-44     	; 0x846 <__ultoa_invert+0x58>
 872:	b4 e0       	ldi	r27, 0x04	; 4
 874:	a6 95       	lsr	r26
 876:	97 95       	ror	r25
 878:	87 95       	ror	r24
 87a:	77 95       	ror	r23
 87c:	67 95       	ror	r22
 87e:	ba 95       	dec	r27
 880:	c9 f7       	brne	.-14     	; 0x874 <__ultoa_invert+0x86>
 882:	00 97       	sbiw	r24, 0x00	; 0
 884:	61 05       	cpc	r22, r1
 886:	71 05       	cpc	r23, r1
 888:	08 95       	ret
 88a:	9b 01       	movw	r18, r22
 88c:	ac 01       	movw	r20, r24
 88e:	0a 2e       	mov	r0, r26
 890:	06 94       	lsr	r0
 892:	57 95       	ror	r21
 894:	47 95       	ror	r20
 896:	37 95       	ror	r19
 898:	27 95       	ror	r18
 89a:	ba 95       	dec	r27
 89c:	c9 f7       	brne	.-14     	; 0x890 <__ultoa_invert+0xa2>
 89e:	62 0f       	add	r22, r18
 8a0:	73 1f       	adc	r23, r19
 8a2:	84 1f       	adc	r24, r20
 8a4:	95 1f       	adc	r25, r21
 8a6:	a0 1d       	adc	r26, r0
 8a8:	08 95       	ret

000008aa <__prologue_saves__>:
 8aa:	2f 92       	push	r2
 8ac:	3f 92       	push	r3
 8ae:	4f 92       	push	r4
 8b0:	5f 92       	push	r5
 8b2:	6f 92       	push	r6
 8b4:	7f 92       	push	r7
 8b6:	8f 92       	push	r8
 8b8:	9f 92       	push	r9
 8ba:	af 92       	push	r10
 8bc:	bf 92       	push	r11
 8be:	cf 92       	push	r12
 8c0:	df 92       	push	r13
 8c2:	ef 92       	push	r14
 8c4:	ff 92       	push	r15
 8c6:	0f 93       	push	r16
 8c8:	1f 93       	push	r17
 8ca:	cf 93       	push	r28
 8cc:	df 93       	push	r29
 8ce:	cd b7       	in	r28, 0x3d	; 61
 8d0:	de b7       	in	r29, 0x3e	; 62
 8d2:	ca 1b       	sub	r28, r26
 8d4:	db 0b       	sbc	r29, r27
 8d6:	0f b6       	in	r0, 0x3f	; 63
 8d8:	f8 94       	cli
 8da:	de bf       	out	0x3e, r29	; 62
 8dc:	0f be       	out	0x3f, r0	; 63
 8de:	cd bf       	out	0x3d, r28	; 61
 8e0:	09 94       	ijmp

000008e2 <__epilogue_restores__>:
 8e2:	2a 88       	ldd	r2, Y+18	; 0x12
 8e4:	39 88       	ldd	r3, Y+17	; 0x11
 8e6:	48 88       	ldd	r4, Y+16	; 0x10
 8e8:	5f 84       	ldd	r5, Y+15	; 0x0f
 8ea:	6e 84       	ldd	r6, Y+14	; 0x0e
 8ec:	7d 84       	ldd	r7, Y+13	; 0x0d
 8ee:	8c 84       	ldd	r8, Y+12	; 0x0c
 8f0:	9b 84       	ldd	r9, Y+11	; 0x0b
 8f2:	aa 84       	ldd	r10, Y+10	; 0x0a
 8f4:	b9 84       	ldd	r11, Y+9	; 0x09
 8f6:	c8 84       	ldd	r12, Y+8	; 0x08
 8f8:	df 80       	ldd	r13, Y+7	; 0x07
 8fa:	ee 80       	ldd	r14, Y+6	; 0x06
 8fc:	fd 80       	ldd	r15, Y+5	; 0x05
 8fe:	0c 81       	ldd	r16, Y+4	; 0x04
 900:	1b 81       	ldd	r17, Y+3	; 0x03
 902:	aa 81       	ldd	r26, Y+2	; 0x02
 904:	b9 81       	ldd	r27, Y+1	; 0x01
 906:	ce 0f       	add	r28, r30
 908:	d1 1d       	adc	r29, r1
 90a:	0f b6       	in	r0, 0x3f	; 63
 90c:	f8 94       	cli
 90e:	de bf       	out	0x3e, r29	; 62
 910:	0f be       	out	0x3f, r0	; 63
 912:	cd bf       	out	0x3d, r28	; 61
 914:	ed 01       	movw	r28, r26
 916:	08 95       	ret

00000918 <_exit>:
 918:	f8 94       	cli

0000091a <__stop_program>:
 91a:	ff cf       	rjmp	.-2      	; 0x91a <__stop_program>
