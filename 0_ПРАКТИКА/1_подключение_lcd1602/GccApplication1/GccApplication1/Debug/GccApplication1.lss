
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000ec  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001a  00800060  000000ec  00000160  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000017a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000001ac  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  000001e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000673  00000000  00000000  00000238  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000562  00000000  00000000  000008ab  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002c3  00000000  00000000  00000e0d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000098  00000000  00000000  000010d0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000031c  00000000  00000000  00001168  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000c4  00000000  00000000  00001484  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000040  00000000  00000000  00001548  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	24 c0       	rjmp	.+72     	; 0x4c <__bad_interrupt>
   4:	23 c0       	rjmp	.+70     	; 0x4c <__bad_interrupt>
   6:	22 c0       	rjmp	.+68     	; 0x4c <__bad_interrupt>
   8:	21 c0       	rjmp	.+66     	; 0x4c <__bad_interrupt>
   a:	20 c0       	rjmp	.+64     	; 0x4c <__bad_interrupt>
   c:	1f c0       	rjmp	.+62     	; 0x4c <__bad_interrupt>
   e:	1e c0       	rjmp	.+60     	; 0x4c <__bad_interrupt>
  10:	1d c0       	rjmp	.+58     	; 0x4c <__bad_interrupt>
  12:	1c c0       	rjmp	.+56     	; 0x4c <__bad_interrupt>
  14:	1b c0       	rjmp	.+54     	; 0x4c <__bad_interrupt>
  16:	1a c0       	rjmp	.+52     	; 0x4c <__bad_interrupt>
  18:	19 c0       	rjmp	.+50     	; 0x4c <__bad_interrupt>
  1a:	18 c0       	rjmp	.+48     	; 0x4c <__bad_interrupt>
  1c:	17 c0       	rjmp	.+46     	; 0x4c <__bad_interrupt>
  1e:	16 c0       	rjmp	.+44     	; 0x4c <__bad_interrupt>
  20:	15 c0       	rjmp	.+42     	; 0x4c <__bad_interrupt>
  22:	14 c0       	rjmp	.+40     	; 0x4c <__bad_interrupt>
  24:	13 c0       	rjmp	.+38     	; 0x4c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	ec ee       	ldi	r30, 0xEC	; 236
  3a:	f0 e0       	ldi	r31, 0x00	; 0
  3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0
  42:	aa 37       	cpi	r26, 0x7A	; 122
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>
  48:	40 d0       	rcall	.+128    	; 0xca <main>
  4a:	4e c0       	rjmp	.+156    	; 0xe8 <_exit>

0000004c <__bad_interrupt>:
  4c:	d9 cf       	rjmp	.-78     	; 0x0 <__vectors>

0000004e <execute_cmd>:
}

void clear_lcd()
{
	PORTD = 0x01;
	execute_cmd();
  4e:	83 b7       	in	r24, 0x33	; 51
  50:	81 60       	ori	r24, 0x01	; 1
  52:	83 bf       	out	0x33, r24	; 51
  54:	03 c0       	rjmp	.+6      	; 0x5c <execute_cmd+0xe>
  56:	85 b3       	in	r24, 0x15	; 21
  58:	84 60       	ori	r24, 0x04	; 4
  5a:	85 bb       	out	0x15, r24	; 21
  5c:	82 b7       	in	r24, 0x32	; 50
  5e:	8f 3f       	cpi	r24, 0xFF	; 255
  60:	d1 f7       	brne	.-12     	; 0x56 <execute_cmd+0x8>
  62:	85 b3       	in	r24, 0x15	; 21
  64:	8b 7f       	andi	r24, 0xFB	; 251
  66:	85 bb       	out	0x15, r24	; 21
  68:	12 be       	out	0x32, r1	; 50
  6a:	83 b7       	in	r24, 0x33	; 51
  6c:	8e 7f       	andi	r24, 0xFE	; 254
  6e:	83 bf       	out	0x33, r24	; 51
  70:	08 95       	ret

00000072 <lcd_init>:
  72:	88 e3       	ldi	r24, 0x38	; 56
  74:	82 bb       	out	0x12, r24	; 18
  76:	eb df       	rcall	.-42     	; 0x4e <execute_cmd>
  78:	8e e0       	ldi	r24, 0x0E	; 14
  7a:	82 bb       	out	0x12, r24	; 18
  7c:	e8 df       	rcall	.-48     	; 0x4e <execute_cmd>
  7e:	86 e0       	ldi	r24, 0x06	; 6
  80:	82 bb       	out	0x12, r24	; 18
  82:	e5 df       	rcall	.-54     	; 0x4e <execute_cmd>
  84:	08 95       	ret

00000086 <send_char>:
  86:	82 bb       	out	0x12, r24	; 18
  88:	e2 df       	rcall	.-60     	; 0x4e <execute_cmd>
  8a:	08 95       	ret

0000008c <send_text>:
  8c:	0f 93       	push	r16
  8e:	1f 93       	push	r17
  90:	cf 93       	push	r28
  92:	df 93       	push	r29
  94:	8c 01       	movw	r16, r24
  96:	85 b3       	in	r24, 0x15	; 21
  98:	81 60       	ori	r24, 0x01	; 1
  9a:	85 bb       	out	0x15, r24	; 21
  9c:	c0 e0       	ldi	r28, 0x00	; 0
  9e:	d0 e0       	ldi	r29, 0x00	; 0
  a0:	02 c0       	rjmp	.+4      	; 0xa6 <send_text+0x1a>
  a2:	f1 df       	rcall	.-30     	; 0x86 <send_char>
  a4:	21 96       	adiw	r28, 0x01	; 1
  a6:	f8 01       	movw	r30, r16
  a8:	ec 0f       	add	r30, r28
  aa:	fd 1f       	adc	r31, r29
  ac:	80 81       	ld	r24, Z
  ae:	81 11       	cpse	r24, r1
  b0:	f8 cf       	rjmp	.-16     	; 0xa2 <send_text+0x16>
  b2:	85 b3       	in	r24, 0x15	; 21
  b4:	8e 7f       	andi	r24, 0xFE	; 254
  b6:	85 bb       	out	0x15, r24	; 21
  b8:	df 91       	pop	r29
  ba:	cf 91       	pop	r28
  bc:	1f 91       	pop	r17
  be:	0f 91       	pop	r16
  c0:	08 95       	ret

000000c2 <next_line>:
  c2:	80 ec       	ldi	r24, 0xC0	; 192
  c4:	82 bb       	out	0x12, r24	; 18
  c6:	c3 df       	rcall	.-122    	; 0x4e <execute_cmd>
  c8:	08 95       	ret

000000ca <main>:
}


int main(void)
{	
	DDRC = (1 << PC0) | (1 << PC1) | (1 << PC2);
  ca:	87 e0       	ldi	r24, 0x07	; 7
  cc:	84 bb       	out	0x14, r24	; 20
	DDRD = 0b11111111;
  ce:	8f ef       	ldi	r24, 0xFF	; 255
  d0:	81 bb       	out	0x11, r24	; 17
	lcd_init();
  d2:	cf df       	rcall	.-98     	; 0x72 <lcd_init>
	send_text("Hello world!");
  d4:	80 e6       	ldi	r24, 0x60	; 96
  d6:	90 e0       	ldi	r25, 0x00	; 0
  d8:	d9 df       	rcall	.-78     	; 0x8c <send_text>
	next_line();
  da:	f3 df       	rcall	.-26     	; 0xc2 <next_line>
	send_text("I'm Gokhlia");
  dc:	8d e6       	ldi	r24, 0x6D	; 109
  de:	90 e0       	ldi	r25, 0x00	; 0
  e0:	d5 df       	rcall	.-86     	; 0x8c <send_text>
}
  e2:	80 e0       	ldi	r24, 0x00	; 0
  e4:	90 e0       	ldi	r25, 0x00	; 0
  e6:	08 95       	ret

000000e8 <_exit>:
  e8:	f8 94       	cli

000000ea <__stop_program>:
  ea:	ff cf       	rjmp	.-2      	; 0xea <__stop_program>
